// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Differential.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Differential.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Differential {
class chanelDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<chanel> {
} _chanel_default_instance_;
class BasicResultItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BasicResultItem> {
} _BasicResultItem_default_instance_;
class TestItem_QDCurrentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestItem_QDCurrent> {
} _TestItem_QDCurrent_default_instance_;
class TestItem_QDCurrent_ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestItem_QDCurrent_Result> {
} _TestItem_QDCurrent_Result_default_instance_;
class TestItem_ZDRatioDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestItem_ZDRatio> {
} _TestItem_ZDRatio_default_instance_;
class TestItem_ZDRatio_ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestItem_ZDRatio_Result> {
} _TestItem_ZDRatio_Result_default_instance_;
class HarmonicRatioDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HarmonicRatio> {
} _HarmonicRatio_default_instance_;
class HarmonicRatio_ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HarmonicRatio_Result> {
} _HarmonicRatio_Result_default_instance_;
class TestItem_ActionTimeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestItem_ActionTime> {
} _TestItem_ActionTime_default_instance_;
class TestItem_ActionTime_ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestItem_ActionTime_Result> {
} _TestItem_ActionTime_Result_default_instance_;
class testItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<testItem> {
} _testItem_default_instance_;
class testItem_ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<testItem_Result> {
} _testItem_Result_default_instance_;
class ItemsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Items> {
} _Items_default_instance_;
class CommonParaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CommonPara> {
} _CommonPara_default_instance_;
class ProtectSettingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProtectSetting> {
} _ProtectSetting_default_instance_;
class SwitchParaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SwitchPara> {
} _SwitchPara_default_instance_;

namespace protobuf_Differential_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[11];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chanel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chanel, famptitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chanel, fphase_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicResultItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicResultItem, ia_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicResultItem, ib_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicResultItem, ic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicResultItem, iap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicResultItem, ibp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicResultItem, icp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent, iindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent, ir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent, fup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent, fdown_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent_Result, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent_Result, iindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent_Result, basic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent_Result, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent_Result, bend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_QDCurrent_Result, nibinstate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio, itypeindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio, iindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio, ir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio, fup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio, fdown_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio_Result, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio_Result, itypeindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio_Result, iindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio_Result, basic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio_Result, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio_Result, bend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ZDRatio_Result, nibinstate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio, iindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio, nham_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio, fstart_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio, fend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio_Result, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio_Result, iindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio_Result, basic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio_Result, ir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio_Result, k_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio_Result, bend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmonicRatio_Result, nibinstate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime, iindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime, ir_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime_Result, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime_Result, iindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime_Result, basic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime_Result, fid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime_Result, ftime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime_Result, bend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem_ActionTime_Result, nibinstate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem, oqdcurrent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem, oactiontime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem, ozdratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem, oharmnonicratio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem_Result, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem_Result, oqdres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem_Result, ozdres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem_Result, oharmres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(testItem_Result, oactionres_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, ocomm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, oswitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, oprotectset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, oitems_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Items, outputtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ed_v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ed_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ed_hz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, pretime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, prefaulttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, faulttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, balanceparacacutype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, sn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, uh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, um_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ul_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ctph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ctpm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ctpl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ctsh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ctsm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ctsl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, kph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, kpm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, kpl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, windh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, windm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, windl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, anglemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, windside_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, connmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, jxfactor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, serachmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, idequ_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, equation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, k1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, k2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, phase_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, reso_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ugroup1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ugroup2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, axis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, insel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, inom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, isd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, icdqd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, kneepoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, ip1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, ip2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, ip3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, kid1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, kid2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, kid3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, kid4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, kxb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, kxb3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtectSetting, kxb5_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ika_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ikb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ikc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ikd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ike_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ikf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ikg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ikh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, iki_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ikj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ilogic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, iout1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, iout2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, iout3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, iout4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, iout5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, iout6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, iout7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, iout8_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(chanel)},
  { 6, -1, sizeof(BasicResultItem)},
  { 16, -1, sizeof(TestItem_QDCurrent)},
  { 25, -1, sizeof(TestItem_QDCurrent_Result)},
  { 35, -1, sizeof(TestItem_ZDRatio)},
  { 45, -1, sizeof(TestItem_ZDRatio_Result)},
  { 56, -1, sizeof(HarmonicRatio)},
  { 66, -1, sizeof(HarmonicRatio_Result)},
  { 77, -1, sizeof(TestItem_ActionTime)},
  { 85, -1, sizeof(TestItem_ActionTime_Result)},
  { 96, -1, sizeof(testItem)},
  { 105, -1, sizeof(testItem_Result)},
  { 114, -1, sizeof(Items)},
  { 123, -1, sizeof(CommonPara)},
  { 163, -1, sizeof(ProtectSetting)},
  { 183, -1, sizeof(SwitchPara)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_chanel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BasicResultItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestItem_QDCurrent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestItem_QDCurrent_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestItem_ZDRatio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestItem_ZDRatio_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HarmonicRatio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HarmonicRatio_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestItem_ActionTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestItem_ActionTime_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_testItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_testItem_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Items_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CommonPara_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProtectSetting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SwitchPara_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Differential.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace

void TableStruct::Shutdown() {
  _chanel_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _BasicResultItem_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _TestItem_QDCurrent_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _TestItem_QDCurrent_Result_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _TestItem_ZDRatio_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _TestItem_ZDRatio_Result_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _HarmonicRatio_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _HarmonicRatio_Result_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _TestItem_ActionTime_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _TestItem_ActionTime_Result_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _testItem_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _testItem_Result_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _Items_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _CommonPara_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _ProtectSetting_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _SwitchPara_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _chanel_default_instance_.DefaultConstruct();
  _BasicResultItem_default_instance_.DefaultConstruct();
  _TestItem_QDCurrent_default_instance_.DefaultConstruct();
  _TestItem_QDCurrent_Result_default_instance_.DefaultConstruct();
  _TestItem_ZDRatio_default_instance_.DefaultConstruct();
  _TestItem_ZDRatio_Result_default_instance_.DefaultConstruct();
  _HarmonicRatio_default_instance_.DefaultConstruct();
  _HarmonicRatio_Result_default_instance_.DefaultConstruct();
  _TestItem_ActionTime_default_instance_.DefaultConstruct();
  _TestItem_ActionTime_Result_default_instance_.DefaultConstruct();
  _testItem_default_instance_.DefaultConstruct();
  _testItem_Result_default_instance_.DefaultConstruct();
  _Items_default_instance_.DefaultConstruct();
  _CommonPara_default_instance_.DefaultConstruct();
  _ProtectSetting_default_instance_.DefaultConstruct();
  _SwitchPara_default_instance_.DefaultConstruct();
  _BasicResultItem_default_instance_.get_mutable()->ia_ = const_cast< ::Differential::chanel*>(
      ::Differential::chanel::internal_default_instance());
  _BasicResultItem_default_instance_.get_mutable()->ib_ = const_cast< ::Differential::chanel*>(
      ::Differential::chanel::internal_default_instance());
  _BasicResultItem_default_instance_.get_mutable()->ic_ = const_cast< ::Differential::chanel*>(
      ::Differential::chanel::internal_default_instance());
  _BasicResultItem_default_instance_.get_mutable()->iap_ = const_cast< ::Differential::chanel*>(
      ::Differential::chanel::internal_default_instance());
  _BasicResultItem_default_instance_.get_mutable()->ibp_ = const_cast< ::Differential::chanel*>(
      ::Differential::chanel::internal_default_instance());
  _BasicResultItem_default_instance_.get_mutable()->icp_ = const_cast< ::Differential::chanel*>(
      ::Differential::chanel::internal_default_instance());
  _TestItem_QDCurrent_Result_default_instance_.get_mutable()->basic_ = const_cast< ::Differential::BasicResultItem*>(
      ::Differential::BasicResultItem::internal_default_instance());
  _TestItem_ZDRatio_Result_default_instance_.get_mutable()->basic_ = const_cast< ::Differential::BasicResultItem*>(
      ::Differential::BasicResultItem::internal_default_instance());
  _HarmonicRatio_Result_default_instance_.get_mutable()->basic_ = const_cast< ::Differential::BasicResultItem*>(
      ::Differential::BasicResultItem::internal_default_instance());
  _TestItem_ActionTime_Result_default_instance_.get_mutable()->basic_ = const_cast< ::Differential::BasicResultItem*>(
      ::Differential::BasicResultItem::internal_default_instance());
  _testItem_default_instance_.get_mutable()->oqdcurrent_ = const_cast< ::Differential::TestItem_QDCurrent*>(
      ::Differential::TestItem_QDCurrent::internal_default_instance());
  _testItem_default_instance_.get_mutable()->oactiontime_ = const_cast< ::Differential::TestItem_ActionTime*>(
      ::Differential::TestItem_ActionTime::internal_default_instance());
  _testItem_default_instance_.get_mutable()->ozdratio_ = const_cast< ::Differential::TestItem_ZDRatio*>(
      ::Differential::TestItem_ZDRatio::internal_default_instance());
  _testItem_default_instance_.get_mutable()->oharmnonicratio_ = const_cast< ::Differential::HarmonicRatio*>(
      ::Differential::HarmonicRatio::internal_default_instance());
  _testItem_Result_default_instance_.get_mutable()->oqdres_ = const_cast< ::Differential::TestItem_QDCurrent_Result*>(
      ::Differential::TestItem_QDCurrent_Result::internal_default_instance());
  _testItem_Result_default_instance_.get_mutable()->ozdres_ = const_cast< ::Differential::TestItem_ZDRatio_Result*>(
      ::Differential::TestItem_ZDRatio_Result::internal_default_instance());
  _testItem_Result_default_instance_.get_mutable()->oharmres_ = const_cast< ::Differential::HarmonicRatio_Result*>(
      ::Differential::HarmonicRatio_Result::internal_default_instance());
  _testItem_Result_default_instance_.get_mutable()->oactionres_ = const_cast< ::Differential::TestItem_ActionTime_Result*>(
      ::Differential::TestItem_ActionTime_Result::internal_default_instance());
  _Items_default_instance_.get_mutable()->ocomm_ = const_cast< ::Differential::CommonPara*>(
      ::Differential::CommonPara::internal_default_instance());
  _Items_default_instance_.get_mutable()->oswitch_ = const_cast< ::Differential::SwitchPara*>(
      ::Differential::SwitchPara::internal_default_instance());
  _Items_default_instance_.get_mutable()->oprotectset_ = const_cast< ::Differential::ProtectSetting*>(
      ::Differential::ProtectSetting::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022Differential.proto\022\014Differential\",\n\006ch"
      "anel\022\022\n\nfamptitude\030\001 \001(\002\022\016\n\006fphase\030\002 \001(\002"
      "\"\340\001\n\017BasicResultItem\022 \n\002Ia\030\001 \001(\0132\024.Diffe"
      "rential.chanel\022 \n\002Ib\030\002 \001(\0132\024.Differentia"
      "l.chanel\022 \n\002Ic\030\003 \001(\0132\024.Differential.chan"
      "el\022!\n\003Iap\030\004 \001(\0132\024.Differential.chanel\022!\n"
      "\003Ibp\030\005 \001(\0132\024.Differential.chanel\022!\n\003Icp\030"
      "\006 \001(\0132\024.Differential.chanel\"{\n\022TestItem_"
      "QDCurrent\022-\n\010itemtype\030\001 \001(\0162\033.Differenti"
      "al.TestItem_type\022\016\n\006iIndex\030\002 \001(\r\022\n\n\002Ir\030\003"
      " \001(\002\022\013\n\003fUp\030\004 \001(\002\022\r\n\005fDown\030\005 \001(\002\"\266\001\n\031Tes"
      "tItem_QDCurrent_Result\022-\n\010itemtype\030\001 \001(\016"
      "2\033.Differential.TestItem_type\022\016\n\006iIndex\030"
      "\002 \001(\r\022,\n\005basic\030\003 \001(\0132\035.Differential.Basi"
      "cResultItem\022\n\n\002Id\030\004 \001(\002\022\014\n\004bEnd\030\005 \001(\010\022\022\n"
      "\nnibinstate\030\007 \001(\r\"\215\001\n\020TestItem_ZDRatio\022-"
      "\n\010itemtype\030\001 \001(\0162\033.Differential.TestItem"
      "_type\022\022\n\niTypeIndex\030\002 \001(\r\022\016\n\006iIndex\030\003 \001("
      "\r\022\n\n\002Ir\030\004 \001(\002\022\013\n\003fUp\030\005 \001(\002\022\r\n\005fDown\030\006 \001("
      "\002\"\310\001\n\027TestItem_ZDRatio_Result\022-\n\010itemtyp"
      "e\030\001 \001(\0162\033.Differential.TestItem_type\022\022\n\n"
      "iTypeIndex\030\002 \001(\r\022\016\n\006iIndex\030\003 \001(\r\022,\n\005basi"
      "c\030\004 \001(\0132\035.Differential.BasicResultItem\022\n"
      "\n\002Id\030\005 \001(\002\022\014\n\004bEnd\030\006 \001(\010\022\022\n\nnibinstate\030\007"
      " \001(\r\"\206\001\n\rHarmonicRatio\022-\n\010itemtype\030\001 \001(\016"
      "2\033.Differential.TestItem_type\022\016\n\006iIndex\030"
      "\002 \001(\r\022\n\n\002Id\030\003 \001(\002\022\014\n\004nHam\030\004 \001(\r\022\016\n\006fStar"
      "t\030\005 \001(\002\022\014\n\004fEnd\030\006 \001(\002\"\274\001\n\024HarmonicRatio_"
      "Result\022-\n\010itemtype\030\001 \001(\0162\033.Differential."
      "TestItem_type\022\016\n\006iIndex\030\002 \001(\r\022,\n\005basic\030\003"
      " \001(\0132\035.Differential.BasicResultItem\022\n\n\002I"
      "r\030\004 \001(\002\022\t\n\001K\030\005 \001(\002\022\014\n\004bEnd\030\006 \001(\010\022\022\n\nnibi"
      "nstate\030\007 \001(\r\"l\n\023TestItem_ActionTime\022-\n\010i"
      "temtype\030\001 \001(\0162\033.Differential.TestItem_ty"
      "pe\022\016\n\006iIndex\030\002 \001(\r\022\n\n\002Id\030\003 \001(\002\022\n\n\002Ir\030\004 \001"
      "(\002\"\307\001\n\032TestItem_ActionTime_Result\022-\n\010ite"
      "mtype\030\001 \001(\0162\033.Differential.TestItem_type"
      "\022\016\n\006iIndex\030\002 \001(\r\022,\n\005basic\030\003 \001(\0132\035.Differ"
      "ential.BasicResultItem\022\013\n\003fId\030\004 \001(\002\022\r\n\005f"
      "time\030\005 \001(\002\022\014\n\004bEnd\030\006 \001(\010\022\022\n\nnibinstate\030\007"
      " \001(\r\"\217\002\n\010testItem\022-\n\010itemtype\030\001 \001(\0162\033.Di"
      "fferential.TestItem_type\0224\n\noQdcurrent\030\002"
      " \001(\0132 .Differential.TestItem_QDCurrent\0226"
      "\n\013oActionTime\030\003 \001(\0132!.Differential.TestI"
      "tem_ActionTime\0220\n\010oZDRatio\030\004 \001(\0132\036.Diffe"
      "rential.TestItem_ZDRatio\0224\n\017oHarmnonicRa"
      "tio\030\005 \001(\0132\033.Differential.HarmonicRatio\"\244"
      "\002\n\017testItem_Result\022-\n\010itemtype\030\001 \001(\0162\033.D"
      "ifferential.TestItem_type\0227\n\006oQdRes\030\002 \001("
      "\0132\'.Differential.TestItem_QDCurrent_Resu"
      "lt\0225\n\006oZdRes\030\003 \001(\0132%.Differential.TestIt"
      "em_ZDRatio_Result\0224\n\010oHarmRes\030\004 \001(\0132\".Di"
      "fferential.HarmonicRatio_Result\022<\n\noActi"
      "onRes\030\005 \001(\0132(.Differential.TestItem_Acti"
      "onTime_Result\"\344\001\n\005Items\022\'\n\005oComm\030\001 \001(\0132\030"
      ".Differential.CommonPara\022)\n\007oSwitch\030\002 \001("
      "\0132\030.Differential.SwitchPara\0221\n\013oProtectS"
      "et\030\003 \001(\0132\034.Differential.ProtectSetting\022&"
      "\n\006oItems\030\004 \003(\0132\026.Differential.testItem\022,"
      "\n\noutputType\030\005 \001(\0162\030.Differential.OutPut"
      "Type\"\254\006\n\nCommonPara\022\014\n\004ED_V\030\001 \001(\002\022\014\n\004ED_"
      "I\030\002 \001(\002\022\r\n\005ED_Hz\030\003 \001(\002\022\017\n\007PreTime\030\004 \001(\002\022"
      "\024\n\014PrefaultTime\030\005 \001(\002\022\021\n\tFaultTime\030\006 \001(\002"
      "\022\033\n\023BalanceParaCacuType\030\007 \001(\r\022\n\n\002SN\030\010 \001("
      "\002\022\n\n\002Uh\030\t \001(\002\022\n\n\002Um\030\n \001(\002\022\n\n\002Ul\030\013 \001(\002\022\014\n"
      "\004CTPh\030\014 \001(\002\022\014\n\004CTPm\030\r \001(\002\022\014\n\004CTPl\030\016 \001(\002\022"
      "\014\n\004CTSh\030\017 \001(\002\022\014\n\004CTSm\030\020 \001(\002\022\014\n\004CTSl\030\021 \001("
      "\002\022\013\n\003Kph\030\022 \001(\002\022\013\n\003Kpm\030\023 \001(\002\022\013\n\003Kpl\030\024 \001(\002"
      "\022,\n\005WindH\030\025 \001(\0162\035.Differential.Connectio"
      "n_Type\022,\n\005WindM\030\026 \001(\0162\035.Differential.Con"
      "nection_Type\022,\n\005WindL\030\027 \001(\0162\035.Differenti"
      "al.Connection_Type\022-\n\tAngleMode\030\030 \001(\0162\032."
      "Differential.Correct_Type\022-\n\010WindSide\030\031 "
      "\001(\0162\033.Differential.TestWind_Type\022\020\n\010Conn"
      "Mode\030\032 \001(\r\022\020\n\010JXFactor\030\033 \001(\r\022-\n\nSerachMo"
      "de\030\034 \001(\0162\031.Differential.Search_Type\022)\n\005I"
      "dEqu\030\035 \001(\0162\032.Differential.CTPolar_Type\022\020"
      "\n\010Equation\030\036 \001(\r\022\n\n\002K1\030\037 \001(\002\022\n\n\002K2\030  \001(\002"
      "\0221\n\nPhase_Type\030! \001(\0162\035.Differential.Test"
      "Phasor_type\022\014\n\004Reso\030\" \001(\002\022\017\n\007Ugroup1\030# \001"
      "(\002\022\017\n\007Ugroup2\030$ \001(\002\"\256\002\n\016ProtectSetting\022\'"
      "\n\004Axis\030\001 \001(\0162\031.Differential.SettingType\022"
      ".\n\005Insel\030\002 \001(\0162\037.Differential.BaseCurren"
      "tSelect\022\014\n\004Inom\030\003 \001(\002\022\013\n\003Isd\030\004 \001(\002\022\r\n\005Ic"
      "dqd\030\005 \001(\002\022\021\n\tKneePoint\030\006 \001(\r\022\013\n\003Ip1\030\007 \001("
      "\002\022\013\n\003Ip2\030\010 \001(\002\022\013\n\003Ip3\030\t \001(\002\022\014\n\004Kid1\030\n \001("
      "\002\022\014\n\004Kid2\030\013 \001(\002\022\014\n\004Kid3\030\014 \001(\002\022\014\n\004Kid4\030\r "
      "\001(\002\022\013\n\003Kxb\030\016 \001(\002\022\014\n\004Kxb3\030\017 \001(\002\022\014\n\004Kxb5\030\020"
      " \001(\002\"\226\002\n\nSwitchPara\022\013\n\003iKA\030\001 \001(\r\022\013\n\003iKB\030"
      "\002 \001(\r\022\013\n\003iKC\030\003 \001(\r\022\013\n\003iKD\030\004 \001(\r\022\013\n\003iKE\030\005"
      " \001(\r\022\013\n\003iKF\030\006 \001(\r\022\013\n\003iKG\030\007 \001(\r\022\013\n\003iKH\030\010 "
      "\001(\r\022\013\n\003iKI\030\t \001(\r\022\013\n\003iKJ\030\n \001(\r\022\016\n\006iLogic\030"
      "\013 \001(\r\022\r\n\005iOut1\030\014 \001(\r\022\r\n\005iOut2\030\r \001(\r\022\r\n\005i"
      "Out3\030\016 \001(\r\022\r\n\005iOut4\030\017 \001(\r\022\r\n\005iOut5\030\020 \001(\r"
      "\022\r\n\005iOut6\030\021 \001(\r\022\r\n\005iOut7\030\022 \001(\r\022\r\n\005iOut8\030"
      "\023 \001(\r*i\n\rTestItem_type\022\r\n\tQDCurrent\020\000\022\013\n"
      "\007ZDRatio\020\001\022\r\n\tSDCurrent\020\002\022\022\n\016HarmonicRat"
      "ion\020\003\022\016\n\nActionTime\020\004\022\t\n\005Other\020\005*C\n\017Test"
      "Phasor_type\022\n\n\006APhase\020\000\022\n\n\006BPhase\020\001\022\n\n\006C"
      "Phase\020\002\022\014\n\010ABCPhase\020\003*H\n\nOutPutType\022\017\n\013a"
      "nalog_type\020\000\022\020\n\014digital_type\020\001\022\027\n\023analog"
      "_digital_type\020\002*1\n\tKcal_Type\022\020\n\014AutoCacu"
      "late\020\000\022\022\n\016ManualCaculate\020\001*1\n\017Connection"
      "_Type\022\014\n\010StarType\020\000\022\020\n\014TriangleType\020\001*Q\n"
      "\014Correct_Type\022\r\n\tNONE_TYPE\020\000\022\032\n\026Correct_"
      "Trigangel_Type\020\001\022\026\n\022Correct_Start_Type\020\002"
      "*X\n\rTestWind_Type\022\027\n\023TestWind_HightToLow"
      "\020\000\022\027\n\023TestWind_HightToMin\020\001\022\025\n\021TestWind_"
      "MinToLow\020\002*B\n\013Search_Type\022\033\n\027Search_Type"
      "_Search_Type\020\000\022\026\n\022Search_Type_Single\020\001*2"
      "\n\014CTPolar_Type\022\020\n\014TwoSide_Type\020\000\022\020\n\014OneS"
      "ide_type\020\001*5\n\013SettingType\022\022\n\016RealValue_t"
      "ype\020\000\022\022\n\016MarkValue_Type\020\001*W\n\021BaseCurrent"
      "Select\022\034\n\030HighSideSecondaryCurrent\020\000\022\020\n\014"
      "SettingValue\020\001\022\022\n\016AllSideCurrent\020\002b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4602);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Differential.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Differential_2eproto

const ::google::protobuf::EnumDescriptor* TestItem_type_descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_enum_descriptors[0];
}
bool TestItem_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TestPhasor_type_descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_enum_descriptors[1];
}
bool TestPhasor_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OutPutType_descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_enum_descriptors[2];
}
bool OutPutType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Kcal_Type_descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_enum_descriptors[3];
}
bool Kcal_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Connection_Type_descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_enum_descriptors[4];
}
bool Connection_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Correct_Type_descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_enum_descriptors[5];
}
bool Correct_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TestWind_Type_descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_enum_descriptors[6];
}
bool TestWind_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Search_Type_descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_enum_descriptors[7];
}
bool Search_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CTPolar_Type_descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_enum_descriptors[8];
}
bool CTPolar_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SettingType_descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_enum_descriptors[9];
}
bool SettingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BaseCurrentSelect_descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_enum_descriptors[10];
}
bool BaseCurrentSelect_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int chanel::kFamptitudeFieldNumber;
const int chanel::kFphaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

chanel::chanel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.chanel)
}
chanel::chanel(const chanel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&famptitude_, &from.famptitude_,
    reinterpret_cast<char*>(&fphase_) -
    reinterpret_cast<char*>(&famptitude_) + sizeof(fphase_));
  // @@protoc_insertion_point(copy_constructor:Differential.chanel)
}

void chanel::SharedCtor() {
  ::memset(&famptitude_, 0, reinterpret_cast<char*>(&fphase_) -
    reinterpret_cast<char*>(&famptitude_) + sizeof(fphase_));
  _cached_size_ = 0;
}

chanel::~chanel() {
  // @@protoc_insertion_point(destructor:Differential.chanel)
  SharedDtor();
}

void chanel::SharedDtor() {
}

void chanel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* chanel::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[0].descriptor;
}

const chanel& chanel::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

chanel* chanel::New(::google::protobuf::Arena* arena) const {
  chanel* n = new chanel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void chanel::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.chanel)
  ::memset(&famptitude_, 0, reinterpret_cast<char*>(&fphase_) -
    reinterpret_cast<char*>(&famptitude_) + sizeof(fphase_));
}

bool chanel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.chanel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float famptitude = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &famptitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fphase = 2;
      case 2: {
        if (tag == 21u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fphase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.chanel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.chanel)
  return false;
#undef DO_
}

void chanel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.chanel)
  // float famptitude = 1;
  if (this->famptitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->famptitude(), output);
  }

  // float fphase = 2;
  if (this->fphase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->fphase(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.chanel)
}

::google::protobuf::uint8* chanel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.chanel)
  // float famptitude = 1;
  if (this->famptitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->famptitude(), target);
  }

  // float fphase = 2;
  if (this->fphase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->fphase(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.chanel)
  return target;
}

size_t chanel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.chanel)
  size_t total_size = 0;

  // float famptitude = 1;
  if (this->famptitude() != 0) {
    total_size += 1 + 4;
  }

  // float fphase = 2;
  if (this->fphase() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void chanel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.chanel)
  GOOGLE_DCHECK_NE(&from, this);
  const chanel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const chanel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.chanel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.chanel)
    MergeFrom(*source);
  }
}

void chanel::MergeFrom(const chanel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.chanel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.famptitude() != 0) {
    set_famptitude(from.famptitude());
  }
  if (from.fphase() != 0) {
    set_fphase(from.fphase());
  }
}

void chanel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.chanel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void chanel::CopyFrom(const chanel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.chanel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool chanel::IsInitialized() const {
  return true;
}

void chanel::Swap(chanel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void chanel::InternalSwap(chanel* other) {
  std::swap(famptitude_, other->famptitude_);
  std::swap(fphase_, other->fphase_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata chanel::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// chanel

// float famptitude = 1;
void chanel::clear_famptitude() {
  famptitude_ = 0;
}
float chanel::famptitude() const {
  // @@protoc_insertion_point(field_get:Differential.chanel.famptitude)
  return famptitude_;
}
void chanel::set_famptitude(float value) {
  
  famptitude_ = value;
  // @@protoc_insertion_point(field_set:Differential.chanel.famptitude)
}

// float fphase = 2;
void chanel::clear_fphase() {
  fphase_ = 0;
}
float chanel::fphase() const {
  // @@protoc_insertion_point(field_get:Differential.chanel.fphase)
  return fphase_;
}
void chanel::set_fphase(float value) {
  
  fphase_ = value;
  // @@protoc_insertion_point(field_set:Differential.chanel.fphase)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicResultItem::kIaFieldNumber;
const int BasicResultItem::kIbFieldNumber;
const int BasicResultItem::kIcFieldNumber;
const int BasicResultItem::kIapFieldNumber;
const int BasicResultItem::kIbpFieldNumber;
const int BasicResultItem::kIcpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicResultItem::BasicResultItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.BasicResultItem)
}
BasicResultItem::BasicResultItem(const BasicResultItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ia()) {
    ia_ = new ::Differential::chanel(*from.ia_);
  } else {
    ia_ = NULL;
  }
  if (from.has_ib()) {
    ib_ = new ::Differential::chanel(*from.ib_);
  } else {
    ib_ = NULL;
  }
  if (from.has_ic()) {
    ic_ = new ::Differential::chanel(*from.ic_);
  } else {
    ic_ = NULL;
  }
  if (from.has_iap()) {
    iap_ = new ::Differential::chanel(*from.iap_);
  } else {
    iap_ = NULL;
  }
  if (from.has_ibp()) {
    ibp_ = new ::Differential::chanel(*from.ibp_);
  } else {
    ibp_ = NULL;
  }
  if (from.has_icp()) {
    icp_ = new ::Differential::chanel(*from.icp_);
  } else {
    icp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Differential.BasicResultItem)
}

void BasicResultItem::SharedCtor() {
  ::memset(&ia_, 0, reinterpret_cast<char*>(&icp_) -
    reinterpret_cast<char*>(&ia_) + sizeof(icp_));
  _cached_size_ = 0;
}

BasicResultItem::~BasicResultItem() {
  // @@protoc_insertion_point(destructor:Differential.BasicResultItem)
  SharedDtor();
}

void BasicResultItem::SharedDtor() {
  if (this != internal_default_instance()) {
    delete ia_;
  }
  if (this != internal_default_instance()) {
    delete ib_;
  }
  if (this != internal_default_instance()) {
    delete ic_;
  }
  if (this != internal_default_instance()) {
    delete iap_;
  }
  if (this != internal_default_instance()) {
    delete ibp_;
  }
  if (this != internal_default_instance()) {
    delete icp_;
  }
}

void BasicResultItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicResultItem::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[1].descriptor;
}

const BasicResultItem& BasicResultItem::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

BasicResultItem* BasicResultItem::New(::google::protobuf::Arena* arena) const {
  BasicResultItem* n = new BasicResultItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicResultItem::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.BasicResultItem)
  if (GetArenaNoVirtual() == NULL && ia_ != NULL) {
    delete ia_;
  }
  ia_ = NULL;
  if (GetArenaNoVirtual() == NULL && ib_ != NULL) {
    delete ib_;
  }
  ib_ = NULL;
  if (GetArenaNoVirtual() == NULL && ic_ != NULL) {
    delete ic_;
  }
  ic_ = NULL;
  if (GetArenaNoVirtual() == NULL && iap_ != NULL) {
    delete iap_;
  }
  iap_ = NULL;
  if (GetArenaNoVirtual() == NULL && ibp_ != NULL) {
    delete ibp_;
  }
  ibp_ = NULL;
  if (GetArenaNoVirtual() == NULL && icp_ != NULL) {
    delete icp_;
  }
  icp_ = NULL;
}

bool BasicResultItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.BasicResultItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.chanel Ia = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ia()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.chanel Ib = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ib()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.chanel Ic = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.chanel Iap = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_iap()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.chanel Ibp = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ibp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.chanel Icp = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_icp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.BasicResultItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.BasicResultItem)
  return false;
#undef DO_
}

void BasicResultItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.BasicResultItem)
  // .Differential.chanel Ia = 1;
  if (this->has_ia()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ia_, output);
  }

  // .Differential.chanel Ib = 2;
  if (this->has_ib()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->ib_, output);
  }

  // .Differential.chanel Ic = 3;
  if (this->has_ic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ic_, output);
  }

  // .Differential.chanel Iap = 4;
  if (this->has_iap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->iap_, output);
  }

  // .Differential.chanel Ibp = 5;
  if (this->has_ibp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->ibp_, output);
  }

  // .Differential.chanel Icp = 6;
  if (this->has_icp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->icp_, output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.BasicResultItem)
}

::google::protobuf::uint8* BasicResultItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.BasicResultItem)
  // .Differential.chanel Ia = 1;
  if (this->has_ia()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->ia_, false, target);
  }

  // .Differential.chanel Ib = 2;
  if (this->has_ib()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->ib_, false, target);
  }

  // .Differential.chanel Ic = 3;
  if (this->has_ic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ic_, false, target);
  }

  // .Differential.chanel Iap = 4;
  if (this->has_iap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->iap_, false, target);
  }

  // .Differential.chanel Ibp = 5;
  if (this->has_ibp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->ibp_, false, target);
  }

  // .Differential.chanel Icp = 6;
  if (this->has_icp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->icp_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.BasicResultItem)
  return target;
}

size_t BasicResultItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.BasicResultItem)
  size_t total_size = 0;

  // .Differential.chanel Ia = 1;
  if (this->has_ia()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ia_);
  }

  // .Differential.chanel Ib = 2;
  if (this->has_ib()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ib_);
  }

  // .Differential.chanel Ic = 3;
  if (this->has_ic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ic_);
  }

  // .Differential.chanel Iap = 4;
  if (this->has_iap()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->iap_);
  }

  // .Differential.chanel Ibp = 5;
  if (this->has_ibp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ibp_);
  }

  // .Differential.chanel Icp = 6;
  if (this->has_icp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->icp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicResultItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.BasicResultItem)
  GOOGLE_DCHECK_NE(&from, this);
  const BasicResultItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicResultItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.BasicResultItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.BasicResultItem)
    MergeFrom(*source);
  }
}

void BasicResultItem::MergeFrom(const BasicResultItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.BasicResultItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ia()) {
    mutable_ia()->::Differential::chanel::MergeFrom(from.ia());
  }
  if (from.has_ib()) {
    mutable_ib()->::Differential::chanel::MergeFrom(from.ib());
  }
  if (from.has_ic()) {
    mutable_ic()->::Differential::chanel::MergeFrom(from.ic());
  }
  if (from.has_iap()) {
    mutable_iap()->::Differential::chanel::MergeFrom(from.iap());
  }
  if (from.has_ibp()) {
    mutable_ibp()->::Differential::chanel::MergeFrom(from.ibp());
  }
  if (from.has_icp()) {
    mutable_icp()->::Differential::chanel::MergeFrom(from.icp());
  }
}

void BasicResultItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.BasicResultItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicResultItem::CopyFrom(const BasicResultItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.BasicResultItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicResultItem::IsInitialized() const {
  return true;
}

void BasicResultItem::Swap(BasicResultItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicResultItem::InternalSwap(BasicResultItem* other) {
  std::swap(ia_, other->ia_);
  std::swap(ib_, other->ib_);
  std::swap(ic_, other->ic_);
  std::swap(iap_, other->iap_);
  std::swap(ibp_, other->ibp_);
  std::swap(icp_, other->icp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicResultItem::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicResultItem

// .Differential.chanel Ia = 1;
bool BasicResultItem::has_ia() const {
  return this != internal_default_instance() && ia_ != NULL;
}
void BasicResultItem::clear_ia() {
  if (GetArenaNoVirtual() == NULL && ia_ != NULL) delete ia_;
  ia_ = NULL;
}
const ::Differential::chanel& BasicResultItem::ia() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Ia)
  return ia_ != NULL ? *ia_
                         : *::Differential::chanel::internal_default_instance();
}
::Differential::chanel* BasicResultItem::mutable_ia() {
  
  if (ia_ == NULL) {
    ia_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Ia)
  return ia_;
}
::Differential::chanel* BasicResultItem::release_ia() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Ia)
  
  ::Differential::chanel* temp = ia_;
  ia_ = NULL;
  return temp;
}
void BasicResultItem::set_allocated_ia(::Differential::chanel* ia) {
  delete ia_;
  ia_ = ia;
  if (ia) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Ia)
}

// .Differential.chanel Ib = 2;
bool BasicResultItem::has_ib() const {
  return this != internal_default_instance() && ib_ != NULL;
}
void BasicResultItem::clear_ib() {
  if (GetArenaNoVirtual() == NULL && ib_ != NULL) delete ib_;
  ib_ = NULL;
}
const ::Differential::chanel& BasicResultItem::ib() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Ib)
  return ib_ != NULL ? *ib_
                         : *::Differential::chanel::internal_default_instance();
}
::Differential::chanel* BasicResultItem::mutable_ib() {
  
  if (ib_ == NULL) {
    ib_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Ib)
  return ib_;
}
::Differential::chanel* BasicResultItem::release_ib() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Ib)
  
  ::Differential::chanel* temp = ib_;
  ib_ = NULL;
  return temp;
}
void BasicResultItem::set_allocated_ib(::Differential::chanel* ib) {
  delete ib_;
  ib_ = ib;
  if (ib) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Ib)
}

// .Differential.chanel Ic = 3;
bool BasicResultItem::has_ic() const {
  return this != internal_default_instance() && ic_ != NULL;
}
void BasicResultItem::clear_ic() {
  if (GetArenaNoVirtual() == NULL && ic_ != NULL) delete ic_;
  ic_ = NULL;
}
const ::Differential::chanel& BasicResultItem::ic() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Ic)
  return ic_ != NULL ? *ic_
                         : *::Differential::chanel::internal_default_instance();
}
::Differential::chanel* BasicResultItem::mutable_ic() {
  
  if (ic_ == NULL) {
    ic_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Ic)
  return ic_;
}
::Differential::chanel* BasicResultItem::release_ic() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Ic)
  
  ::Differential::chanel* temp = ic_;
  ic_ = NULL;
  return temp;
}
void BasicResultItem::set_allocated_ic(::Differential::chanel* ic) {
  delete ic_;
  ic_ = ic;
  if (ic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Ic)
}

// .Differential.chanel Iap = 4;
bool BasicResultItem::has_iap() const {
  return this != internal_default_instance() && iap_ != NULL;
}
void BasicResultItem::clear_iap() {
  if (GetArenaNoVirtual() == NULL && iap_ != NULL) delete iap_;
  iap_ = NULL;
}
const ::Differential::chanel& BasicResultItem::iap() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Iap)
  return iap_ != NULL ? *iap_
                         : *::Differential::chanel::internal_default_instance();
}
::Differential::chanel* BasicResultItem::mutable_iap() {
  
  if (iap_ == NULL) {
    iap_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Iap)
  return iap_;
}
::Differential::chanel* BasicResultItem::release_iap() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Iap)
  
  ::Differential::chanel* temp = iap_;
  iap_ = NULL;
  return temp;
}
void BasicResultItem::set_allocated_iap(::Differential::chanel* iap) {
  delete iap_;
  iap_ = iap;
  if (iap) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Iap)
}

// .Differential.chanel Ibp = 5;
bool BasicResultItem::has_ibp() const {
  return this != internal_default_instance() && ibp_ != NULL;
}
void BasicResultItem::clear_ibp() {
  if (GetArenaNoVirtual() == NULL && ibp_ != NULL) delete ibp_;
  ibp_ = NULL;
}
const ::Differential::chanel& BasicResultItem::ibp() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Ibp)
  return ibp_ != NULL ? *ibp_
                         : *::Differential::chanel::internal_default_instance();
}
::Differential::chanel* BasicResultItem::mutable_ibp() {
  
  if (ibp_ == NULL) {
    ibp_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Ibp)
  return ibp_;
}
::Differential::chanel* BasicResultItem::release_ibp() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Ibp)
  
  ::Differential::chanel* temp = ibp_;
  ibp_ = NULL;
  return temp;
}
void BasicResultItem::set_allocated_ibp(::Differential::chanel* ibp) {
  delete ibp_;
  ibp_ = ibp;
  if (ibp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Ibp)
}

// .Differential.chanel Icp = 6;
bool BasicResultItem::has_icp() const {
  return this != internal_default_instance() && icp_ != NULL;
}
void BasicResultItem::clear_icp() {
  if (GetArenaNoVirtual() == NULL && icp_ != NULL) delete icp_;
  icp_ = NULL;
}
const ::Differential::chanel& BasicResultItem::icp() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Icp)
  return icp_ != NULL ? *icp_
                         : *::Differential::chanel::internal_default_instance();
}
::Differential::chanel* BasicResultItem::mutable_icp() {
  
  if (icp_ == NULL) {
    icp_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Icp)
  return icp_;
}
::Differential::chanel* BasicResultItem::release_icp() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Icp)
  
  ::Differential::chanel* temp = icp_;
  icp_ = NULL;
  return temp;
}
void BasicResultItem::set_allocated_icp(::Differential::chanel* icp) {
  delete icp_;
  icp_ = icp;
  if (icp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Icp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestItem_QDCurrent::kItemtypeFieldNumber;
const int TestItem_QDCurrent::kIIndexFieldNumber;
const int TestItem_QDCurrent::kIrFieldNumber;
const int TestItem_QDCurrent::kFUpFieldNumber;
const int TestItem_QDCurrent::kFDownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestItem_QDCurrent::TestItem_QDCurrent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.TestItem_QDCurrent)
}
TestItem_QDCurrent::TestItem_QDCurrent(const TestItem_QDCurrent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemtype_, &from.itemtype_,
    reinterpret_cast<char*>(&fdown_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(fdown_));
  // @@protoc_insertion_point(copy_constructor:Differential.TestItem_QDCurrent)
}

void TestItem_QDCurrent::SharedCtor() {
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&fdown_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(fdown_));
  _cached_size_ = 0;
}

TestItem_QDCurrent::~TestItem_QDCurrent() {
  // @@protoc_insertion_point(destructor:Differential.TestItem_QDCurrent)
  SharedDtor();
}

void TestItem_QDCurrent::SharedDtor() {
}

void TestItem_QDCurrent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestItem_QDCurrent::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[2].descriptor;
}

const TestItem_QDCurrent& TestItem_QDCurrent::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestItem_QDCurrent* TestItem_QDCurrent::New(::google::protobuf::Arena* arena) const {
  TestItem_QDCurrent* n = new TestItem_QDCurrent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestItem_QDCurrent::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.TestItem_QDCurrent)
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&fdown_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(fdown_));
}

bool TestItem_QDCurrent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.TestItem_QDCurrent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.TestItem_type itemtype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::Differential::TestItem_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Ir = 3;
      case 3: {
        if (tag == 29u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fUp = 4;
      case 4: {
        if (tag == 37u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fDown = 5;
      case 5: {
        if (tag == 45u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fdown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.TestItem_QDCurrent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.TestItem_QDCurrent)
  return false;
#undef DO_
}

void TestItem_QDCurrent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.TestItem_QDCurrent)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itemtype(), output);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->iindex(), output);
  }

  // float Ir = 3;
  if (this->ir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ir(), output);
  }

  // float fUp = 4;
  if (this->fup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->fup(), output);
  }

  // float fDown = 5;
  if (this->fdown() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->fdown(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.TestItem_QDCurrent)
}

::google::protobuf::uint8* TestItem_QDCurrent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.TestItem_QDCurrent)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itemtype(), target);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->iindex(), target);
  }

  // float Ir = 3;
  if (this->ir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ir(), target);
  }

  // float fUp = 4;
  if (this->fup() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->fup(), target);
  }

  // float fDown = 5;
  if (this->fdown() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->fdown(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.TestItem_QDCurrent)
  return target;
}

size_t TestItem_QDCurrent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.TestItem_QDCurrent)
  size_t total_size = 0;

  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iindex());
  }

  // float Ir = 3;
  if (this->ir() != 0) {
    total_size += 1 + 4;
  }

  // float fUp = 4;
  if (this->fup() != 0) {
    total_size += 1 + 4;
  }

  // float fDown = 5;
  if (this->fdown() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestItem_QDCurrent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.TestItem_QDCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  const TestItem_QDCurrent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestItem_QDCurrent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.TestItem_QDCurrent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.TestItem_QDCurrent)
    MergeFrom(*source);
  }
}

void TestItem_QDCurrent::MergeFrom(const TestItem_QDCurrent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.TestItem_QDCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.iindex() != 0) {
    set_iindex(from.iindex());
  }
  if (from.ir() != 0) {
    set_ir(from.ir());
  }
  if (from.fup() != 0) {
    set_fup(from.fup());
  }
  if (from.fdown() != 0) {
    set_fdown(from.fdown());
  }
}

void TestItem_QDCurrent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.TestItem_QDCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestItem_QDCurrent::CopyFrom(const TestItem_QDCurrent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.TestItem_QDCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestItem_QDCurrent::IsInitialized() const {
  return true;
}

void TestItem_QDCurrent::Swap(TestItem_QDCurrent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestItem_QDCurrent::InternalSwap(TestItem_QDCurrent* other) {
  std::swap(itemtype_, other->itemtype_);
  std::swap(iindex_, other->iindex_);
  std::swap(ir_, other->ir_);
  std::swap(fup_, other->fup_);
  std::swap(fdown_, other->fdown_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestItem_QDCurrent::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestItem_QDCurrent

// .Differential.TestItem_type itemtype = 1;
void TestItem_QDCurrent::clear_itemtype() {
  itemtype_ = 0;
}
::Differential::TestItem_type TestItem_QDCurrent::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
void TestItem_QDCurrent::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent.itemtype)
}

// uint32 iIndex = 2;
void TestItem_QDCurrent::clear_iindex() {
  iindex_ = 0u;
}
::google::protobuf::uint32 TestItem_QDCurrent::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent.iIndex)
  return iindex_;
}
void TestItem_QDCurrent::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent.iIndex)
}

// float Ir = 3;
void TestItem_QDCurrent::clear_ir() {
  ir_ = 0;
}
float TestItem_QDCurrent::ir() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent.Ir)
  return ir_;
}
void TestItem_QDCurrent::set_ir(float value) {
  
  ir_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent.Ir)
}

// float fUp = 4;
void TestItem_QDCurrent::clear_fup() {
  fup_ = 0;
}
float TestItem_QDCurrent::fup() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent.fUp)
  return fup_;
}
void TestItem_QDCurrent::set_fup(float value) {
  
  fup_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent.fUp)
}

// float fDown = 5;
void TestItem_QDCurrent::clear_fdown() {
  fdown_ = 0;
}
float TestItem_QDCurrent::fdown() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent.fDown)
  return fdown_;
}
void TestItem_QDCurrent::set_fdown(float value) {
  
  fdown_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent.fDown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestItem_QDCurrent_Result::kItemtypeFieldNumber;
const int TestItem_QDCurrent_Result::kIIndexFieldNumber;
const int TestItem_QDCurrent_Result::kBasicFieldNumber;
const int TestItem_QDCurrent_Result::kIdFieldNumber;
const int TestItem_QDCurrent_Result::kBEndFieldNumber;
const int TestItem_QDCurrent_Result::kNibinstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestItem_QDCurrent_Result::TestItem_QDCurrent_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.TestItem_QDCurrent_Result)
}
TestItem_QDCurrent_Result::TestItem_QDCurrent_Result(const TestItem_QDCurrent_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::Differential::BasicResultItem(*from.basic_);
  } else {
    basic_ = NULL;
  }
  ::memcpy(&itemtype_, &from.itemtype_,
    reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(nibinstate_));
  // @@protoc_insertion_point(copy_constructor:Differential.TestItem_QDCurrent_Result)
}

void TestItem_QDCurrent_Result::SharedCtor() {
  ::memset(&basic_, 0, reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&basic_) + sizeof(nibinstate_));
  _cached_size_ = 0;
}

TestItem_QDCurrent_Result::~TestItem_QDCurrent_Result() {
  // @@protoc_insertion_point(destructor:Differential.TestItem_QDCurrent_Result)
  SharedDtor();
}

void TestItem_QDCurrent_Result::SharedDtor() {
  if (this != internal_default_instance()) {
    delete basic_;
  }
}

void TestItem_QDCurrent_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestItem_QDCurrent_Result::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[3].descriptor;
}

const TestItem_QDCurrent_Result& TestItem_QDCurrent_Result::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestItem_QDCurrent_Result* TestItem_QDCurrent_Result::New(::google::protobuf::Arena* arena) const {
  TestItem_QDCurrent_Result* n = new TestItem_QDCurrent_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestItem_QDCurrent_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.TestItem_QDCurrent_Result)
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) {
    delete basic_;
  }
  basic_ = NULL;
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(nibinstate_));
}

bool TestItem_QDCurrent_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.TestItem_QDCurrent_Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.TestItem_type itemtype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::Differential::TestItem_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.BasicResultItem basic = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Id = 4;
      case 4: {
        if (tag == 37u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bEnd = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nibinstate = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nibinstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.TestItem_QDCurrent_Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.TestItem_QDCurrent_Result)
  return false;
#undef DO_
}

void TestItem_QDCurrent_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.TestItem_QDCurrent_Result)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itemtype(), output);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->iindex(), output);
  }

  // .Differential.BasicResultItem basic = 3;
  if (this->has_basic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->basic_, output);
  }

  // float Id = 4;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->id(), output);
  }

  // bool bEnd = 5;
  if (this->bend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bend(), output);
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->nibinstate(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.TestItem_QDCurrent_Result)
}

::google::protobuf::uint8* TestItem_QDCurrent_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.TestItem_QDCurrent_Result)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itemtype(), target);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->iindex(), target);
  }

  // .Differential.BasicResultItem basic = 3;
  if (this->has_basic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->basic_, false, target);
  }

  // float Id = 4;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->id(), target);
  }

  // bool bEnd = 5;
  if (this->bend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bend(), target);
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->nibinstate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.TestItem_QDCurrent_Result)
  return target;
}

size_t TestItem_QDCurrent_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.TestItem_QDCurrent_Result)
  size_t total_size = 0;

  // .Differential.BasicResultItem basic = 3;
  if (this->has_basic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->basic_);
  }

  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iindex());
  }

  // float Id = 4;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  // bool bEnd = 5;
  if (this->bend() != 0) {
    total_size += 1 + 1;
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nibinstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestItem_QDCurrent_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.TestItem_QDCurrent_Result)
  GOOGLE_DCHECK_NE(&from, this);
  const TestItem_QDCurrent_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestItem_QDCurrent_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.TestItem_QDCurrent_Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.TestItem_QDCurrent_Result)
    MergeFrom(*source);
  }
}

void TestItem_QDCurrent_Result::MergeFrom(const TestItem_QDCurrent_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.TestItem_QDCurrent_Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    mutable_basic()->::Differential::BasicResultItem::MergeFrom(from.basic());
  }
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.iindex() != 0) {
    set_iindex(from.iindex());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.bend() != 0) {
    set_bend(from.bend());
  }
  if (from.nibinstate() != 0) {
    set_nibinstate(from.nibinstate());
  }
}

void TestItem_QDCurrent_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.TestItem_QDCurrent_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestItem_QDCurrent_Result::CopyFrom(const TestItem_QDCurrent_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.TestItem_QDCurrent_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestItem_QDCurrent_Result::IsInitialized() const {
  return true;
}

void TestItem_QDCurrent_Result::Swap(TestItem_QDCurrent_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestItem_QDCurrent_Result::InternalSwap(TestItem_QDCurrent_Result* other) {
  std::swap(basic_, other->basic_);
  std::swap(itemtype_, other->itemtype_);
  std::swap(iindex_, other->iindex_);
  std::swap(id_, other->id_);
  std::swap(bend_, other->bend_);
  std::swap(nibinstate_, other->nibinstate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestItem_QDCurrent_Result::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestItem_QDCurrent_Result

// .Differential.TestItem_type itemtype = 1;
void TestItem_QDCurrent_Result::clear_itemtype() {
  itemtype_ = 0;
}
::Differential::TestItem_type TestItem_QDCurrent_Result::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
void TestItem_QDCurrent_Result::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent_Result.itemtype)
}

// uint32 iIndex = 2;
void TestItem_QDCurrent_Result::clear_iindex() {
  iindex_ = 0u;
}
::google::protobuf::uint32 TestItem_QDCurrent_Result::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.iIndex)
  return iindex_;
}
void TestItem_QDCurrent_Result::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent_Result.iIndex)
}

// .Differential.BasicResultItem basic = 3;
bool TestItem_QDCurrent_Result::has_basic() const {
  return this != internal_default_instance() && basic_ != NULL;
}
void TestItem_QDCurrent_Result::clear_basic() {
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) delete basic_;
  basic_ = NULL;
}
const ::Differential::BasicResultItem& TestItem_QDCurrent_Result::basic() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.basic)
  return basic_ != NULL ? *basic_
                         : *::Differential::BasicResultItem::internal_default_instance();
}
::Differential::BasicResultItem* TestItem_QDCurrent_Result::mutable_basic() {
  
  if (basic_ == NULL) {
    basic_ = new ::Differential::BasicResultItem;
  }
  // @@protoc_insertion_point(field_mutable:Differential.TestItem_QDCurrent_Result.basic)
  return basic_;
}
::Differential::BasicResultItem* TestItem_QDCurrent_Result::release_basic() {
  // @@protoc_insertion_point(field_release:Differential.TestItem_QDCurrent_Result.basic)
  
  ::Differential::BasicResultItem* temp = basic_;
  basic_ = NULL;
  return temp;
}
void TestItem_QDCurrent_Result::set_allocated_basic(::Differential::BasicResultItem* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.TestItem_QDCurrent_Result.basic)
}

// float Id = 4;
void TestItem_QDCurrent_Result::clear_id() {
  id_ = 0;
}
float TestItem_QDCurrent_Result::id() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.Id)
  return id_;
}
void TestItem_QDCurrent_Result::set_id(float value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent_Result.Id)
}

// bool bEnd = 5;
void TestItem_QDCurrent_Result::clear_bend() {
  bend_ = false;
}
bool TestItem_QDCurrent_Result::bend() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.bEnd)
  return bend_;
}
void TestItem_QDCurrent_Result::set_bend(bool value) {
  
  bend_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent_Result.bEnd)
}

// uint32 nibinstate = 7;
void TestItem_QDCurrent_Result::clear_nibinstate() {
  nibinstate_ = 0u;
}
::google::protobuf::uint32 TestItem_QDCurrent_Result::nibinstate() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.nibinstate)
  return nibinstate_;
}
void TestItem_QDCurrent_Result::set_nibinstate(::google::protobuf::uint32 value) {
  
  nibinstate_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent_Result.nibinstate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestItem_ZDRatio::kItemtypeFieldNumber;
const int TestItem_ZDRatio::kITypeIndexFieldNumber;
const int TestItem_ZDRatio::kIIndexFieldNumber;
const int TestItem_ZDRatio::kIrFieldNumber;
const int TestItem_ZDRatio::kFUpFieldNumber;
const int TestItem_ZDRatio::kFDownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestItem_ZDRatio::TestItem_ZDRatio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.TestItem_ZDRatio)
}
TestItem_ZDRatio::TestItem_ZDRatio(const TestItem_ZDRatio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemtype_, &from.itemtype_,
    reinterpret_cast<char*>(&fdown_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(fdown_));
  // @@protoc_insertion_point(copy_constructor:Differential.TestItem_ZDRatio)
}

void TestItem_ZDRatio::SharedCtor() {
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&fdown_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(fdown_));
  _cached_size_ = 0;
}

TestItem_ZDRatio::~TestItem_ZDRatio() {
  // @@protoc_insertion_point(destructor:Differential.TestItem_ZDRatio)
  SharedDtor();
}

void TestItem_ZDRatio::SharedDtor() {
}

void TestItem_ZDRatio::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestItem_ZDRatio::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[4].descriptor;
}

const TestItem_ZDRatio& TestItem_ZDRatio::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestItem_ZDRatio* TestItem_ZDRatio::New(::google::protobuf::Arena* arena) const {
  TestItem_ZDRatio* n = new TestItem_ZDRatio;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestItem_ZDRatio::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.TestItem_ZDRatio)
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&fdown_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(fdown_));
}

bool TestItem_ZDRatio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.TestItem_ZDRatio)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.TestItem_type itemtype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::Differential::TestItem_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iTypeIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itypeindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iIndex = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Ir = 4;
      case 4: {
        if (tag == 37u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fUp = 5;
      case 5: {
        if (tag == 45u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fDown = 6;
      case 6: {
        if (tag == 53u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fdown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.TestItem_ZDRatio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.TestItem_ZDRatio)
  return false;
#undef DO_
}

void TestItem_ZDRatio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.TestItem_ZDRatio)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itemtype(), output);
  }

  // uint32 iTypeIndex = 2;
  if (this->itypeindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itypeindex(), output);
  }

  // uint32 iIndex = 3;
  if (this->iindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->iindex(), output);
  }

  // float Ir = 4;
  if (this->ir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->ir(), output);
  }

  // float fUp = 5;
  if (this->fup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->fup(), output);
  }

  // float fDown = 6;
  if (this->fdown() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->fdown(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.TestItem_ZDRatio)
}

::google::protobuf::uint8* TestItem_ZDRatio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.TestItem_ZDRatio)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itemtype(), target);
  }

  // uint32 iTypeIndex = 2;
  if (this->itypeindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itypeindex(), target);
  }

  // uint32 iIndex = 3;
  if (this->iindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->iindex(), target);
  }

  // float Ir = 4;
  if (this->ir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->ir(), target);
  }

  // float fUp = 5;
  if (this->fup() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->fup(), target);
  }

  // float fDown = 6;
  if (this->fdown() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->fdown(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.TestItem_ZDRatio)
  return target;
}

size_t TestItem_ZDRatio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.TestItem_ZDRatio)
  size_t total_size = 0;

  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  // uint32 iTypeIndex = 2;
  if (this->itypeindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itypeindex());
  }

  // uint32 iIndex = 3;
  if (this->iindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iindex());
  }

  // float Ir = 4;
  if (this->ir() != 0) {
    total_size += 1 + 4;
  }

  // float fUp = 5;
  if (this->fup() != 0) {
    total_size += 1 + 4;
  }

  // float fDown = 6;
  if (this->fdown() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestItem_ZDRatio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.TestItem_ZDRatio)
  GOOGLE_DCHECK_NE(&from, this);
  const TestItem_ZDRatio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestItem_ZDRatio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.TestItem_ZDRatio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.TestItem_ZDRatio)
    MergeFrom(*source);
  }
}

void TestItem_ZDRatio::MergeFrom(const TestItem_ZDRatio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.TestItem_ZDRatio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.itypeindex() != 0) {
    set_itypeindex(from.itypeindex());
  }
  if (from.iindex() != 0) {
    set_iindex(from.iindex());
  }
  if (from.ir() != 0) {
    set_ir(from.ir());
  }
  if (from.fup() != 0) {
    set_fup(from.fup());
  }
  if (from.fdown() != 0) {
    set_fdown(from.fdown());
  }
}

void TestItem_ZDRatio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.TestItem_ZDRatio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestItem_ZDRatio::CopyFrom(const TestItem_ZDRatio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.TestItem_ZDRatio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestItem_ZDRatio::IsInitialized() const {
  return true;
}

void TestItem_ZDRatio::Swap(TestItem_ZDRatio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestItem_ZDRatio::InternalSwap(TestItem_ZDRatio* other) {
  std::swap(itemtype_, other->itemtype_);
  std::swap(itypeindex_, other->itypeindex_);
  std::swap(iindex_, other->iindex_);
  std::swap(ir_, other->ir_);
  std::swap(fup_, other->fup_);
  std::swap(fdown_, other->fdown_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestItem_ZDRatio::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestItem_ZDRatio

// .Differential.TestItem_type itemtype = 1;
void TestItem_ZDRatio::clear_itemtype() {
  itemtype_ = 0;
}
::Differential::TestItem_type TestItem_ZDRatio::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
void TestItem_ZDRatio::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.itemtype)
}

// uint32 iTypeIndex = 2;
void TestItem_ZDRatio::clear_itypeindex() {
  itypeindex_ = 0u;
}
::google::protobuf::uint32 TestItem_ZDRatio::itypeindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.iTypeIndex)
  return itypeindex_;
}
void TestItem_ZDRatio::set_itypeindex(::google::protobuf::uint32 value) {
  
  itypeindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.iTypeIndex)
}

// uint32 iIndex = 3;
void TestItem_ZDRatio::clear_iindex() {
  iindex_ = 0u;
}
::google::protobuf::uint32 TestItem_ZDRatio::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.iIndex)
  return iindex_;
}
void TestItem_ZDRatio::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.iIndex)
}

// float Ir = 4;
void TestItem_ZDRatio::clear_ir() {
  ir_ = 0;
}
float TestItem_ZDRatio::ir() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.Ir)
  return ir_;
}
void TestItem_ZDRatio::set_ir(float value) {
  
  ir_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.Ir)
}

// float fUp = 5;
void TestItem_ZDRatio::clear_fup() {
  fup_ = 0;
}
float TestItem_ZDRatio::fup() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.fUp)
  return fup_;
}
void TestItem_ZDRatio::set_fup(float value) {
  
  fup_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.fUp)
}

// float fDown = 6;
void TestItem_ZDRatio::clear_fdown() {
  fdown_ = 0;
}
float TestItem_ZDRatio::fdown() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.fDown)
  return fdown_;
}
void TestItem_ZDRatio::set_fdown(float value) {
  
  fdown_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.fDown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestItem_ZDRatio_Result::kItemtypeFieldNumber;
const int TestItem_ZDRatio_Result::kITypeIndexFieldNumber;
const int TestItem_ZDRatio_Result::kIIndexFieldNumber;
const int TestItem_ZDRatio_Result::kBasicFieldNumber;
const int TestItem_ZDRatio_Result::kIdFieldNumber;
const int TestItem_ZDRatio_Result::kBEndFieldNumber;
const int TestItem_ZDRatio_Result::kNibinstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestItem_ZDRatio_Result::TestItem_ZDRatio_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.TestItem_ZDRatio_Result)
}
TestItem_ZDRatio_Result::TestItem_ZDRatio_Result(const TestItem_ZDRatio_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::Differential::BasicResultItem(*from.basic_);
  } else {
    basic_ = NULL;
  }
  ::memcpy(&itemtype_, &from.itemtype_,
    reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(nibinstate_));
  // @@protoc_insertion_point(copy_constructor:Differential.TestItem_ZDRatio_Result)
}

void TestItem_ZDRatio_Result::SharedCtor() {
  ::memset(&basic_, 0, reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&basic_) + sizeof(nibinstate_));
  _cached_size_ = 0;
}

TestItem_ZDRatio_Result::~TestItem_ZDRatio_Result() {
  // @@protoc_insertion_point(destructor:Differential.TestItem_ZDRatio_Result)
  SharedDtor();
}

void TestItem_ZDRatio_Result::SharedDtor() {
  if (this != internal_default_instance()) {
    delete basic_;
  }
}

void TestItem_ZDRatio_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestItem_ZDRatio_Result::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[5].descriptor;
}

const TestItem_ZDRatio_Result& TestItem_ZDRatio_Result::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestItem_ZDRatio_Result* TestItem_ZDRatio_Result::New(::google::protobuf::Arena* arena) const {
  TestItem_ZDRatio_Result* n = new TestItem_ZDRatio_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestItem_ZDRatio_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.TestItem_ZDRatio_Result)
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) {
    delete basic_;
  }
  basic_ = NULL;
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(nibinstate_));
}

bool TestItem_ZDRatio_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.TestItem_ZDRatio_Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.TestItem_type itemtype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::Differential::TestItem_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iTypeIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itypeindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iIndex = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.BasicResultItem basic = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Id = 5;
      case 5: {
        if (tag == 45u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bEnd = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nibinstate = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nibinstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.TestItem_ZDRatio_Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.TestItem_ZDRatio_Result)
  return false;
#undef DO_
}

void TestItem_ZDRatio_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.TestItem_ZDRatio_Result)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itemtype(), output);
  }

  // uint32 iTypeIndex = 2;
  if (this->itypeindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itypeindex(), output);
  }

  // uint32 iIndex = 3;
  if (this->iindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->iindex(), output);
  }

  // .Differential.BasicResultItem basic = 4;
  if (this->has_basic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->basic_, output);
  }

  // float Id = 5;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->id(), output);
  }

  // bool bEnd = 6;
  if (this->bend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bend(), output);
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->nibinstate(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.TestItem_ZDRatio_Result)
}

::google::protobuf::uint8* TestItem_ZDRatio_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.TestItem_ZDRatio_Result)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itemtype(), target);
  }

  // uint32 iTypeIndex = 2;
  if (this->itypeindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itypeindex(), target);
  }

  // uint32 iIndex = 3;
  if (this->iindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->iindex(), target);
  }

  // .Differential.BasicResultItem basic = 4;
  if (this->has_basic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->basic_, false, target);
  }

  // float Id = 5;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->id(), target);
  }

  // bool bEnd = 6;
  if (this->bend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bend(), target);
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->nibinstate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.TestItem_ZDRatio_Result)
  return target;
}

size_t TestItem_ZDRatio_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.TestItem_ZDRatio_Result)
  size_t total_size = 0;

  // .Differential.BasicResultItem basic = 4;
  if (this->has_basic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->basic_);
  }

  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  // uint32 iTypeIndex = 2;
  if (this->itypeindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itypeindex());
  }

  // uint32 iIndex = 3;
  if (this->iindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iindex());
  }

  // float Id = 5;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  // bool bEnd = 6;
  if (this->bend() != 0) {
    total_size += 1 + 1;
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nibinstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestItem_ZDRatio_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.TestItem_ZDRatio_Result)
  GOOGLE_DCHECK_NE(&from, this);
  const TestItem_ZDRatio_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestItem_ZDRatio_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.TestItem_ZDRatio_Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.TestItem_ZDRatio_Result)
    MergeFrom(*source);
  }
}

void TestItem_ZDRatio_Result::MergeFrom(const TestItem_ZDRatio_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.TestItem_ZDRatio_Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    mutable_basic()->::Differential::BasicResultItem::MergeFrom(from.basic());
  }
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.itypeindex() != 0) {
    set_itypeindex(from.itypeindex());
  }
  if (from.iindex() != 0) {
    set_iindex(from.iindex());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.bend() != 0) {
    set_bend(from.bend());
  }
  if (from.nibinstate() != 0) {
    set_nibinstate(from.nibinstate());
  }
}

void TestItem_ZDRatio_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.TestItem_ZDRatio_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestItem_ZDRatio_Result::CopyFrom(const TestItem_ZDRatio_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.TestItem_ZDRatio_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestItem_ZDRatio_Result::IsInitialized() const {
  return true;
}

void TestItem_ZDRatio_Result::Swap(TestItem_ZDRatio_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestItem_ZDRatio_Result::InternalSwap(TestItem_ZDRatio_Result* other) {
  std::swap(basic_, other->basic_);
  std::swap(itemtype_, other->itemtype_);
  std::swap(itypeindex_, other->itypeindex_);
  std::swap(iindex_, other->iindex_);
  std::swap(id_, other->id_);
  std::swap(bend_, other->bend_);
  std::swap(nibinstate_, other->nibinstate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestItem_ZDRatio_Result::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestItem_ZDRatio_Result

// .Differential.TestItem_type itemtype = 1;
void TestItem_ZDRatio_Result::clear_itemtype() {
  itemtype_ = 0;
}
::Differential::TestItem_type TestItem_ZDRatio_Result::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
void TestItem_ZDRatio_Result::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.itemtype)
}

// uint32 iTypeIndex = 2;
void TestItem_ZDRatio_Result::clear_itypeindex() {
  itypeindex_ = 0u;
}
::google::protobuf::uint32 TestItem_ZDRatio_Result::itypeindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.iTypeIndex)
  return itypeindex_;
}
void TestItem_ZDRatio_Result::set_itypeindex(::google::protobuf::uint32 value) {
  
  itypeindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.iTypeIndex)
}

// uint32 iIndex = 3;
void TestItem_ZDRatio_Result::clear_iindex() {
  iindex_ = 0u;
}
::google::protobuf::uint32 TestItem_ZDRatio_Result::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.iIndex)
  return iindex_;
}
void TestItem_ZDRatio_Result::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.iIndex)
}

// .Differential.BasicResultItem basic = 4;
bool TestItem_ZDRatio_Result::has_basic() const {
  return this != internal_default_instance() && basic_ != NULL;
}
void TestItem_ZDRatio_Result::clear_basic() {
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) delete basic_;
  basic_ = NULL;
}
const ::Differential::BasicResultItem& TestItem_ZDRatio_Result::basic() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.basic)
  return basic_ != NULL ? *basic_
                         : *::Differential::BasicResultItem::internal_default_instance();
}
::Differential::BasicResultItem* TestItem_ZDRatio_Result::mutable_basic() {
  
  if (basic_ == NULL) {
    basic_ = new ::Differential::BasicResultItem;
  }
  // @@protoc_insertion_point(field_mutable:Differential.TestItem_ZDRatio_Result.basic)
  return basic_;
}
::Differential::BasicResultItem* TestItem_ZDRatio_Result::release_basic() {
  // @@protoc_insertion_point(field_release:Differential.TestItem_ZDRatio_Result.basic)
  
  ::Differential::BasicResultItem* temp = basic_;
  basic_ = NULL;
  return temp;
}
void TestItem_ZDRatio_Result::set_allocated_basic(::Differential::BasicResultItem* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.TestItem_ZDRatio_Result.basic)
}

// float Id = 5;
void TestItem_ZDRatio_Result::clear_id() {
  id_ = 0;
}
float TestItem_ZDRatio_Result::id() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.Id)
  return id_;
}
void TestItem_ZDRatio_Result::set_id(float value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.Id)
}

// bool bEnd = 6;
void TestItem_ZDRatio_Result::clear_bend() {
  bend_ = false;
}
bool TestItem_ZDRatio_Result::bend() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.bEnd)
  return bend_;
}
void TestItem_ZDRatio_Result::set_bend(bool value) {
  
  bend_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.bEnd)
}

// uint32 nibinstate = 7;
void TestItem_ZDRatio_Result::clear_nibinstate() {
  nibinstate_ = 0u;
}
::google::protobuf::uint32 TestItem_ZDRatio_Result::nibinstate() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.nibinstate)
  return nibinstate_;
}
void TestItem_ZDRatio_Result::set_nibinstate(::google::protobuf::uint32 value) {
  
  nibinstate_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.nibinstate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HarmonicRatio::kItemtypeFieldNumber;
const int HarmonicRatio::kIIndexFieldNumber;
const int HarmonicRatio::kIdFieldNumber;
const int HarmonicRatio::kNHamFieldNumber;
const int HarmonicRatio::kFStartFieldNumber;
const int HarmonicRatio::kFEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HarmonicRatio::HarmonicRatio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.HarmonicRatio)
}
HarmonicRatio::HarmonicRatio(const HarmonicRatio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemtype_, &from.itemtype_,
    reinterpret_cast<char*>(&fend_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(fend_));
  // @@protoc_insertion_point(copy_constructor:Differential.HarmonicRatio)
}

void HarmonicRatio::SharedCtor() {
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&fend_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(fend_));
  _cached_size_ = 0;
}

HarmonicRatio::~HarmonicRatio() {
  // @@protoc_insertion_point(destructor:Differential.HarmonicRatio)
  SharedDtor();
}

void HarmonicRatio::SharedDtor() {
}

void HarmonicRatio::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HarmonicRatio::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[6].descriptor;
}

const HarmonicRatio& HarmonicRatio::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

HarmonicRatio* HarmonicRatio::New(::google::protobuf::Arena* arena) const {
  HarmonicRatio* n = new HarmonicRatio;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HarmonicRatio::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.HarmonicRatio)
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&fend_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(fend_));
}

bool HarmonicRatio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.HarmonicRatio)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.TestItem_type itemtype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::Differential::TestItem_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Id = 3;
      case 3: {
        if (tag == 29u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nHam = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nham_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fStart = 5;
      case 5: {
        if (tag == 45u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fstart_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fEnd = 6;
      case 6: {
        if (tag == 53u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.HarmonicRatio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.HarmonicRatio)
  return false;
#undef DO_
}

void HarmonicRatio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.HarmonicRatio)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itemtype(), output);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->iindex(), output);
  }

  // float Id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->id(), output);
  }

  // uint32 nHam = 4;
  if (this->nham() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nham(), output);
  }

  // float fStart = 5;
  if (this->fstart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->fstart(), output);
  }

  // float fEnd = 6;
  if (this->fend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->fend(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.HarmonicRatio)
}

::google::protobuf::uint8* HarmonicRatio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.HarmonicRatio)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itemtype(), target);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->iindex(), target);
  }

  // float Id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->id(), target);
  }

  // uint32 nHam = 4;
  if (this->nham() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->nham(), target);
  }

  // float fStart = 5;
  if (this->fstart() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->fstart(), target);
  }

  // float fEnd = 6;
  if (this->fend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->fend(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.HarmonicRatio)
  return target;
}

size_t HarmonicRatio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.HarmonicRatio)
  size_t total_size = 0;

  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iindex());
  }

  // float Id = 3;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  // uint32 nHam = 4;
  if (this->nham() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nham());
  }

  // float fStart = 5;
  if (this->fstart() != 0) {
    total_size += 1 + 4;
  }

  // float fEnd = 6;
  if (this->fend() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HarmonicRatio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.HarmonicRatio)
  GOOGLE_DCHECK_NE(&from, this);
  const HarmonicRatio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HarmonicRatio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.HarmonicRatio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.HarmonicRatio)
    MergeFrom(*source);
  }
}

void HarmonicRatio::MergeFrom(const HarmonicRatio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.HarmonicRatio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.iindex() != 0) {
    set_iindex(from.iindex());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.nham() != 0) {
    set_nham(from.nham());
  }
  if (from.fstart() != 0) {
    set_fstart(from.fstart());
  }
  if (from.fend() != 0) {
    set_fend(from.fend());
  }
}

void HarmonicRatio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.HarmonicRatio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HarmonicRatio::CopyFrom(const HarmonicRatio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.HarmonicRatio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HarmonicRatio::IsInitialized() const {
  return true;
}

void HarmonicRatio::Swap(HarmonicRatio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HarmonicRatio::InternalSwap(HarmonicRatio* other) {
  std::swap(itemtype_, other->itemtype_);
  std::swap(iindex_, other->iindex_);
  std::swap(id_, other->id_);
  std::swap(nham_, other->nham_);
  std::swap(fstart_, other->fstart_);
  std::swap(fend_, other->fend_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HarmonicRatio::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HarmonicRatio

// .Differential.TestItem_type itemtype = 1;
void HarmonicRatio::clear_itemtype() {
  itemtype_ = 0;
}
::Differential::TestItem_type HarmonicRatio::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
void HarmonicRatio::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio.itemtype)
}

// uint32 iIndex = 2;
void HarmonicRatio::clear_iindex() {
  iindex_ = 0u;
}
::google::protobuf::uint32 HarmonicRatio::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio.iIndex)
  return iindex_;
}
void HarmonicRatio::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio.iIndex)
}

// float Id = 3;
void HarmonicRatio::clear_id() {
  id_ = 0;
}
float HarmonicRatio::id() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio.Id)
  return id_;
}
void HarmonicRatio::set_id(float value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio.Id)
}

// uint32 nHam = 4;
void HarmonicRatio::clear_nham() {
  nham_ = 0u;
}
::google::protobuf::uint32 HarmonicRatio::nham() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio.nHam)
  return nham_;
}
void HarmonicRatio::set_nham(::google::protobuf::uint32 value) {
  
  nham_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio.nHam)
}

// float fStart = 5;
void HarmonicRatio::clear_fstart() {
  fstart_ = 0;
}
float HarmonicRatio::fstart() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio.fStart)
  return fstart_;
}
void HarmonicRatio::set_fstart(float value) {
  
  fstart_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio.fStart)
}

// float fEnd = 6;
void HarmonicRatio::clear_fend() {
  fend_ = 0;
}
float HarmonicRatio::fend() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio.fEnd)
  return fend_;
}
void HarmonicRatio::set_fend(float value) {
  
  fend_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio.fEnd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HarmonicRatio_Result::kItemtypeFieldNumber;
const int HarmonicRatio_Result::kIIndexFieldNumber;
const int HarmonicRatio_Result::kBasicFieldNumber;
const int HarmonicRatio_Result::kIrFieldNumber;
const int HarmonicRatio_Result::kKFieldNumber;
const int HarmonicRatio_Result::kBEndFieldNumber;
const int HarmonicRatio_Result::kNibinstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HarmonicRatio_Result::HarmonicRatio_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.HarmonicRatio_Result)
}
HarmonicRatio_Result::HarmonicRatio_Result(const HarmonicRatio_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::Differential::BasicResultItem(*from.basic_);
  } else {
    basic_ = NULL;
  }
  ::memcpy(&itemtype_, &from.itemtype_,
    reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(nibinstate_));
  // @@protoc_insertion_point(copy_constructor:Differential.HarmonicRatio_Result)
}

void HarmonicRatio_Result::SharedCtor() {
  ::memset(&basic_, 0, reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&basic_) + sizeof(nibinstate_));
  _cached_size_ = 0;
}

HarmonicRatio_Result::~HarmonicRatio_Result() {
  // @@protoc_insertion_point(destructor:Differential.HarmonicRatio_Result)
  SharedDtor();
}

void HarmonicRatio_Result::SharedDtor() {
  if (this != internal_default_instance()) {
    delete basic_;
  }
}

void HarmonicRatio_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HarmonicRatio_Result::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[7].descriptor;
}

const HarmonicRatio_Result& HarmonicRatio_Result::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

HarmonicRatio_Result* HarmonicRatio_Result::New(::google::protobuf::Arena* arena) const {
  HarmonicRatio_Result* n = new HarmonicRatio_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HarmonicRatio_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.HarmonicRatio_Result)
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) {
    delete basic_;
  }
  basic_ = NULL;
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(nibinstate_));
}

bool HarmonicRatio_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.HarmonicRatio_Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.TestItem_type itemtype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::Differential::TestItem_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.BasicResultItem basic = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Ir = 4;
      case 4: {
        if (tag == 37u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float K = 5;
      case 5: {
        if (tag == 45u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &k_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bEnd = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nibinstate = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nibinstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.HarmonicRatio_Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.HarmonicRatio_Result)
  return false;
#undef DO_
}

void HarmonicRatio_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.HarmonicRatio_Result)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itemtype(), output);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->iindex(), output);
  }

  // .Differential.BasicResultItem basic = 3;
  if (this->has_basic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->basic_, output);
  }

  // float Ir = 4;
  if (this->ir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->ir(), output);
  }

  // float K = 5;
  if (this->k() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->k(), output);
  }

  // bool bEnd = 6;
  if (this->bend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bend(), output);
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->nibinstate(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.HarmonicRatio_Result)
}

::google::protobuf::uint8* HarmonicRatio_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.HarmonicRatio_Result)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itemtype(), target);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->iindex(), target);
  }

  // .Differential.BasicResultItem basic = 3;
  if (this->has_basic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->basic_, false, target);
  }

  // float Ir = 4;
  if (this->ir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->ir(), target);
  }

  // float K = 5;
  if (this->k() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->k(), target);
  }

  // bool bEnd = 6;
  if (this->bend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bend(), target);
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->nibinstate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.HarmonicRatio_Result)
  return target;
}

size_t HarmonicRatio_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.HarmonicRatio_Result)
  size_t total_size = 0;

  // .Differential.BasicResultItem basic = 3;
  if (this->has_basic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->basic_);
  }

  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iindex());
  }

  // float Ir = 4;
  if (this->ir() != 0) {
    total_size += 1 + 4;
  }

  // float K = 5;
  if (this->k() != 0) {
    total_size += 1 + 4;
  }

  // bool bEnd = 6;
  if (this->bend() != 0) {
    total_size += 1 + 1;
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nibinstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HarmonicRatio_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.HarmonicRatio_Result)
  GOOGLE_DCHECK_NE(&from, this);
  const HarmonicRatio_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HarmonicRatio_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.HarmonicRatio_Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.HarmonicRatio_Result)
    MergeFrom(*source);
  }
}

void HarmonicRatio_Result::MergeFrom(const HarmonicRatio_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.HarmonicRatio_Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    mutable_basic()->::Differential::BasicResultItem::MergeFrom(from.basic());
  }
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.iindex() != 0) {
    set_iindex(from.iindex());
  }
  if (from.ir() != 0) {
    set_ir(from.ir());
  }
  if (from.k() != 0) {
    set_k(from.k());
  }
  if (from.bend() != 0) {
    set_bend(from.bend());
  }
  if (from.nibinstate() != 0) {
    set_nibinstate(from.nibinstate());
  }
}

void HarmonicRatio_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.HarmonicRatio_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HarmonicRatio_Result::CopyFrom(const HarmonicRatio_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.HarmonicRatio_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HarmonicRatio_Result::IsInitialized() const {
  return true;
}

void HarmonicRatio_Result::Swap(HarmonicRatio_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HarmonicRatio_Result::InternalSwap(HarmonicRatio_Result* other) {
  std::swap(basic_, other->basic_);
  std::swap(itemtype_, other->itemtype_);
  std::swap(iindex_, other->iindex_);
  std::swap(ir_, other->ir_);
  std::swap(k_, other->k_);
  std::swap(bend_, other->bend_);
  std::swap(nibinstate_, other->nibinstate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HarmonicRatio_Result::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HarmonicRatio_Result

// .Differential.TestItem_type itemtype = 1;
void HarmonicRatio_Result::clear_itemtype() {
  itemtype_ = 0;
}
::Differential::TestItem_type HarmonicRatio_Result::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
void HarmonicRatio_Result::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.itemtype)
}

// uint32 iIndex = 2;
void HarmonicRatio_Result::clear_iindex() {
  iindex_ = 0u;
}
::google::protobuf::uint32 HarmonicRatio_Result::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.iIndex)
  return iindex_;
}
void HarmonicRatio_Result::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.iIndex)
}

// .Differential.BasicResultItem basic = 3;
bool HarmonicRatio_Result::has_basic() const {
  return this != internal_default_instance() && basic_ != NULL;
}
void HarmonicRatio_Result::clear_basic() {
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) delete basic_;
  basic_ = NULL;
}
const ::Differential::BasicResultItem& HarmonicRatio_Result::basic() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.basic)
  return basic_ != NULL ? *basic_
                         : *::Differential::BasicResultItem::internal_default_instance();
}
::Differential::BasicResultItem* HarmonicRatio_Result::mutable_basic() {
  
  if (basic_ == NULL) {
    basic_ = new ::Differential::BasicResultItem;
  }
  // @@protoc_insertion_point(field_mutable:Differential.HarmonicRatio_Result.basic)
  return basic_;
}
::Differential::BasicResultItem* HarmonicRatio_Result::release_basic() {
  // @@protoc_insertion_point(field_release:Differential.HarmonicRatio_Result.basic)
  
  ::Differential::BasicResultItem* temp = basic_;
  basic_ = NULL;
  return temp;
}
void HarmonicRatio_Result::set_allocated_basic(::Differential::BasicResultItem* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.HarmonicRatio_Result.basic)
}

// float Ir = 4;
void HarmonicRatio_Result::clear_ir() {
  ir_ = 0;
}
float HarmonicRatio_Result::ir() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.Ir)
  return ir_;
}
void HarmonicRatio_Result::set_ir(float value) {
  
  ir_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.Ir)
}

// float K = 5;
void HarmonicRatio_Result::clear_k() {
  k_ = 0;
}
float HarmonicRatio_Result::k() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.K)
  return k_;
}
void HarmonicRatio_Result::set_k(float value) {
  
  k_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.K)
}

// bool bEnd = 6;
void HarmonicRatio_Result::clear_bend() {
  bend_ = false;
}
bool HarmonicRatio_Result::bend() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.bEnd)
  return bend_;
}
void HarmonicRatio_Result::set_bend(bool value) {
  
  bend_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.bEnd)
}

// uint32 nibinstate = 7;
void HarmonicRatio_Result::clear_nibinstate() {
  nibinstate_ = 0u;
}
::google::protobuf::uint32 HarmonicRatio_Result::nibinstate() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.nibinstate)
  return nibinstate_;
}
void HarmonicRatio_Result::set_nibinstate(::google::protobuf::uint32 value) {
  
  nibinstate_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.nibinstate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestItem_ActionTime::kItemtypeFieldNumber;
const int TestItem_ActionTime::kIIndexFieldNumber;
const int TestItem_ActionTime::kIdFieldNumber;
const int TestItem_ActionTime::kIrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestItem_ActionTime::TestItem_ActionTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.TestItem_ActionTime)
}
TestItem_ActionTime::TestItem_ActionTime(const TestItem_ActionTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemtype_, &from.itemtype_,
    reinterpret_cast<char*>(&ir_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(ir_));
  // @@protoc_insertion_point(copy_constructor:Differential.TestItem_ActionTime)
}

void TestItem_ActionTime::SharedCtor() {
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&ir_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(ir_));
  _cached_size_ = 0;
}

TestItem_ActionTime::~TestItem_ActionTime() {
  // @@protoc_insertion_point(destructor:Differential.TestItem_ActionTime)
  SharedDtor();
}

void TestItem_ActionTime::SharedDtor() {
}

void TestItem_ActionTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestItem_ActionTime::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[8].descriptor;
}

const TestItem_ActionTime& TestItem_ActionTime::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestItem_ActionTime* TestItem_ActionTime::New(::google::protobuf::Arena* arena) const {
  TestItem_ActionTime* n = new TestItem_ActionTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestItem_ActionTime::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.TestItem_ActionTime)
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&ir_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(ir_));
}

bool TestItem_ActionTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.TestItem_ActionTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.TestItem_type itemtype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::Differential::TestItem_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Id = 3;
      case 3: {
        if (tag == 29u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Ir = 4;
      case 4: {
        if (tag == 37u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.TestItem_ActionTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.TestItem_ActionTime)
  return false;
#undef DO_
}

void TestItem_ActionTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.TestItem_ActionTime)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itemtype(), output);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->iindex(), output);
  }

  // float Id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->id(), output);
  }

  // float Ir = 4;
  if (this->ir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->ir(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.TestItem_ActionTime)
}

::google::protobuf::uint8* TestItem_ActionTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.TestItem_ActionTime)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itemtype(), target);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->iindex(), target);
  }

  // float Id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->id(), target);
  }

  // float Ir = 4;
  if (this->ir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->ir(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.TestItem_ActionTime)
  return target;
}

size_t TestItem_ActionTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.TestItem_ActionTime)
  size_t total_size = 0;

  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iindex());
  }

  // float Id = 3;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  // float Ir = 4;
  if (this->ir() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestItem_ActionTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.TestItem_ActionTime)
  GOOGLE_DCHECK_NE(&from, this);
  const TestItem_ActionTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestItem_ActionTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.TestItem_ActionTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.TestItem_ActionTime)
    MergeFrom(*source);
  }
}

void TestItem_ActionTime::MergeFrom(const TestItem_ActionTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.TestItem_ActionTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.iindex() != 0) {
    set_iindex(from.iindex());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.ir() != 0) {
    set_ir(from.ir());
  }
}

void TestItem_ActionTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.TestItem_ActionTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestItem_ActionTime::CopyFrom(const TestItem_ActionTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.TestItem_ActionTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestItem_ActionTime::IsInitialized() const {
  return true;
}

void TestItem_ActionTime::Swap(TestItem_ActionTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestItem_ActionTime::InternalSwap(TestItem_ActionTime* other) {
  std::swap(itemtype_, other->itemtype_);
  std::swap(iindex_, other->iindex_);
  std::swap(id_, other->id_);
  std::swap(ir_, other->ir_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestItem_ActionTime::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestItem_ActionTime

// .Differential.TestItem_type itemtype = 1;
void TestItem_ActionTime::clear_itemtype() {
  itemtype_ = 0;
}
::Differential::TestItem_type TestItem_ActionTime::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
void TestItem_ActionTime::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime.itemtype)
}

// uint32 iIndex = 2;
void TestItem_ActionTime::clear_iindex() {
  iindex_ = 0u;
}
::google::protobuf::uint32 TestItem_ActionTime::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime.iIndex)
  return iindex_;
}
void TestItem_ActionTime::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime.iIndex)
}

// float Id = 3;
void TestItem_ActionTime::clear_id() {
  id_ = 0;
}
float TestItem_ActionTime::id() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime.Id)
  return id_;
}
void TestItem_ActionTime::set_id(float value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime.Id)
}

// float Ir = 4;
void TestItem_ActionTime::clear_ir() {
  ir_ = 0;
}
float TestItem_ActionTime::ir() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime.Ir)
  return ir_;
}
void TestItem_ActionTime::set_ir(float value) {
  
  ir_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime.Ir)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestItem_ActionTime_Result::kItemtypeFieldNumber;
const int TestItem_ActionTime_Result::kIIndexFieldNumber;
const int TestItem_ActionTime_Result::kBasicFieldNumber;
const int TestItem_ActionTime_Result::kFIdFieldNumber;
const int TestItem_ActionTime_Result::kFtimeFieldNumber;
const int TestItem_ActionTime_Result::kBEndFieldNumber;
const int TestItem_ActionTime_Result::kNibinstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestItem_ActionTime_Result::TestItem_ActionTime_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.TestItem_ActionTime_Result)
}
TestItem_ActionTime_Result::TestItem_ActionTime_Result(const TestItem_ActionTime_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::Differential::BasicResultItem(*from.basic_);
  } else {
    basic_ = NULL;
  }
  ::memcpy(&itemtype_, &from.itemtype_,
    reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(nibinstate_));
  // @@protoc_insertion_point(copy_constructor:Differential.TestItem_ActionTime_Result)
}

void TestItem_ActionTime_Result::SharedCtor() {
  ::memset(&basic_, 0, reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&basic_) + sizeof(nibinstate_));
  _cached_size_ = 0;
}

TestItem_ActionTime_Result::~TestItem_ActionTime_Result() {
  // @@protoc_insertion_point(destructor:Differential.TestItem_ActionTime_Result)
  SharedDtor();
}

void TestItem_ActionTime_Result::SharedDtor() {
  if (this != internal_default_instance()) {
    delete basic_;
  }
}

void TestItem_ActionTime_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestItem_ActionTime_Result::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[9].descriptor;
}

const TestItem_ActionTime_Result& TestItem_ActionTime_Result::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestItem_ActionTime_Result* TestItem_ActionTime_Result::New(::google::protobuf::Arena* arena) const {
  TestItem_ActionTime_Result* n = new TestItem_ActionTime_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestItem_ActionTime_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.TestItem_ActionTime_Result)
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) {
    delete basic_;
  }
  basic_ = NULL;
  ::memset(&itemtype_, 0, reinterpret_cast<char*>(&nibinstate_) -
    reinterpret_cast<char*>(&itemtype_) + sizeof(nibinstate_));
}

bool TestItem_ActionTime_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.TestItem_ActionTime_Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.TestItem_type itemtype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::Differential::TestItem_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iIndex = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.BasicResultItem basic = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fId = 4;
      case 4: {
        if (tag == 37u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ftime = 5;
      case 5: {
        if (tag == 45u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ftime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bEnd = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nibinstate = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nibinstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.TestItem_ActionTime_Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.TestItem_ActionTime_Result)
  return false;
#undef DO_
}

void TestItem_ActionTime_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.TestItem_ActionTime_Result)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itemtype(), output);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->iindex(), output);
  }

  // .Differential.BasicResultItem basic = 3;
  if (this->has_basic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->basic_, output);
  }

  // float fId = 4;
  if (this->fid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->fid(), output);
  }

  // float ftime = 5;
  if (this->ftime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->ftime(), output);
  }

  // bool bEnd = 6;
  if (this->bend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bend(), output);
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->nibinstate(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.TestItem_ActionTime_Result)
}

::google::protobuf::uint8* TestItem_ActionTime_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.TestItem_ActionTime_Result)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itemtype(), target);
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->iindex(), target);
  }

  // .Differential.BasicResultItem basic = 3;
  if (this->has_basic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->basic_, false, target);
  }

  // float fId = 4;
  if (this->fid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->fid(), target);
  }

  // float ftime = 5;
  if (this->ftime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->ftime(), target);
  }

  // bool bEnd = 6;
  if (this->bend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bend(), target);
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->nibinstate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.TestItem_ActionTime_Result)
  return target;
}

size_t TestItem_ActionTime_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.TestItem_ActionTime_Result)
  size_t total_size = 0;

  // .Differential.BasicResultItem basic = 3;
  if (this->has_basic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->basic_);
  }

  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  // uint32 iIndex = 2;
  if (this->iindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iindex());
  }

  // float fId = 4;
  if (this->fid() != 0) {
    total_size += 1 + 4;
  }

  // float ftime = 5;
  if (this->ftime() != 0) {
    total_size += 1 + 4;
  }

  // bool bEnd = 6;
  if (this->bend() != 0) {
    total_size += 1 + 1;
  }

  // uint32 nibinstate = 7;
  if (this->nibinstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nibinstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestItem_ActionTime_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.TestItem_ActionTime_Result)
  GOOGLE_DCHECK_NE(&from, this);
  const TestItem_ActionTime_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestItem_ActionTime_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.TestItem_ActionTime_Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.TestItem_ActionTime_Result)
    MergeFrom(*source);
  }
}

void TestItem_ActionTime_Result::MergeFrom(const TestItem_ActionTime_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.TestItem_ActionTime_Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    mutable_basic()->::Differential::BasicResultItem::MergeFrom(from.basic());
  }
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.iindex() != 0) {
    set_iindex(from.iindex());
  }
  if (from.fid() != 0) {
    set_fid(from.fid());
  }
  if (from.ftime() != 0) {
    set_ftime(from.ftime());
  }
  if (from.bend() != 0) {
    set_bend(from.bend());
  }
  if (from.nibinstate() != 0) {
    set_nibinstate(from.nibinstate());
  }
}

void TestItem_ActionTime_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.TestItem_ActionTime_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestItem_ActionTime_Result::CopyFrom(const TestItem_ActionTime_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.TestItem_ActionTime_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestItem_ActionTime_Result::IsInitialized() const {
  return true;
}

void TestItem_ActionTime_Result::Swap(TestItem_ActionTime_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestItem_ActionTime_Result::InternalSwap(TestItem_ActionTime_Result* other) {
  std::swap(basic_, other->basic_);
  std::swap(itemtype_, other->itemtype_);
  std::swap(iindex_, other->iindex_);
  std::swap(fid_, other->fid_);
  std::swap(ftime_, other->ftime_);
  std::swap(bend_, other->bend_);
  std::swap(nibinstate_, other->nibinstate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestItem_ActionTime_Result::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestItem_ActionTime_Result

// .Differential.TestItem_type itemtype = 1;
void TestItem_ActionTime_Result::clear_itemtype() {
  itemtype_ = 0;
}
::Differential::TestItem_type TestItem_ActionTime_Result::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
void TestItem_ActionTime_Result::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.itemtype)
}

// uint32 iIndex = 2;
void TestItem_ActionTime_Result::clear_iindex() {
  iindex_ = 0u;
}
::google::protobuf::uint32 TestItem_ActionTime_Result::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.iIndex)
  return iindex_;
}
void TestItem_ActionTime_Result::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.iIndex)
}

// .Differential.BasicResultItem basic = 3;
bool TestItem_ActionTime_Result::has_basic() const {
  return this != internal_default_instance() && basic_ != NULL;
}
void TestItem_ActionTime_Result::clear_basic() {
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) delete basic_;
  basic_ = NULL;
}
const ::Differential::BasicResultItem& TestItem_ActionTime_Result::basic() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.basic)
  return basic_ != NULL ? *basic_
                         : *::Differential::BasicResultItem::internal_default_instance();
}
::Differential::BasicResultItem* TestItem_ActionTime_Result::mutable_basic() {
  
  if (basic_ == NULL) {
    basic_ = new ::Differential::BasicResultItem;
  }
  // @@protoc_insertion_point(field_mutable:Differential.TestItem_ActionTime_Result.basic)
  return basic_;
}
::Differential::BasicResultItem* TestItem_ActionTime_Result::release_basic() {
  // @@protoc_insertion_point(field_release:Differential.TestItem_ActionTime_Result.basic)
  
  ::Differential::BasicResultItem* temp = basic_;
  basic_ = NULL;
  return temp;
}
void TestItem_ActionTime_Result::set_allocated_basic(::Differential::BasicResultItem* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.TestItem_ActionTime_Result.basic)
}

// float fId = 4;
void TestItem_ActionTime_Result::clear_fid() {
  fid_ = 0;
}
float TestItem_ActionTime_Result::fid() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.fId)
  return fid_;
}
void TestItem_ActionTime_Result::set_fid(float value) {
  
  fid_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.fId)
}

// float ftime = 5;
void TestItem_ActionTime_Result::clear_ftime() {
  ftime_ = 0;
}
float TestItem_ActionTime_Result::ftime() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.ftime)
  return ftime_;
}
void TestItem_ActionTime_Result::set_ftime(float value) {
  
  ftime_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.ftime)
}

// bool bEnd = 6;
void TestItem_ActionTime_Result::clear_bend() {
  bend_ = false;
}
bool TestItem_ActionTime_Result::bend() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.bEnd)
  return bend_;
}
void TestItem_ActionTime_Result::set_bend(bool value) {
  
  bend_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.bEnd)
}

// uint32 nibinstate = 7;
void TestItem_ActionTime_Result::clear_nibinstate() {
  nibinstate_ = 0u;
}
::google::protobuf::uint32 TestItem_ActionTime_Result::nibinstate() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.nibinstate)
  return nibinstate_;
}
void TestItem_ActionTime_Result::set_nibinstate(::google::protobuf::uint32 value) {
  
  nibinstate_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.nibinstate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int testItem::kItemtypeFieldNumber;
const int testItem::kOQdcurrentFieldNumber;
const int testItem::kOActionTimeFieldNumber;
const int testItem::kOZDRatioFieldNumber;
const int testItem::kOHarmnonicRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

testItem::testItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.testItem)
}
testItem::testItem(const testItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oqdcurrent()) {
    oqdcurrent_ = new ::Differential::TestItem_QDCurrent(*from.oqdcurrent_);
  } else {
    oqdcurrent_ = NULL;
  }
  if (from.has_oactiontime()) {
    oactiontime_ = new ::Differential::TestItem_ActionTime(*from.oactiontime_);
  } else {
    oactiontime_ = NULL;
  }
  if (from.has_ozdratio()) {
    ozdratio_ = new ::Differential::TestItem_ZDRatio(*from.ozdratio_);
  } else {
    ozdratio_ = NULL;
  }
  if (from.has_oharmnonicratio()) {
    oharmnonicratio_ = new ::Differential::HarmonicRatio(*from.oharmnonicratio_);
  } else {
    oharmnonicratio_ = NULL;
  }
  itemtype_ = from.itemtype_;
  // @@protoc_insertion_point(copy_constructor:Differential.testItem)
}

void testItem::SharedCtor() {
  ::memset(&oqdcurrent_, 0, reinterpret_cast<char*>(&itemtype_) -
    reinterpret_cast<char*>(&oqdcurrent_) + sizeof(itemtype_));
  _cached_size_ = 0;
}

testItem::~testItem() {
  // @@protoc_insertion_point(destructor:Differential.testItem)
  SharedDtor();
}

void testItem::SharedDtor() {
  if (this != internal_default_instance()) {
    delete oqdcurrent_;
  }
  if (this != internal_default_instance()) {
    delete oactiontime_;
  }
  if (this != internal_default_instance()) {
    delete ozdratio_;
  }
  if (this != internal_default_instance()) {
    delete oharmnonicratio_;
  }
}

void testItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* testItem::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[10].descriptor;
}

const testItem& testItem::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

testItem* testItem::New(::google::protobuf::Arena* arena) const {
  testItem* n = new testItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void testItem::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.testItem)
  if (GetArenaNoVirtual() == NULL && oqdcurrent_ != NULL) {
    delete oqdcurrent_;
  }
  oqdcurrent_ = NULL;
  if (GetArenaNoVirtual() == NULL && oactiontime_ != NULL) {
    delete oactiontime_;
  }
  oactiontime_ = NULL;
  if (GetArenaNoVirtual() == NULL && ozdratio_ != NULL) {
    delete ozdratio_;
  }
  ozdratio_ = NULL;
  if (GetArenaNoVirtual() == NULL && oharmnonicratio_ != NULL) {
    delete oharmnonicratio_;
  }
  oharmnonicratio_ = NULL;
  itemtype_ = 0;
}

bool testItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.testItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.TestItem_type itemtype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::Differential::TestItem_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.TestItem_QDCurrent oQdcurrent = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oqdcurrent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.TestItem_ActionTime oActionTime = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oactiontime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.TestItem_ZDRatio oZDRatio = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ozdratio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.HarmonicRatio oHarmnonicRatio = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oharmnonicratio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.testItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.testItem)
  return false;
#undef DO_
}

void testItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.testItem)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itemtype(), output);
  }

  // .Differential.TestItem_QDCurrent oQdcurrent = 2;
  if (this->has_oqdcurrent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->oqdcurrent_, output);
  }

  // .Differential.TestItem_ActionTime oActionTime = 3;
  if (this->has_oactiontime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->oactiontime_, output);
  }

  // .Differential.TestItem_ZDRatio oZDRatio = 4;
  if (this->has_ozdratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->ozdratio_, output);
  }

  // .Differential.HarmonicRatio oHarmnonicRatio = 5;
  if (this->has_oharmnonicratio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->oharmnonicratio_, output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.testItem)
}

::google::protobuf::uint8* testItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.testItem)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itemtype(), target);
  }

  // .Differential.TestItem_QDCurrent oQdcurrent = 2;
  if (this->has_oqdcurrent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->oqdcurrent_, false, target);
  }

  // .Differential.TestItem_ActionTime oActionTime = 3;
  if (this->has_oactiontime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->oactiontime_, false, target);
  }

  // .Differential.TestItem_ZDRatio oZDRatio = 4;
  if (this->has_ozdratio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->ozdratio_, false, target);
  }

  // .Differential.HarmonicRatio oHarmnonicRatio = 5;
  if (this->has_oharmnonicratio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->oharmnonicratio_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.testItem)
  return target;
}

size_t testItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.testItem)
  size_t total_size = 0;

  // .Differential.TestItem_QDCurrent oQdcurrent = 2;
  if (this->has_oqdcurrent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oqdcurrent_);
  }

  // .Differential.TestItem_ActionTime oActionTime = 3;
  if (this->has_oactiontime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oactiontime_);
  }

  // .Differential.TestItem_ZDRatio oZDRatio = 4;
  if (this->has_ozdratio()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ozdratio_);
  }

  // .Differential.HarmonicRatio oHarmnonicRatio = 5;
  if (this->has_oharmnonicratio()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oharmnonicratio_);
  }

  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void testItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.testItem)
  GOOGLE_DCHECK_NE(&from, this);
  const testItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const testItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.testItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.testItem)
    MergeFrom(*source);
  }
}

void testItem::MergeFrom(const testItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.testItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oqdcurrent()) {
    mutable_oqdcurrent()->::Differential::TestItem_QDCurrent::MergeFrom(from.oqdcurrent());
  }
  if (from.has_oactiontime()) {
    mutable_oactiontime()->::Differential::TestItem_ActionTime::MergeFrom(from.oactiontime());
  }
  if (from.has_ozdratio()) {
    mutable_ozdratio()->::Differential::TestItem_ZDRatio::MergeFrom(from.ozdratio());
  }
  if (from.has_oharmnonicratio()) {
    mutable_oharmnonicratio()->::Differential::HarmonicRatio::MergeFrom(from.oharmnonicratio());
  }
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
}

void testItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.testItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void testItem::CopyFrom(const testItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.testItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool testItem::IsInitialized() const {
  return true;
}

void testItem::Swap(testItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void testItem::InternalSwap(testItem* other) {
  std::swap(oqdcurrent_, other->oqdcurrent_);
  std::swap(oactiontime_, other->oactiontime_);
  std::swap(ozdratio_, other->ozdratio_);
  std::swap(oharmnonicratio_, other->oharmnonicratio_);
  std::swap(itemtype_, other->itemtype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata testItem::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// testItem

// .Differential.TestItem_type itemtype = 1;
void testItem::clear_itemtype() {
  itemtype_ = 0;
}
::Differential::TestItem_type testItem::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.testItem.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
void testItem::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.testItem.itemtype)
}

// .Differential.TestItem_QDCurrent oQdcurrent = 2;
bool testItem::has_oqdcurrent() const {
  return this != internal_default_instance() && oqdcurrent_ != NULL;
}
void testItem::clear_oqdcurrent() {
  if (GetArenaNoVirtual() == NULL && oqdcurrent_ != NULL) delete oqdcurrent_;
  oqdcurrent_ = NULL;
}
const ::Differential::TestItem_QDCurrent& testItem::oqdcurrent() const {
  // @@protoc_insertion_point(field_get:Differential.testItem.oQdcurrent)
  return oqdcurrent_ != NULL ? *oqdcurrent_
                         : *::Differential::TestItem_QDCurrent::internal_default_instance();
}
::Differential::TestItem_QDCurrent* testItem::mutable_oqdcurrent() {
  
  if (oqdcurrent_ == NULL) {
    oqdcurrent_ = new ::Differential::TestItem_QDCurrent;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem.oQdcurrent)
  return oqdcurrent_;
}
::Differential::TestItem_QDCurrent* testItem::release_oqdcurrent() {
  // @@protoc_insertion_point(field_release:Differential.testItem.oQdcurrent)
  
  ::Differential::TestItem_QDCurrent* temp = oqdcurrent_;
  oqdcurrent_ = NULL;
  return temp;
}
void testItem::set_allocated_oqdcurrent(::Differential::TestItem_QDCurrent* oqdcurrent) {
  delete oqdcurrent_;
  oqdcurrent_ = oqdcurrent;
  if (oqdcurrent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem.oQdcurrent)
}

// .Differential.TestItem_ActionTime oActionTime = 3;
bool testItem::has_oactiontime() const {
  return this != internal_default_instance() && oactiontime_ != NULL;
}
void testItem::clear_oactiontime() {
  if (GetArenaNoVirtual() == NULL && oactiontime_ != NULL) delete oactiontime_;
  oactiontime_ = NULL;
}
const ::Differential::TestItem_ActionTime& testItem::oactiontime() const {
  // @@protoc_insertion_point(field_get:Differential.testItem.oActionTime)
  return oactiontime_ != NULL ? *oactiontime_
                         : *::Differential::TestItem_ActionTime::internal_default_instance();
}
::Differential::TestItem_ActionTime* testItem::mutable_oactiontime() {
  
  if (oactiontime_ == NULL) {
    oactiontime_ = new ::Differential::TestItem_ActionTime;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem.oActionTime)
  return oactiontime_;
}
::Differential::TestItem_ActionTime* testItem::release_oactiontime() {
  // @@protoc_insertion_point(field_release:Differential.testItem.oActionTime)
  
  ::Differential::TestItem_ActionTime* temp = oactiontime_;
  oactiontime_ = NULL;
  return temp;
}
void testItem::set_allocated_oactiontime(::Differential::TestItem_ActionTime* oactiontime) {
  delete oactiontime_;
  oactiontime_ = oactiontime;
  if (oactiontime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem.oActionTime)
}

// .Differential.TestItem_ZDRatio oZDRatio = 4;
bool testItem::has_ozdratio() const {
  return this != internal_default_instance() && ozdratio_ != NULL;
}
void testItem::clear_ozdratio() {
  if (GetArenaNoVirtual() == NULL && ozdratio_ != NULL) delete ozdratio_;
  ozdratio_ = NULL;
}
const ::Differential::TestItem_ZDRatio& testItem::ozdratio() const {
  // @@protoc_insertion_point(field_get:Differential.testItem.oZDRatio)
  return ozdratio_ != NULL ? *ozdratio_
                         : *::Differential::TestItem_ZDRatio::internal_default_instance();
}
::Differential::TestItem_ZDRatio* testItem::mutable_ozdratio() {
  
  if (ozdratio_ == NULL) {
    ozdratio_ = new ::Differential::TestItem_ZDRatio;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem.oZDRatio)
  return ozdratio_;
}
::Differential::TestItem_ZDRatio* testItem::release_ozdratio() {
  // @@protoc_insertion_point(field_release:Differential.testItem.oZDRatio)
  
  ::Differential::TestItem_ZDRatio* temp = ozdratio_;
  ozdratio_ = NULL;
  return temp;
}
void testItem::set_allocated_ozdratio(::Differential::TestItem_ZDRatio* ozdratio) {
  delete ozdratio_;
  ozdratio_ = ozdratio;
  if (ozdratio) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem.oZDRatio)
}

// .Differential.HarmonicRatio oHarmnonicRatio = 5;
bool testItem::has_oharmnonicratio() const {
  return this != internal_default_instance() && oharmnonicratio_ != NULL;
}
void testItem::clear_oharmnonicratio() {
  if (GetArenaNoVirtual() == NULL && oharmnonicratio_ != NULL) delete oharmnonicratio_;
  oharmnonicratio_ = NULL;
}
const ::Differential::HarmonicRatio& testItem::oharmnonicratio() const {
  // @@protoc_insertion_point(field_get:Differential.testItem.oHarmnonicRatio)
  return oharmnonicratio_ != NULL ? *oharmnonicratio_
                         : *::Differential::HarmonicRatio::internal_default_instance();
}
::Differential::HarmonicRatio* testItem::mutable_oharmnonicratio() {
  
  if (oharmnonicratio_ == NULL) {
    oharmnonicratio_ = new ::Differential::HarmonicRatio;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem.oHarmnonicRatio)
  return oharmnonicratio_;
}
::Differential::HarmonicRatio* testItem::release_oharmnonicratio() {
  // @@protoc_insertion_point(field_release:Differential.testItem.oHarmnonicRatio)
  
  ::Differential::HarmonicRatio* temp = oharmnonicratio_;
  oharmnonicratio_ = NULL;
  return temp;
}
void testItem::set_allocated_oharmnonicratio(::Differential::HarmonicRatio* oharmnonicratio) {
  delete oharmnonicratio_;
  oharmnonicratio_ = oharmnonicratio;
  if (oharmnonicratio) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem.oHarmnonicRatio)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int testItem_Result::kItemtypeFieldNumber;
const int testItem_Result::kOQdResFieldNumber;
const int testItem_Result::kOZdResFieldNumber;
const int testItem_Result::kOHarmResFieldNumber;
const int testItem_Result::kOActionResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

testItem_Result::testItem_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.testItem_Result)
}
testItem_Result::testItem_Result(const testItem_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oqdres()) {
    oqdres_ = new ::Differential::TestItem_QDCurrent_Result(*from.oqdres_);
  } else {
    oqdres_ = NULL;
  }
  if (from.has_ozdres()) {
    ozdres_ = new ::Differential::TestItem_ZDRatio_Result(*from.ozdres_);
  } else {
    ozdres_ = NULL;
  }
  if (from.has_oharmres()) {
    oharmres_ = new ::Differential::HarmonicRatio_Result(*from.oharmres_);
  } else {
    oharmres_ = NULL;
  }
  if (from.has_oactionres()) {
    oactionres_ = new ::Differential::TestItem_ActionTime_Result(*from.oactionres_);
  } else {
    oactionres_ = NULL;
  }
  itemtype_ = from.itemtype_;
  // @@protoc_insertion_point(copy_constructor:Differential.testItem_Result)
}

void testItem_Result::SharedCtor() {
  ::memset(&oqdres_, 0, reinterpret_cast<char*>(&itemtype_) -
    reinterpret_cast<char*>(&oqdres_) + sizeof(itemtype_));
  _cached_size_ = 0;
}

testItem_Result::~testItem_Result() {
  // @@protoc_insertion_point(destructor:Differential.testItem_Result)
  SharedDtor();
}

void testItem_Result::SharedDtor() {
  if (this != internal_default_instance()) {
    delete oqdres_;
  }
  if (this != internal_default_instance()) {
    delete ozdres_;
  }
  if (this != internal_default_instance()) {
    delete oharmres_;
  }
  if (this != internal_default_instance()) {
    delete oactionres_;
  }
}

void testItem_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* testItem_Result::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[11].descriptor;
}

const testItem_Result& testItem_Result::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

testItem_Result* testItem_Result::New(::google::protobuf::Arena* arena) const {
  testItem_Result* n = new testItem_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void testItem_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.testItem_Result)
  if (GetArenaNoVirtual() == NULL && oqdres_ != NULL) {
    delete oqdres_;
  }
  oqdres_ = NULL;
  if (GetArenaNoVirtual() == NULL && ozdres_ != NULL) {
    delete ozdres_;
  }
  ozdres_ = NULL;
  if (GetArenaNoVirtual() == NULL && oharmres_ != NULL) {
    delete oharmres_;
  }
  oharmres_ = NULL;
  if (GetArenaNoVirtual() == NULL && oactionres_ != NULL) {
    delete oactionres_;
  }
  oactionres_ = NULL;
  itemtype_ = 0;
}

bool testItem_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.testItem_Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.TestItem_type itemtype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_itemtype(static_cast< ::Differential::TestItem_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.TestItem_QDCurrent_Result oQdRes = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oqdres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.TestItem_ZDRatio_Result oZdRes = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ozdres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.HarmonicRatio_Result oHarmRes = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oharmres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.TestItem_ActionTime_Result oActionRes = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oactionres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.testItem_Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.testItem_Result)
  return false;
#undef DO_
}

void testItem_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.testItem_Result)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->itemtype(), output);
  }

  // .Differential.TestItem_QDCurrent_Result oQdRes = 2;
  if (this->has_oqdres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->oqdres_, output);
  }

  // .Differential.TestItem_ZDRatio_Result oZdRes = 3;
  if (this->has_ozdres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ozdres_, output);
  }

  // .Differential.HarmonicRatio_Result oHarmRes = 4;
  if (this->has_oharmres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->oharmres_, output);
  }

  // .Differential.TestItem_ActionTime_Result oActionRes = 5;
  if (this->has_oactionres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->oactionres_, output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.testItem_Result)
}

::google::protobuf::uint8* testItem_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.testItem_Result)
  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->itemtype(), target);
  }

  // .Differential.TestItem_QDCurrent_Result oQdRes = 2;
  if (this->has_oqdres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->oqdres_, false, target);
  }

  // .Differential.TestItem_ZDRatio_Result oZdRes = 3;
  if (this->has_ozdres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ozdres_, false, target);
  }

  // .Differential.HarmonicRatio_Result oHarmRes = 4;
  if (this->has_oharmres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->oharmres_, false, target);
  }

  // .Differential.TestItem_ActionTime_Result oActionRes = 5;
  if (this->has_oactionres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->oactionres_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.testItem_Result)
  return target;
}

size_t testItem_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.testItem_Result)
  size_t total_size = 0;

  // .Differential.TestItem_QDCurrent_Result oQdRes = 2;
  if (this->has_oqdres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oqdres_);
  }

  // .Differential.TestItem_ZDRatio_Result oZdRes = 3;
  if (this->has_ozdres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ozdres_);
  }

  // .Differential.HarmonicRatio_Result oHarmRes = 4;
  if (this->has_oharmres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oharmres_);
  }

  // .Differential.TestItem_ActionTime_Result oActionRes = 5;
  if (this->has_oactionres()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oactionres_);
  }

  // .Differential.TestItem_type itemtype = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void testItem_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.testItem_Result)
  GOOGLE_DCHECK_NE(&from, this);
  const testItem_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const testItem_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.testItem_Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.testItem_Result)
    MergeFrom(*source);
  }
}

void testItem_Result::MergeFrom(const testItem_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.testItem_Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oqdres()) {
    mutable_oqdres()->::Differential::TestItem_QDCurrent_Result::MergeFrom(from.oqdres());
  }
  if (from.has_ozdres()) {
    mutable_ozdres()->::Differential::TestItem_ZDRatio_Result::MergeFrom(from.ozdres());
  }
  if (from.has_oharmres()) {
    mutable_oharmres()->::Differential::HarmonicRatio_Result::MergeFrom(from.oharmres());
  }
  if (from.has_oactionres()) {
    mutable_oactionres()->::Differential::TestItem_ActionTime_Result::MergeFrom(from.oactionres());
  }
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
}

void testItem_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.testItem_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void testItem_Result::CopyFrom(const testItem_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.testItem_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool testItem_Result::IsInitialized() const {
  return true;
}

void testItem_Result::Swap(testItem_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void testItem_Result::InternalSwap(testItem_Result* other) {
  std::swap(oqdres_, other->oqdres_);
  std::swap(ozdres_, other->ozdres_);
  std::swap(oharmres_, other->oharmres_);
  std::swap(oactionres_, other->oactionres_);
  std::swap(itemtype_, other->itemtype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata testItem_Result::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// testItem_Result

// .Differential.TestItem_type itemtype = 1;
void testItem_Result::clear_itemtype() {
  itemtype_ = 0;
}
::Differential::TestItem_type testItem_Result::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.testItem_Result.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
void testItem_Result::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.testItem_Result.itemtype)
}

// .Differential.TestItem_QDCurrent_Result oQdRes = 2;
bool testItem_Result::has_oqdres() const {
  return this != internal_default_instance() && oqdres_ != NULL;
}
void testItem_Result::clear_oqdres() {
  if (GetArenaNoVirtual() == NULL && oqdres_ != NULL) delete oqdres_;
  oqdres_ = NULL;
}
const ::Differential::TestItem_QDCurrent_Result& testItem_Result::oqdres() const {
  // @@protoc_insertion_point(field_get:Differential.testItem_Result.oQdRes)
  return oqdres_ != NULL ? *oqdres_
                         : *::Differential::TestItem_QDCurrent_Result::internal_default_instance();
}
::Differential::TestItem_QDCurrent_Result* testItem_Result::mutable_oqdres() {
  
  if (oqdres_ == NULL) {
    oqdres_ = new ::Differential::TestItem_QDCurrent_Result;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem_Result.oQdRes)
  return oqdres_;
}
::Differential::TestItem_QDCurrent_Result* testItem_Result::release_oqdres() {
  // @@protoc_insertion_point(field_release:Differential.testItem_Result.oQdRes)
  
  ::Differential::TestItem_QDCurrent_Result* temp = oqdres_;
  oqdres_ = NULL;
  return temp;
}
void testItem_Result::set_allocated_oqdres(::Differential::TestItem_QDCurrent_Result* oqdres) {
  delete oqdres_;
  oqdres_ = oqdres;
  if (oqdres) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem_Result.oQdRes)
}

// .Differential.TestItem_ZDRatio_Result oZdRes = 3;
bool testItem_Result::has_ozdres() const {
  return this != internal_default_instance() && ozdres_ != NULL;
}
void testItem_Result::clear_ozdres() {
  if (GetArenaNoVirtual() == NULL && ozdres_ != NULL) delete ozdres_;
  ozdres_ = NULL;
}
const ::Differential::TestItem_ZDRatio_Result& testItem_Result::ozdres() const {
  // @@protoc_insertion_point(field_get:Differential.testItem_Result.oZdRes)
  return ozdres_ != NULL ? *ozdres_
                         : *::Differential::TestItem_ZDRatio_Result::internal_default_instance();
}
::Differential::TestItem_ZDRatio_Result* testItem_Result::mutable_ozdres() {
  
  if (ozdres_ == NULL) {
    ozdres_ = new ::Differential::TestItem_ZDRatio_Result;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem_Result.oZdRes)
  return ozdres_;
}
::Differential::TestItem_ZDRatio_Result* testItem_Result::release_ozdres() {
  // @@protoc_insertion_point(field_release:Differential.testItem_Result.oZdRes)
  
  ::Differential::TestItem_ZDRatio_Result* temp = ozdres_;
  ozdres_ = NULL;
  return temp;
}
void testItem_Result::set_allocated_ozdres(::Differential::TestItem_ZDRatio_Result* ozdres) {
  delete ozdres_;
  ozdres_ = ozdres;
  if (ozdres) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem_Result.oZdRes)
}

// .Differential.HarmonicRatio_Result oHarmRes = 4;
bool testItem_Result::has_oharmres() const {
  return this != internal_default_instance() && oharmres_ != NULL;
}
void testItem_Result::clear_oharmres() {
  if (GetArenaNoVirtual() == NULL && oharmres_ != NULL) delete oharmres_;
  oharmres_ = NULL;
}
const ::Differential::HarmonicRatio_Result& testItem_Result::oharmres() const {
  // @@protoc_insertion_point(field_get:Differential.testItem_Result.oHarmRes)
  return oharmres_ != NULL ? *oharmres_
                         : *::Differential::HarmonicRatio_Result::internal_default_instance();
}
::Differential::HarmonicRatio_Result* testItem_Result::mutable_oharmres() {
  
  if (oharmres_ == NULL) {
    oharmres_ = new ::Differential::HarmonicRatio_Result;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem_Result.oHarmRes)
  return oharmres_;
}
::Differential::HarmonicRatio_Result* testItem_Result::release_oharmres() {
  // @@protoc_insertion_point(field_release:Differential.testItem_Result.oHarmRes)
  
  ::Differential::HarmonicRatio_Result* temp = oharmres_;
  oharmres_ = NULL;
  return temp;
}
void testItem_Result::set_allocated_oharmres(::Differential::HarmonicRatio_Result* oharmres) {
  delete oharmres_;
  oharmres_ = oharmres;
  if (oharmres) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem_Result.oHarmRes)
}

// .Differential.TestItem_ActionTime_Result oActionRes = 5;
bool testItem_Result::has_oactionres() const {
  return this != internal_default_instance() && oactionres_ != NULL;
}
void testItem_Result::clear_oactionres() {
  if (GetArenaNoVirtual() == NULL && oactionres_ != NULL) delete oactionres_;
  oactionres_ = NULL;
}
const ::Differential::TestItem_ActionTime_Result& testItem_Result::oactionres() const {
  // @@protoc_insertion_point(field_get:Differential.testItem_Result.oActionRes)
  return oactionres_ != NULL ? *oactionres_
                         : *::Differential::TestItem_ActionTime_Result::internal_default_instance();
}
::Differential::TestItem_ActionTime_Result* testItem_Result::mutable_oactionres() {
  
  if (oactionres_ == NULL) {
    oactionres_ = new ::Differential::TestItem_ActionTime_Result;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem_Result.oActionRes)
  return oactionres_;
}
::Differential::TestItem_ActionTime_Result* testItem_Result::release_oactionres() {
  // @@protoc_insertion_point(field_release:Differential.testItem_Result.oActionRes)
  
  ::Differential::TestItem_ActionTime_Result* temp = oactionres_;
  oactionres_ = NULL;
  return temp;
}
void testItem_Result::set_allocated_oactionres(::Differential::TestItem_ActionTime_Result* oactionres) {
  delete oactionres_;
  oactionres_ = oactionres;
  if (oactionres) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem_Result.oActionRes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Items::kOCommFieldNumber;
const int Items::kOSwitchFieldNumber;
const int Items::kOProtectSetFieldNumber;
const int Items::kOItemsFieldNumber;
const int Items::kOutputTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Items::Items()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.Items)
}
Items::Items(const Items& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      oitems_(from.oitems_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ocomm()) {
    ocomm_ = new ::Differential::CommonPara(*from.ocomm_);
  } else {
    ocomm_ = NULL;
  }
  if (from.has_oswitch()) {
    oswitch_ = new ::Differential::SwitchPara(*from.oswitch_);
  } else {
    oswitch_ = NULL;
  }
  if (from.has_oprotectset()) {
    oprotectset_ = new ::Differential::ProtectSetting(*from.oprotectset_);
  } else {
    oprotectset_ = NULL;
  }
  outputtype_ = from.outputtype_;
  // @@protoc_insertion_point(copy_constructor:Differential.Items)
}

void Items::SharedCtor() {
  ::memset(&ocomm_, 0, reinterpret_cast<char*>(&outputtype_) -
    reinterpret_cast<char*>(&ocomm_) + sizeof(outputtype_));
  _cached_size_ = 0;
}

Items::~Items() {
  // @@protoc_insertion_point(destructor:Differential.Items)
  SharedDtor();
}

void Items::SharedDtor() {
  if (this != internal_default_instance()) {
    delete ocomm_;
  }
  if (this != internal_default_instance()) {
    delete oswitch_;
  }
  if (this != internal_default_instance()) {
    delete oprotectset_;
  }
}

void Items::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Items::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[12].descriptor;
}

const Items& Items::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

Items* Items::New(::google::protobuf::Arena* arena) const {
  Items* n = new Items;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Items::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.Items)
  oitems_.Clear();
  if (GetArenaNoVirtual() == NULL && ocomm_ != NULL) {
    delete ocomm_;
  }
  ocomm_ = NULL;
  if (GetArenaNoVirtual() == NULL && oswitch_ != NULL) {
    delete oswitch_;
  }
  oswitch_ = NULL;
  if (GetArenaNoVirtual() == NULL && oprotectset_ != NULL) {
    delete oprotectset_;
  }
  oprotectset_ = NULL;
  outputtype_ = 0;
}

bool Items::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.Items)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.CommonPara oComm = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ocomm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.SwitchPara oSwitch = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oswitch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.ProtectSetting oProtectSet = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oprotectset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Differential.testItem oItems = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_oitems()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .Differential.OutPutType outputType = 5;
      case 5: {
        if (tag == 40u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_outputtype(static_cast< ::Differential::OutPutType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.Items)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.Items)
  return false;
#undef DO_
}

void Items::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.Items)
  // .Differential.CommonPara oComm = 1;
  if (this->has_ocomm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ocomm_, output);
  }

  // .Differential.SwitchPara oSwitch = 2;
  if (this->has_oswitch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->oswitch_, output);
  }

  // .Differential.ProtectSetting oProtectSet = 3;
  if (this->has_oprotectset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->oprotectset_, output);
  }

  // repeated .Differential.testItem oItems = 4;
  for (unsigned int i = 0, n = this->oitems_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->oitems(i), output);
  }

  // .Differential.OutPutType outputType = 5;
  if (this->outputtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->outputtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.Items)
}

::google::protobuf::uint8* Items::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.Items)
  // .Differential.CommonPara oComm = 1;
  if (this->has_ocomm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->ocomm_, false, target);
  }

  // .Differential.SwitchPara oSwitch = 2;
  if (this->has_oswitch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->oswitch_, false, target);
  }

  // .Differential.ProtectSetting oProtectSet = 3;
  if (this->has_oprotectset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->oprotectset_, false, target);
  }

  // repeated .Differential.testItem oItems = 4;
  for (unsigned int i = 0, n = this->oitems_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->oitems(i), false, target);
  }

  // .Differential.OutPutType outputType = 5;
  if (this->outputtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->outputtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.Items)
  return target;
}

size_t Items::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.Items)
  size_t total_size = 0;

  // repeated .Differential.testItem oItems = 4;
  {
    unsigned int count = this->oitems_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oitems(i));
    }
  }

  // .Differential.CommonPara oComm = 1;
  if (this->has_ocomm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ocomm_);
  }

  // .Differential.SwitchPara oSwitch = 2;
  if (this->has_oswitch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oswitch_);
  }

  // .Differential.ProtectSetting oProtectSet = 3;
  if (this->has_oprotectset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oprotectset_);
  }

  // .Differential.OutPutType outputType = 5;
  if (this->outputtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->outputtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Items::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.Items)
  GOOGLE_DCHECK_NE(&from, this);
  const Items* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Items>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.Items)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.Items)
    MergeFrom(*source);
  }
}

void Items::MergeFrom(const Items& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.Items)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oitems_.MergeFrom(from.oitems_);
  if (from.has_ocomm()) {
    mutable_ocomm()->::Differential::CommonPara::MergeFrom(from.ocomm());
  }
  if (from.has_oswitch()) {
    mutable_oswitch()->::Differential::SwitchPara::MergeFrom(from.oswitch());
  }
  if (from.has_oprotectset()) {
    mutable_oprotectset()->::Differential::ProtectSetting::MergeFrom(from.oprotectset());
  }
  if (from.outputtype() != 0) {
    set_outputtype(from.outputtype());
  }
}

void Items::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.Items)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Items::CopyFrom(const Items& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.Items)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Items::IsInitialized() const {
  return true;
}

void Items::Swap(Items* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Items::InternalSwap(Items* other) {
  oitems_.UnsafeArenaSwap(&other->oitems_);
  std::swap(ocomm_, other->ocomm_);
  std::swap(oswitch_, other->oswitch_);
  std::swap(oprotectset_, other->oprotectset_);
  std::swap(outputtype_, other->outputtype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Items::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Items

// .Differential.CommonPara oComm = 1;
bool Items::has_ocomm() const {
  return this != internal_default_instance() && ocomm_ != NULL;
}
void Items::clear_ocomm() {
  if (GetArenaNoVirtual() == NULL && ocomm_ != NULL) delete ocomm_;
  ocomm_ = NULL;
}
const ::Differential::CommonPara& Items::ocomm() const {
  // @@protoc_insertion_point(field_get:Differential.Items.oComm)
  return ocomm_ != NULL ? *ocomm_
                         : *::Differential::CommonPara::internal_default_instance();
}
::Differential::CommonPara* Items::mutable_ocomm() {
  
  if (ocomm_ == NULL) {
    ocomm_ = new ::Differential::CommonPara;
  }
  // @@protoc_insertion_point(field_mutable:Differential.Items.oComm)
  return ocomm_;
}
::Differential::CommonPara* Items::release_ocomm() {
  // @@protoc_insertion_point(field_release:Differential.Items.oComm)
  
  ::Differential::CommonPara* temp = ocomm_;
  ocomm_ = NULL;
  return temp;
}
void Items::set_allocated_ocomm(::Differential::CommonPara* ocomm) {
  delete ocomm_;
  ocomm_ = ocomm;
  if (ocomm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.Items.oComm)
}

// .Differential.SwitchPara oSwitch = 2;
bool Items::has_oswitch() const {
  return this != internal_default_instance() && oswitch_ != NULL;
}
void Items::clear_oswitch() {
  if (GetArenaNoVirtual() == NULL && oswitch_ != NULL) delete oswitch_;
  oswitch_ = NULL;
}
const ::Differential::SwitchPara& Items::oswitch() const {
  // @@protoc_insertion_point(field_get:Differential.Items.oSwitch)
  return oswitch_ != NULL ? *oswitch_
                         : *::Differential::SwitchPara::internal_default_instance();
}
::Differential::SwitchPara* Items::mutable_oswitch() {
  
  if (oswitch_ == NULL) {
    oswitch_ = new ::Differential::SwitchPara;
  }
  // @@protoc_insertion_point(field_mutable:Differential.Items.oSwitch)
  return oswitch_;
}
::Differential::SwitchPara* Items::release_oswitch() {
  // @@protoc_insertion_point(field_release:Differential.Items.oSwitch)
  
  ::Differential::SwitchPara* temp = oswitch_;
  oswitch_ = NULL;
  return temp;
}
void Items::set_allocated_oswitch(::Differential::SwitchPara* oswitch) {
  delete oswitch_;
  oswitch_ = oswitch;
  if (oswitch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.Items.oSwitch)
}

// .Differential.ProtectSetting oProtectSet = 3;
bool Items::has_oprotectset() const {
  return this != internal_default_instance() && oprotectset_ != NULL;
}
void Items::clear_oprotectset() {
  if (GetArenaNoVirtual() == NULL && oprotectset_ != NULL) delete oprotectset_;
  oprotectset_ = NULL;
}
const ::Differential::ProtectSetting& Items::oprotectset() const {
  // @@protoc_insertion_point(field_get:Differential.Items.oProtectSet)
  return oprotectset_ != NULL ? *oprotectset_
                         : *::Differential::ProtectSetting::internal_default_instance();
}
::Differential::ProtectSetting* Items::mutable_oprotectset() {
  
  if (oprotectset_ == NULL) {
    oprotectset_ = new ::Differential::ProtectSetting;
  }
  // @@protoc_insertion_point(field_mutable:Differential.Items.oProtectSet)
  return oprotectset_;
}
::Differential::ProtectSetting* Items::release_oprotectset() {
  // @@protoc_insertion_point(field_release:Differential.Items.oProtectSet)
  
  ::Differential::ProtectSetting* temp = oprotectset_;
  oprotectset_ = NULL;
  return temp;
}
void Items::set_allocated_oprotectset(::Differential::ProtectSetting* oprotectset) {
  delete oprotectset_;
  oprotectset_ = oprotectset;
  if (oprotectset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.Items.oProtectSet)
}

// repeated .Differential.testItem oItems = 4;
int Items::oitems_size() const {
  return oitems_.size();
}
void Items::clear_oitems() {
  oitems_.Clear();
}
const ::Differential::testItem& Items::oitems(int index) const {
  // @@protoc_insertion_point(field_get:Differential.Items.oItems)
  return oitems_.Get(index);
}
::Differential::testItem* Items::mutable_oitems(int index) {
  // @@protoc_insertion_point(field_mutable:Differential.Items.oItems)
  return oitems_.Mutable(index);
}
::Differential::testItem* Items::add_oitems() {
  // @@protoc_insertion_point(field_add:Differential.Items.oItems)
  return oitems_.Add();
}
::google::protobuf::RepeatedPtrField< ::Differential::testItem >*
Items::mutable_oitems() {
  // @@protoc_insertion_point(field_mutable_list:Differential.Items.oItems)
  return &oitems_;
}
const ::google::protobuf::RepeatedPtrField< ::Differential::testItem >&
Items::oitems() const {
  // @@protoc_insertion_point(field_list:Differential.Items.oItems)
  return oitems_;
}

// .Differential.OutPutType outputType = 5;
void Items::clear_outputtype() {
  outputtype_ = 0;
}
::Differential::OutPutType Items::outputtype() const {
  // @@protoc_insertion_point(field_get:Differential.Items.outputType)
  return static_cast< ::Differential::OutPutType >(outputtype_);
}
void Items::set_outputtype(::Differential::OutPutType value) {
  
  outputtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.Items.outputType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonPara::kEDVFieldNumber;
const int CommonPara::kEDIFieldNumber;
const int CommonPara::kEDHzFieldNumber;
const int CommonPara::kPreTimeFieldNumber;
const int CommonPara::kPrefaultTimeFieldNumber;
const int CommonPara::kFaultTimeFieldNumber;
const int CommonPara::kBalanceParaCacuTypeFieldNumber;
const int CommonPara::kSNFieldNumber;
const int CommonPara::kUhFieldNumber;
const int CommonPara::kUmFieldNumber;
const int CommonPara::kUlFieldNumber;
const int CommonPara::kCTPhFieldNumber;
const int CommonPara::kCTPmFieldNumber;
const int CommonPara::kCTPlFieldNumber;
const int CommonPara::kCTShFieldNumber;
const int CommonPara::kCTSmFieldNumber;
const int CommonPara::kCTSlFieldNumber;
const int CommonPara::kKphFieldNumber;
const int CommonPara::kKpmFieldNumber;
const int CommonPara::kKplFieldNumber;
const int CommonPara::kWindHFieldNumber;
const int CommonPara::kWindMFieldNumber;
const int CommonPara::kWindLFieldNumber;
const int CommonPara::kAngleModeFieldNumber;
const int CommonPara::kWindSideFieldNumber;
const int CommonPara::kConnModeFieldNumber;
const int CommonPara::kJXFactorFieldNumber;
const int CommonPara::kSerachModeFieldNumber;
const int CommonPara::kIdEquFieldNumber;
const int CommonPara::kEquationFieldNumber;
const int CommonPara::kK1FieldNumber;
const int CommonPara::kK2FieldNumber;
const int CommonPara::kPhaseTypeFieldNumber;
const int CommonPara::kResoFieldNumber;
const int CommonPara::kUgroup1FieldNumber;
const int CommonPara::kUgroup2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonPara::CommonPara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.CommonPara)
}
CommonPara::CommonPara(const CommonPara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ed_v_, &from.ed_v_,
    reinterpret_cast<char*>(&ugroup2_) -
    reinterpret_cast<char*>(&ed_v_) + sizeof(ugroup2_));
  // @@protoc_insertion_point(copy_constructor:Differential.CommonPara)
}

void CommonPara::SharedCtor() {
  ::memset(&ed_v_, 0, reinterpret_cast<char*>(&ugroup2_) -
    reinterpret_cast<char*>(&ed_v_) + sizeof(ugroup2_));
  _cached_size_ = 0;
}

CommonPara::~CommonPara() {
  // @@protoc_insertion_point(destructor:Differential.CommonPara)
  SharedDtor();
}

void CommonPara::SharedDtor() {
}

void CommonPara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonPara::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[13].descriptor;
}

const CommonPara& CommonPara::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

CommonPara* CommonPara::New(::google::protobuf::Arena* arena) const {
  CommonPara* n = new CommonPara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommonPara::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.CommonPara)
  ::memset(&ed_v_, 0, reinterpret_cast<char*>(&ugroup2_) -
    reinterpret_cast<char*>(&ed_v_) + sizeof(ugroup2_));
}

bool CommonPara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.CommonPara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float ED_V = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ed_v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ED_I = 2;
      case 2: {
        if (tag == 21u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ed_i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ED_Hz = 3;
      case 3: {
        if (tag == 29u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ed_hz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float PreTime = 4;
      case 4: {
        if (tag == 37u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pretime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float PrefaultTime = 5;
      case 5: {
        if (tag == 45u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &prefaulttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float FaultTime = 6;
      case 6: {
        if (tag == 53u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &faulttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BalanceParaCacuType = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balanceparacacutype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float SN = 8;
      case 8: {
        if (tag == 69u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Uh = 9;
      case 9: {
        if (tag == 77u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &uh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Um = 10;
      case 10: {
        if (tag == 85u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &um_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Ul = 11;
      case 11: {
        if (tag == 93u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ul_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTPh = 12;
      case 12: {
        if (tag == 101u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctph_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTPm = 13;
      case 13: {
        if (tag == 109u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctpm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTPl = 14;
      case 14: {
        if (tag == 117u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctpl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTSh = 15;
      case 15: {
        if (tag == 125u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctsh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTSm = 16;
      case 16: {
        if (tag == 133u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctsm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float CTSl = 17;
      case 17: {
        if (tag == 141u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ctsl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Kph = 18;
      case 18: {
        if (tag == 149u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kph_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Kpm = 19;
      case 19: {
        if (tag == 157u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kpm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Kpl = 20;
      case 20: {
        if (tag == 165u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kpl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.Connection_Type WindH = 21;
      case 21: {
        if (tag == 168u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_windh(static_cast< ::Differential::Connection_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.Connection_Type WindM = 22;
      case 22: {
        if (tag == 176u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_windm(static_cast< ::Differential::Connection_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.Connection_Type WindL = 23;
      case 23: {
        if (tag == 184u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_windl(static_cast< ::Differential::Connection_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.Correct_Type AngleMode = 24;
      case 24: {
        if (tag == 192u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_anglemode(static_cast< ::Differential::Correct_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.TestWind_Type WindSide = 25;
      case 25: {
        if (tag == 200u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_windside(static_cast< ::Differential::TestWind_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ConnMode = 26;
      case 26: {
        if (tag == 208u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &connmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 JXFactor = 27;
      case 27: {
        if (tag == 216u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jxfactor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.Search_Type SerachMode = 28;
      case 28: {
        if (tag == 224u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_serachmode(static_cast< ::Differential::Search_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.CTPolar_Type IdEqu = 29;
      case 29: {
        if (tag == 232u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_idequ(static_cast< ::Differential::CTPolar_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Equation = 30;
      case 30: {
        if (tag == 240u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float K1 = 31;
      case 31: {
        if (tag == 253u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &k1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float K2 = 32;
      case 32: {
        if (tag == 261u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &k2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.TestPhasor_type Phase_Type = 33;
      case 33: {
        if (tag == 264u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_phase_type(static_cast< ::Differential::TestPhasor_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Reso = 34;
      case 34: {
        if (tag == 277u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reso_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Ugroup1 = 35;
      case 35: {
        if (tag == 285u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ugroup1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Ugroup2 = 36;
      case 36: {
        if (tag == 293u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ugroup2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.CommonPara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.CommonPara)
  return false;
#undef DO_
}

void CommonPara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.CommonPara)
  // float ED_V = 1;
  if (this->ed_v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->ed_v(), output);
  }

  // float ED_I = 2;
  if (this->ed_i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->ed_i(), output);
  }

  // float ED_Hz = 3;
  if (this->ed_hz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ed_hz(), output);
  }

  // float PreTime = 4;
  if (this->pretime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->pretime(), output);
  }

  // float PrefaultTime = 5;
  if (this->prefaulttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->prefaulttime(), output);
  }

  // float FaultTime = 6;
  if (this->faulttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->faulttime(), output);
  }

  // uint32 BalanceParaCacuType = 7;
  if (this->balanceparacacutype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->balanceparacacutype(), output);
  }

  // float SN = 8;
  if (this->sn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->sn(), output);
  }

  // float Uh = 9;
  if (this->uh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->uh(), output);
  }

  // float Um = 10;
  if (this->um() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->um(), output);
  }

  // float Ul = 11;
  if (this->ul() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->ul(), output);
  }

  // float CTPh = 12;
  if (this->ctph() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->ctph(), output);
  }

  // float CTPm = 13;
  if (this->ctpm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->ctpm(), output);
  }

  // float CTPl = 14;
  if (this->ctpl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->ctpl(), output);
  }

  // float CTSh = 15;
  if (this->ctsh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->ctsh(), output);
  }

  // float CTSm = 16;
  if (this->ctsm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->ctsm(), output);
  }

  // float CTSl = 17;
  if (this->ctsl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->ctsl(), output);
  }

  // float Kph = 18;
  if (this->kph() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->kph(), output);
  }

  // float Kpm = 19;
  if (this->kpm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->kpm(), output);
  }

  // float Kpl = 20;
  if (this->kpl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->kpl(), output);
  }

  // .Differential.Connection_Type WindH = 21;
  if (this->windh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->windh(), output);
  }

  // .Differential.Connection_Type WindM = 22;
  if (this->windm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->windm(), output);
  }

  // .Differential.Connection_Type WindL = 23;
  if (this->windl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      23, this->windl(), output);
  }

  // .Differential.Correct_Type AngleMode = 24;
  if (this->anglemode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      24, this->anglemode(), output);
  }

  // .Differential.TestWind_Type WindSide = 25;
  if (this->windside() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      25, this->windside(), output);
  }

  // uint32 ConnMode = 26;
  if (this->connmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->connmode(), output);
  }

  // uint32 JXFactor = 27;
  if (this->jxfactor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->jxfactor(), output);
  }

  // .Differential.Search_Type SerachMode = 28;
  if (this->serachmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      28, this->serachmode(), output);
  }

  // .Differential.CTPolar_Type IdEqu = 29;
  if (this->idequ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      29, this->idequ(), output);
  }

  // uint32 Equation = 30;
  if (this->equation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->equation(), output);
  }

  // float K1 = 31;
  if (this->k1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(31, this->k1(), output);
  }

  // float K2 = 32;
  if (this->k2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(32, this->k2(), output);
  }

  // .Differential.TestPhasor_type Phase_Type = 33;
  if (this->phase_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      33, this->phase_type(), output);
  }

  // float Reso = 34;
  if (this->reso() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(34, this->reso(), output);
  }

  // float Ugroup1 = 35;
  if (this->ugroup1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(35, this->ugroup1(), output);
  }

  // float Ugroup2 = 36;
  if (this->ugroup2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(36, this->ugroup2(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.CommonPara)
}

::google::protobuf::uint8* CommonPara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.CommonPara)
  // float ED_V = 1;
  if (this->ed_v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->ed_v(), target);
  }

  // float ED_I = 2;
  if (this->ed_i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->ed_i(), target);
  }

  // float ED_Hz = 3;
  if (this->ed_hz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ed_hz(), target);
  }

  // float PreTime = 4;
  if (this->pretime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->pretime(), target);
  }

  // float PrefaultTime = 5;
  if (this->prefaulttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->prefaulttime(), target);
  }

  // float FaultTime = 6;
  if (this->faulttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->faulttime(), target);
  }

  // uint32 BalanceParaCacuType = 7;
  if (this->balanceparacacutype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->balanceparacacutype(), target);
  }

  // float SN = 8;
  if (this->sn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->sn(), target);
  }

  // float Uh = 9;
  if (this->uh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->uh(), target);
  }

  // float Um = 10;
  if (this->um() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->um(), target);
  }

  // float Ul = 11;
  if (this->ul() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->ul(), target);
  }

  // float CTPh = 12;
  if (this->ctph() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->ctph(), target);
  }

  // float CTPm = 13;
  if (this->ctpm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->ctpm(), target);
  }

  // float CTPl = 14;
  if (this->ctpl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->ctpl(), target);
  }

  // float CTSh = 15;
  if (this->ctsh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->ctsh(), target);
  }

  // float CTSm = 16;
  if (this->ctsm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->ctsm(), target);
  }

  // float CTSl = 17;
  if (this->ctsl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->ctsl(), target);
  }

  // float Kph = 18;
  if (this->kph() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->kph(), target);
  }

  // float Kpm = 19;
  if (this->kpm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->kpm(), target);
  }

  // float Kpl = 20;
  if (this->kpl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->kpl(), target);
  }

  // .Differential.Connection_Type WindH = 21;
  if (this->windh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->windh(), target);
  }

  // .Differential.Connection_Type WindM = 22;
  if (this->windm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->windm(), target);
  }

  // .Differential.Connection_Type WindL = 23;
  if (this->windl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      23, this->windl(), target);
  }

  // .Differential.Correct_Type AngleMode = 24;
  if (this->anglemode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      24, this->anglemode(), target);
  }

  // .Differential.TestWind_Type WindSide = 25;
  if (this->windside() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      25, this->windside(), target);
  }

  // uint32 ConnMode = 26;
  if (this->connmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->connmode(), target);
  }

  // uint32 JXFactor = 27;
  if (this->jxfactor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->jxfactor(), target);
  }

  // .Differential.Search_Type SerachMode = 28;
  if (this->serachmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      28, this->serachmode(), target);
  }

  // .Differential.CTPolar_Type IdEqu = 29;
  if (this->idequ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      29, this->idequ(), target);
  }

  // uint32 Equation = 30;
  if (this->equation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->equation(), target);
  }

  // float K1 = 31;
  if (this->k1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(31, this->k1(), target);
  }

  // float K2 = 32;
  if (this->k2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(32, this->k2(), target);
  }

  // .Differential.TestPhasor_type Phase_Type = 33;
  if (this->phase_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      33, this->phase_type(), target);
  }

  // float Reso = 34;
  if (this->reso() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(34, this->reso(), target);
  }

  // float Ugroup1 = 35;
  if (this->ugroup1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(35, this->ugroup1(), target);
  }

  // float Ugroup2 = 36;
  if (this->ugroup2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(36, this->ugroup2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.CommonPara)
  return target;
}

size_t CommonPara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.CommonPara)
  size_t total_size = 0;

  // float ED_V = 1;
  if (this->ed_v() != 0) {
    total_size += 1 + 4;
  }

  // float ED_I = 2;
  if (this->ed_i() != 0) {
    total_size += 1 + 4;
  }

  // float ED_Hz = 3;
  if (this->ed_hz() != 0) {
    total_size += 1 + 4;
  }

  // float PreTime = 4;
  if (this->pretime() != 0) {
    total_size += 1 + 4;
  }

  // float PrefaultTime = 5;
  if (this->prefaulttime() != 0) {
    total_size += 1 + 4;
  }

  // float FaultTime = 6;
  if (this->faulttime() != 0) {
    total_size += 1 + 4;
  }

  // uint32 BalanceParaCacuType = 7;
  if (this->balanceparacacutype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->balanceparacacutype());
  }

  // float SN = 8;
  if (this->sn() != 0) {
    total_size += 1 + 4;
  }

  // float Uh = 9;
  if (this->uh() != 0) {
    total_size += 1 + 4;
  }

  // float Um = 10;
  if (this->um() != 0) {
    total_size += 1 + 4;
  }

  // float Ul = 11;
  if (this->ul() != 0) {
    total_size += 1 + 4;
  }

  // float CTPh = 12;
  if (this->ctph() != 0) {
    total_size += 1 + 4;
  }

  // float CTPm = 13;
  if (this->ctpm() != 0) {
    total_size += 1 + 4;
  }

  // float CTPl = 14;
  if (this->ctpl() != 0) {
    total_size += 1 + 4;
  }

  // float CTSh = 15;
  if (this->ctsh() != 0) {
    total_size += 1 + 4;
  }

  // float CTSm = 16;
  if (this->ctsm() != 0) {
    total_size += 2 + 4;
  }

  // float CTSl = 17;
  if (this->ctsl() != 0) {
    total_size += 2 + 4;
  }

  // float Kph = 18;
  if (this->kph() != 0) {
    total_size += 2 + 4;
  }

  // float Kpm = 19;
  if (this->kpm() != 0) {
    total_size += 2 + 4;
  }

  // float Kpl = 20;
  if (this->kpl() != 0) {
    total_size += 2 + 4;
  }

  // .Differential.Connection_Type WindH = 21;
  if (this->windh() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->windh());
  }

  // .Differential.Connection_Type WindM = 22;
  if (this->windm() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->windm());
  }

  // .Differential.Connection_Type WindL = 23;
  if (this->windl() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->windl());
  }

  // .Differential.Correct_Type AngleMode = 24;
  if (this->anglemode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->anglemode());
  }

  // .Differential.TestWind_Type WindSide = 25;
  if (this->windside() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->windside());
  }

  // uint32 ConnMode = 26;
  if (this->connmode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->connmode());
  }

  // uint32 JXFactor = 27;
  if (this->jxfactor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->jxfactor());
  }

  // .Differential.Search_Type SerachMode = 28;
  if (this->serachmode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->serachmode());
  }

  // .Differential.CTPolar_Type IdEqu = 29;
  if (this->idequ() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->idequ());
  }

  // uint32 Equation = 30;
  if (this->equation() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equation());
  }

  // float K1 = 31;
  if (this->k1() != 0) {
    total_size += 2 + 4;
  }

  // float K2 = 32;
  if (this->k2() != 0) {
    total_size += 2 + 4;
  }

  // .Differential.TestPhasor_type Phase_Type = 33;
  if (this->phase_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->phase_type());
  }

  // float Reso = 34;
  if (this->reso() != 0) {
    total_size += 2 + 4;
  }

  // float Ugroup1 = 35;
  if (this->ugroup1() != 0) {
    total_size += 2 + 4;
  }

  // float Ugroup2 = 36;
  if (this->ugroup2() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonPara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.CommonPara)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonPara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonPara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.CommonPara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.CommonPara)
    MergeFrom(*source);
  }
}

void CommonPara::MergeFrom(const CommonPara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.CommonPara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ed_v() != 0) {
    set_ed_v(from.ed_v());
  }
  if (from.ed_i() != 0) {
    set_ed_i(from.ed_i());
  }
  if (from.ed_hz() != 0) {
    set_ed_hz(from.ed_hz());
  }
  if (from.pretime() != 0) {
    set_pretime(from.pretime());
  }
  if (from.prefaulttime() != 0) {
    set_prefaulttime(from.prefaulttime());
  }
  if (from.faulttime() != 0) {
    set_faulttime(from.faulttime());
  }
  if (from.balanceparacacutype() != 0) {
    set_balanceparacacutype(from.balanceparacacutype());
  }
  if (from.sn() != 0) {
    set_sn(from.sn());
  }
  if (from.uh() != 0) {
    set_uh(from.uh());
  }
  if (from.um() != 0) {
    set_um(from.um());
  }
  if (from.ul() != 0) {
    set_ul(from.ul());
  }
  if (from.ctph() != 0) {
    set_ctph(from.ctph());
  }
  if (from.ctpm() != 0) {
    set_ctpm(from.ctpm());
  }
  if (from.ctpl() != 0) {
    set_ctpl(from.ctpl());
  }
  if (from.ctsh() != 0) {
    set_ctsh(from.ctsh());
  }
  if (from.ctsm() != 0) {
    set_ctsm(from.ctsm());
  }
  if (from.ctsl() != 0) {
    set_ctsl(from.ctsl());
  }
  if (from.kph() != 0) {
    set_kph(from.kph());
  }
  if (from.kpm() != 0) {
    set_kpm(from.kpm());
  }
  if (from.kpl() != 0) {
    set_kpl(from.kpl());
  }
  if (from.windh() != 0) {
    set_windh(from.windh());
  }
  if (from.windm() != 0) {
    set_windm(from.windm());
  }
  if (from.windl() != 0) {
    set_windl(from.windl());
  }
  if (from.anglemode() != 0) {
    set_anglemode(from.anglemode());
  }
  if (from.windside() != 0) {
    set_windside(from.windside());
  }
  if (from.connmode() != 0) {
    set_connmode(from.connmode());
  }
  if (from.jxfactor() != 0) {
    set_jxfactor(from.jxfactor());
  }
  if (from.serachmode() != 0) {
    set_serachmode(from.serachmode());
  }
  if (from.idequ() != 0) {
    set_idequ(from.idequ());
  }
  if (from.equation() != 0) {
    set_equation(from.equation());
  }
  if (from.k1() != 0) {
    set_k1(from.k1());
  }
  if (from.k2() != 0) {
    set_k2(from.k2());
  }
  if (from.phase_type() != 0) {
    set_phase_type(from.phase_type());
  }
  if (from.reso() != 0) {
    set_reso(from.reso());
  }
  if (from.ugroup1() != 0) {
    set_ugroup1(from.ugroup1());
  }
  if (from.ugroup2() != 0) {
    set_ugroup2(from.ugroup2());
  }
}

void CommonPara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.CommonPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonPara::CopyFrom(const CommonPara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.CommonPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonPara::IsInitialized() const {
  return true;
}

void CommonPara::Swap(CommonPara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonPara::InternalSwap(CommonPara* other) {
  std::swap(ed_v_, other->ed_v_);
  std::swap(ed_i_, other->ed_i_);
  std::swap(ed_hz_, other->ed_hz_);
  std::swap(pretime_, other->pretime_);
  std::swap(prefaulttime_, other->prefaulttime_);
  std::swap(faulttime_, other->faulttime_);
  std::swap(balanceparacacutype_, other->balanceparacacutype_);
  std::swap(sn_, other->sn_);
  std::swap(uh_, other->uh_);
  std::swap(um_, other->um_);
  std::swap(ul_, other->ul_);
  std::swap(ctph_, other->ctph_);
  std::swap(ctpm_, other->ctpm_);
  std::swap(ctpl_, other->ctpl_);
  std::swap(ctsh_, other->ctsh_);
  std::swap(ctsm_, other->ctsm_);
  std::swap(ctsl_, other->ctsl_);
  std::swap(kph_, other->kph_);
  std::swap(kpm_, other->kpm_);
  std::swap(kpl_, other->kpl_);
  std::swap(windh_, other->windh_);
  std::swap(windm_, other->windm_);
  std::swap(windl_, other->windl_);
  std::swap(anglemode_, other->anglemode_);
  std::swap(windside_, other->windside_);
  std::swap(connmode_, other->connmode_);
  std::swap(jxfactor_, other->jxfactor_);
  std::swap(serachmode_, other->serachmode_);
  std::swap(idequ_, other->idequ_);
  std::swap(equation_, other->equation_);
  std::swap(k1_, other->k1_);
  std::swap(k2_, other->k2_);
  std::swap(phase_type_, other->phase_type_);
  std::swap(reso_, other->reso_);
  std::swap(ugroup1_, other->ugroup1_);
  std::swap(ugroup2_, other->ugroup2_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommonPara::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommonPara

// float ED_V = 1;
void CommonPara::clear_ed_v() {
  ed_v_ = 0;
}
float CommonPara::ed_v() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.ED_V)
  return ed_v_;
}
void CommonPara::set_ed_v(float value) {
  
  ed_v_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.ED_V)
}

// float ED_I = 2;
void CommonPara::clear_ed_i() {
  ed_i_ = 0;
}
float CommonPara::ed_i() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.ED_I)
  return ed_i_;
}
void CommonPara::set_ed_i(float value) {
  
  ed_i_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.ED_I)
}

// float ED_Hz = 3;
void CommonPara::clear_ed_hz() {
  ed_hz_ = 0;
}
float CommonPara::ed_hz() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.ED_Hz)
  return ed_hz_;
}
void CommonPara::set_ed_hz(float value) {
  
  ed_hz_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.ED_Hz)
}

// float PreTime = 4;
void CommonPara::clear_pretime() {
  pretime_ = 0;
}
float CommonPara::pretime() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.PreTime)
  return pretime_;
}
void CommonPara::set_pretime(float value) {
  
  pretime_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.PreTime)
}

// float PrefaultTime = 5;
void CommonPara::clear_prefaulttime() {
  prefaulttime_ = 0;
}
float CommonPara::prefaulttime() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.PrefaultTime)
  return prefaulttime_;
}
void CommonPara::set_prefaulttime(float value) {
  
  prefaulttime_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.PrefaultTime)
}

// float FaultTime = 6;
void CommonPara::clear_faulttime() {
  faulttime_ = 0;
}
float CommonPara::faulttime() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.FaultTime)
  return faulttime_;
}
void CommonPara::set_faulttime(float value) {
  
  faulttime_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.FaultTime)
}

// uint32 BalanceParaCacuType = 7;
void CommonPara::clear_balanceparacacutype() {
  balanceparacacutype_ = 0u;
}
::google::protobuf::uint32 CommonPara::balanceparacacutype() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.BalanceParaCacuType)
  return balanceparacacutype_;
}
void CommonPara::set_balanceparacacutype(::google::protobuf::uint32 value) {
  
  balanceparacacutype_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.BalanceParaCacuType)
}

// float SN = 8;
void CommonPara::clear_sn() {
  sn_ = 0;
}
float CommonPara::sn() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.SN)
  return sn_;
}
void CommonPara::set_sn(float value) {
  
  sn_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.SN)
}

// float Uh = 9;
void CommonPara::clear_uh() {
  uh_ = 0;
}
float CommonPara::uh() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Uh)
  return uh_;
}
void CommonPara::set_uh(float value) {
  
  uh_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Uh)
}

// float Um = 10;
void CommonPara::clear_um() {
  um_ = 0;
}
float CommonPara::um() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Um)
  return um_;
}
void CommonPara::set_um(float value) {
  
  um_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Um)
}

// float Ul = 11;
void CommonPara::clear_ul() {
  ul_ = 0;
}
float CommonPara::ul() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Ul)
  return ul_;
}
void CommonPara::set_ul(float value) {
  
  ul_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Ul)
}

// float CTPh = 12;
void CommonPara::clear_ctph() {
  ctph_ = 0;
}
float CommonPara::ctph() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTPh)
  return ctph_;
}
void CommonPara::set_ctph(float value) {
  
  ctph_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTPh)
}

// float CTPm = 13;
void CommonPara::clear_ctpm() {
  ctpm_ = 0;
}
float CommonPara::ctpm() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTPm)
  return ctpm_;
}
void CommonPara::set_ctpm(float value) {
  
  ctpm_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTPm)
}

// float CTPl = 14;
void CommonPara::clear_ctpl() {
  ctpl_ = 0;
}
float CommonPara::ctpl() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTPl)
  return ctpl_;
}
void CommonPara::set_ctpl(float value) {
  
  ctpl_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTPl)
}

// float CTSh = 15;
void CommonPara::clear_ctsh() {
  ctsh_ = 0;
}
float CommonPara::ctsh() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTSh)
  return ctsh_;
}
void CommonPara::set_ctsh(float value) {
  
  ctsh_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTSh)
}

// float CTSm = 16;
void CommonPara::clear_ctsm() {
  ctsm_ = 0;
}
float CommonPara::ctsm() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTSm)
  return ctsm_;
}
void CommonPara::set_ctsm(float value) {
  
  ctsm_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTSm)
}

// float CTSl = 17;
void CommonPara::clear_ctsl() {
  ctsl_ = 0;
}
float CommonPara::ctsl() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTSl)
  return ctsl_;
}
void CommonPara::set_ctsl(float value) {
  
  ctsl_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTSl)
}

// float Kph = 18;
void CommonPara::clear_kph() {
  kph_ = 0;
}
float CommonPara::kph() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Kph)
  return kph_;
}
void CommonPara::set_kph(float value) {
  
  kph_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Kph)
}

// float Kpm = 19;
void CommonPara::clear_kpm() {
  kpm_ = 0;
}
float CommonPara::kpm() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Kpm)
  return kpm_;
}
void CommonPara::set_kpm(float value) {
  
  kpm_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Kpm)
}

// float Kpl = 20;
void CommonPara::clear_kpl() {
  kpl_ = 0;
}
float CommonPara::kpl() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Kpl)
  return kpl_;
}
void CommonPara::set_kpl(float value) {
  
  kpl_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Kpl)
}

// .Differential.Connection_Type WindH = 21;
void CommonPara::clear_windh() {
  windh_ = 0;
}
::Differential::Connection_Type CommonPara::windh() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.WindH)
  return static_cast< ::Differential::Connection_Type >(windh_);
}
void CommonPara::set_windh(::Differential::Connection_Type value) {
  
  windh_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.WindH)
}

// .Differential.Connection_Type WindM = 22;
void CommonPara::clear_windm() {
  windm_ = 0;
}
::Differential::Connection_Type CommonPara::windm() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.WindM)
  return static_cast< ::Differential::Connection_Type >(windm_);
}
void CommonPara::set_windm(::Differential::Connection_Type value) {
  
  windm_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.WindM)
}

// .Differential.Connection_Type WindL = 23;
void CommonPara::clear_windl() {
  windl_ = 0;
}
::Differential::Connection_Type CommonPara::windl() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.WindL)
  return static_cast< ::Differential::Connection_Type >(windl_);
}
void CommonPara::set_windl(::Differential::Connection_Type value) {
  
  windl_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.WindL)
}

// .Differential.Correct_Type AngleMode = 24;
void CommonPara::clear_anglemode() {
  anglemode_ = 0;
}
::Differential::Correct_Type CommonPara::anglemode() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.AngleMode)
  return static_cast< ::Differential::Correct_Type >(anglemode_);
}
void CommonPara::set_anglemode(::Differential::Correct_Type value) {
  
  anglemode_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.AngleMode)
}

// .Differential.TestWind_Type WindSide = 25;
void CommonPara::clear_windside() {
  windside_ = 0;
}
::Differential::TestWind_Type CommonPara::windside() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.WindSide)
  return static_cast< ::Differential::TestWind_Type >(windside_);
}
void CommonPara::set_windside(::Differential::TestWind_Type value) {
  
  windside_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.WindSide)
}

// uint32 ConnMode = 26;
void CommonPara::clear_connmode() {
  connmode_ = 0u;
}
::google::protobuf::uint32 CommonPara::connmode() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.ConnMode)
  return connmode_;
}
void CommonPara::set_connmode(::google::protobuf::uint32 value) {
  
  connmode_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.ConnMode)
}

// uint32 JXFactor = 27;
void CommonPara::clear_jxfactor() {
  jxfactor_ = 0u;
}
::google::protobuf::uint32 CommonPara::jxfactor() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.JXFactor)
  return jxfactor_;
}
void CommonPara::set_jxfactor(::google::protobuf::uint32 value) {
  
  jxfactor_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.JXFactor)
}

// .Differential.Search_Type SerachMode = 28;
void CommonPara::clear_serachmode() {
  serachmode_ = 0;
}
::Differential::Search_Type CommonPara::serachmode() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.SerachMode)
  return static_cast< ::Differential::Search_Type >(serachmode_);
}
void CommonPara::set_serachmode(::Differential::Search_Type value) {
  
  serachmode_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.SerachMode)
}

// .Differential.CTPolar_Type IdEqu = 29;
void CommonPara::clear_idequ() {
  idequ_ = 0;
}
::Differential::CTPolar_Type CommonPara::idequ() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.IdEqu)
  return static_cast< ::Differential::CTPolar_Type >(idequ_);
}
void CommonPara::set_idequ(::Differential::CTPolar_Type value) {
  
  idequ_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.IdEqu)
}

// uint32 Equation = 30;
void CommonPara::clear_equation() {
  equation_ = 0u;
}
::google::protobuf::uint32 CommonPara::equation() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Equation)
  return equation_;
}
void CommonPara::set_equation(::google::protobuf::uint32 value) {
  
  equation_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Equation)
}

// float K1 = 31;
void CommonPara::clear_k1() {
  k1_ = 0;
}
float CommonPara::k1() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.K1)
  return k1_;
}
void CommonPara::set_k1(float value) {
  
  k1_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.K1)
}

// float K2 = 32;
void CommonPara::clear_k2() {
  k2_ = 0;
}
float CommonPara::k2() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.K2)
  return k2_;
}
void CommonPara::set_k2(float value) {
  
  k2_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.K2)
}

// .Differential.TestPhasor_type Phase_Type = 33;
void CommonPara::clear_phase_type() {
  phase_type_ = 0;
}
::Differential::TestPhasor_type CommonPara::phase_type() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Phase_Type)
  return static_cast< ::Differential::TestPhasor_type >(phase_type_);
}
void CommonPara::set_phase_type(::Differential::TestPhasor_type value) {
  
  phase_type_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Phase_Type)
}

// float Reso = 34;
void CommonPara::clear_reso() {
  reso_ = 0;
}
float CommonPara::reso() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Reso)
  return reso_;
}
void CommonPara::set_reso(float value) {
  
  reso_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Reso)
}

// float Ugroup1 = 35;
void CommonPara::clear_ugroup1() {
  ugroup1_ = 0;
}
float CommonPara::ugroup1() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Ugroup1)
  return ugroup1_;
}
void CommonPara::set_ugroup1(float value) {
  
  ugroup1_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Ugroup1)
}

// float Ugroup2 = 36;
void CommonPara::clear_ugroup2() {
  ugroup2_ = 0;
}
float CommonPara::ugroup2() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Ugroup2)
  return ugroup2_;
}
void CommonPara::set_ugroup2(float value) {
  
  ugroup2_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Ugroup2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtectSetting::kAxisFieldNumber;
const int ProtectSetting::kInselFieldNumber;
const int ProtectSetting::kInomFieldNumber;
const int ProtectSetting::kIsdFieldNumber;
const int ProtectSetting::kIcdqdFieldNumber;
const int ProtectSetting::kKneePointFieldNumber;
const int ProtectSetting::kIp1FieldNumber;
const int ProtectSetting::kIp2FieldNumber;
const int ProtectSetting::kIp3FieldNumber;
const int ProtectSetting::kKid1FieldNumber;
const int ProtectSetting::kKid2FieldNumber;
const int ProtectSetting::kKid3FieldNumber;
const int ProtectSetting::kKid4FieldNumber;
const int ProtectSetting::kKxbFieldNumber;
const int ProtectSetting::kKxb3FieldNumber;
const int ProtectSetting::kKxb5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtectSetting::ProtectSetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.ProtectSetting)
}
ProtectSetting::ProtectSetting(const ProtectSetting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&axis_, &from.axis_,
    reinterpret_cast<char*>(&kxb5_) -
    reinterpret_cast<char*>(&axis_) + sizeof(kxb5_));
  // @@protoc_insertion_point(copy_constructor:Differential.ProtectSetting)
}

void ProtectSetting::SharedCtor() {
  ::memset(&axis_, 0, reinterpret_cast<char*>(&kxb5_) -
    reinterpret_cast<char*>(&axis_) + sizeof(kxb5_));
  _cached_size_ = 0;
}

ProtectSetting::~ProtectSetting() {
  // @@protoc_insertion_point(destructor:Differential.ProtectSetting)
  SharedDtor();
}

void ProtectSetting::SharedDtor() {
}

void ProtectSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtectSetting::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[14].descriptor;
}

const ProtectSetting& ProtectSetting::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProtectSetting* ProtectSetting::New(::google::protobuf::Arena* arena) const {
  ProtectSetting* n = new ProtectSetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtectSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.ProtectSetting)
  ::memset(&axis_, 0, reinterpret_cast<char*>(&kxb5_) -
    reinterpret_cast<char*>(&axis_) + sizeof(kxb5_));
}

bool ProtectSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.ProtectSetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Differential.SettingType Axis = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_axis(static_cast< ::Differential::SettingType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Differential.BaseCurrentSelect Insel = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_insel(static_cast< ::Differential::BaseCurrentSelect >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Inom = 3;
      case 3: {
        if (tag == 29u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &inom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Isd = 4;
      case 4: {
        if (tag == 37u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &isd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Icdqd = 5;
      case 5: {
        if (tag == 45u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &icdqd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 KneePoint = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kneepoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Ip1 = 7;
      case 7: {
        if (tag == 61u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ip1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Ip2 = 8;
      case 8: {
        if (tag == 69u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ip2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Ip3 = 9;
      case 9: {
        if (tag == 77u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ip3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Kid1 = 10;
      case 10: {
        if (tag == 85u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kid1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Kid2 = 11;
      case 11: {
        if (tag == 93u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kid2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Kid3 = 12;
      case 12: {
        if (tag == 101u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kid3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Kid4 = 13;
      case 13: {
        if (tag == 109u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kid4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Kxb = 14;
      case 14: {
        if (tag == 117u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kxb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Kxb3 = 15;
      case 15: {
        if (tag == 125u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kxb3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Kxb5 = 16;
      case 16: {
        if (tag == 133u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &kxb5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.ProtectSetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.ProtectSetting)
  return false;
#undef DO_
}

void ProtectSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.ProtectSetting)
  // .Differential.SettingType Axis = 1;
  if (this->axis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->axis(), output);
  }

  // .Differential.BaseCurrentSelect Insel = 2;
  if (this->insel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->insel(), output);
  }

  // float Inom = 3;
  if (this->inom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->inom(), output);
  }

  // float Isd = 4;
  if (this->isd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->isd(), output);
  }

  // float Icdqd = 5;
  if (this->icdqd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->icdqd(), output);
  }

  // uint32 KneePoint = 6;
  if (this->kneepoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->kneepoint(), output);
  }

  // float Ip1 = 7;
  if (this->ip1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->ip1(), output);
  }

  // float Ip2 = 8;
  if (this->ip2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->ip2(), output);
  }

  // float Ip3 = 9;
  if (this->ip3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->ip3(), output);
  }

  // float Kid1 = 10;
  if (this->kid1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->kid1(), output);
  }

  // float Kid2 = 11;
  if (this->kid2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->kid2(), output);
  }

  // float Kid3 = 12;
  if (this->kid3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->kid3(), output);
  }

  // float Kid4 = 13;
  if (this->kid4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->kid4(), output);
  }

  // float Kxb = 14;
  if (this->kxb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->kxb(), output);
  }

  // float Kxb3 = 15;
  if (this->kxb3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->kxb3(), output);
  }

  // float Kxb5 = 16;
  if (this->kxb5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->kxb5(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.ProtectSetting)
}

::google::protobuf::uint8* ProtectSetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.ProtectSetting)
  // .Differential.SettingType Axis = 1;
  if (this->axis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->axis(), target);
  }

  // .Differential.BaseCurrentSelect Insel = 2;
  if (this->insel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->insel(), target);
  }

  // float Inom = 3;
  if (this->inom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->inom(), target);
  }

  // float Isd = 4;
  if (this->isd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->isd(), target);
  }

  // float Icdqd = 5;
  if (this->icdqd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->icdqd(), target);
  }

  // uint32 KneePoint = 6;
  if (this->kneepoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->kneepoint(), target);
  }

  // float Ip1 = 7;
  if (this->ip1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->ip1(), target);
  }

  // float Ip2 = 8;
  if (this->ip2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->ip2(), target);
  }

  // float Ip3 = 9;
  if (this->ip3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->ip3(), target);
  }

  // float Kid1 = 10;
  if (this->kid1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->kid1(), target);
  }

  // float Kid2 = 11;
  if (this->kid2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->kid2(), target);
  }

  // float Kid3 = 12;
  if (this->kid3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->kid3(), target);
  }

  // float Kid4 = 13;
  if (this->kid4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->kid4(), target);
  }

  // float Kxb = 14;
  if (this->kxb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->kxb(), target);
  }

  // float Kxb3 = 15;
  if (this->kxb3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->kxb3(), target);
  }

  // float Kxb5 = 16;
  if (this->kxb5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->kxb5(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.ProtectSetting)
  return target;
}

size_t ProtectSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.ProtectSetting)
  size_t total_size = 0;

  // .Differential.SettingType Axis = 1;
  if (this->axis() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->axis());
  }

  // .Differential.BaseCurrentSelect Insel = 2;
  if (this->insel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->insel());
  }

  // float Inom = 3;
  if (this->inom() != 0) {
    total_size += 1 + 4;
  }

  // float Isd = 4;
  if (this->isd() != 0) {
    total_size += 1 + 4;
  }

  // float Icdqd = 5;
  if (this->icdqd() != 0) {
    total_size += 1 + 4;
  }

  // uint32 KneePoint = 6;
  if (this->kneepoint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kneepoint());
  }

  // float Ip1 = 7;
  if (this->ip1() != 0) {
    total_size += 1 + 4;
  }

  // float Ip2 = 8;
  if (this->ip2() != 0) {
    total_size += 1 + 4;
  }

  // float Ip3 = 9;
  if (this->ip3() != 0) {
    total_size += 1 + 4;
  }

  // float Kid1 = 10;
  if (this->kid1() != 0) {
    total_size += 1 + 4;
  }

  // float Kid2 = 11;
  if (this->kid2() != 0) {
    total_size += 1 + 4;
  }

  // float Kid3 = 12;
  if (this->kid3() != 0) {
    total_size += 1 + 4;
  }

  // float Kid4 = 13;
  if (this->kid4() != 0) {
    total_size += 1 + 4;
  }

  // float Kxb = 14;
  if (this->kxb() != 0) {
    total_size += 1 + 4;
  }

  // float Kxb3 = 15;
  if (this->kxb3() != 0) {
    total_size += 1 + 4;
  }

  // float Kxb5 = 16;
  if (this->kxb5() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtectSetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.ProtectSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtectSetting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtectSetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.ProtectSetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.ProtectSetting)
    MergeFrom(*source);
  }
}

void ProtectSetting::MergeFrom(const ProtectSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.ProtectSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.axis() != 0) {
    set_axis(from.axis());
  }
  if (from.insel() != 0) {
    set_insel(from.insel());
  }
  if (from.inom() != 0) {
    set_inom(from.inom());
  }
  if (from.isd() != 0) {
    set_isd(from.isd());
  }
  if (from.icdqd() != 0) {
    set_icdqd(from.icdqd());
  }
  if (from.kneepoint() != 0) {
    set_kneepoint(from.kneepoint());
  }
  if (from.ip1() != 0) {
    set_ip1(from.ip1());
  }
  if (from.ip2() != 0) {
    set_ip2(from.ip2());
  }
  if (from.ip3() != 0) {
    set_ip3(from.ip3());
  }
  if (from.kid1() != 0) {
    set_kid1(from.kid1());
  }
  if (from.kid2() != 0) {
    set_kid2(from.kid2());
  }
  if (from.kid3() != 0) {
    set_kid3(from.kid3());
  }
  if (from.kid4() != 0) {
    set_kid4(from.kid4());
  }
  if (from.kxb() != 0) {
    set_kxb(from.kxb());
  }
  if (from.kxb3() != 0) {
    set_kxb3(from.kxb3());
  }
  if (from.kxb5() != 0) {
    set_kxb5(from.kxb5());
  }
}

void ProtectSetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.ProtectSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtectSetting::CopyFrom(const ProtectSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.ProtectSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtectSetting::IsInitialized() const {
  return true;
}

void ProtectSetting::Swap(ProtectSetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtectSetting::InternalSwap(ProtectSetting* other) {
  std::swap(axis_, other->axis_);
  std::swap(insel_, other->insel_);
  std::swap(inom_, other->inom_);
  std::swap(isd_, other->isd_);
  std::swap(icdqd_, other->icdqd_);
  std::swap(kneepoint_, other->kneepoint_);
  std::swap(ip1_, other->ip1_);
  std::swap(ip2_, other->ip2_);
  std::swap(ip3_, other->ip3_);
  std::swap(kid1_, other->kid1_);
  std::swap(kid2_, other->kid2_);
  std::swap(kid3_, other->kid3_);
  std::swap(kid4_, other->kid4_);
  std::swap(kxb_, other->kxb_);
  std::swap(kxb3_, other->kxb3_);
  std::swap(kxb5_, other->kxb5_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtectSetting::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtectSetting

// .Differential.SettingType Axis = 1;
void ProtectSetting::clear_axis() {
  axis_ = 0;
}
::Differential::SettingType ProtectSetting::axis() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Axis)
  return static_cast< ::Differential::SettingType >(axis_);
}
void ProtectSetting::set_axis(::Differential::SettingType value) {
  
  axis_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Axis)
}

// .Differential.BaseCurrentSelect Insel = 2;
void ProtectSetting::clear_insel() {
  insel_ = 0;
}
::Differential::BaseCurrentSelect ProtectSetting::insel() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Insel)
  return static_cast< ::Differential::BaseCurrentSelect >(insel_);
}
void ProtectSetting::set_insel(::Differential::BaseCurrentSelect value) {
  
  insel_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Insel)
}

// float Inom = 3;
void ProtectSetting::clear_inom() {
  inom_ = 0;
}
float ProtectSetting::inom() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Inom)
  return inom_;
}
void ProtectSetting::set_inom(float value) {
  
  inom_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Inom)
}

// float Isd = 4;
void ProtectSetting::clear_isd() {
  isd_ = 0;
}
float ProtectSetting::isd() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Isd)
  return isd_;
}
void ProtectSetting::set_isd(float value) {
  
  isd_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Isd)
}

// float Icdqd = 5;
void ProtectSetting::clear_icdqd() {
  icdqd_ = 0;
}
float ProtectSetting::icdqd() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Icdqd)
  return icdqd_;
}
void ProtectSetting::set_icdqd(float value) {
  
  icdqd_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Icdqd)
}

// uint32 KneePoint = 6;
void ProtectSetting::clear_kneepoint() {
  kneepoint_ = 0u;
}
::google::protobuf::uint32 ProtectSetting::kneepoint() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.KneePoint)
  return kneepoint_;
}
void ProtectSetting::set_kneepoint(::google::protobuf::uint32 value) {
  
  kneepoint_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.KneePoint)
}

// float Ip1 = 7;
void ProtectSetting::clear_ip1() {
  ip1_ = 0;
}
float ProtectSetting::ip1() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Ip1)
  return ip1_;
}
void ProtectSetting::set_ip1(float value) {
  
  ip1_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Ip1)
}

// float Ip2 = 8;
void ProtectSetting::clear_ip2() {
  ip2_ = 0;
}
float ProtectSetting::ip2() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Ip2)
  return ip2_;
}
void ProtectSetting::set_ip2(float value) {
  
  ip2_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Ip2)
}

// float Ip3 = 9;
void ProtectSetting::clear_ip3() {
  ip3_ = 0;
}
float ProtectSetting::ip3() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Ip3)
  return ip3_;
}
void ProtectSetting::set_ip3(float value) {
  
  ip3_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Ip3)
}

// float Kid1 = 10;
void ProtectSetting::clear_kid1() {
  kid1_ = 0;
}
float ProtectSetting::kid1() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kid1)
  return kid1_;
}
void ProtectSetting::set_kid1(float value) {
  
  kid1_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kid1)
}

// float Kid2 = 11;
void ProtectSetting::clear_kid2() {
  kid2_ = 0;
}
float ProtectSetting::kid2() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kid2)
  return kid2_;
}
void ProtectSetting::set_kid2(float value) {
  
  kid2_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kid2)
}

// float Kid3 = 12;
void ProtectSetting::clear_kid3() {
  kid3_ = 0;
}
float ProtectSetting::kid3() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kid3)
  return kid3_;
}
void ProtectSetting::set_kid3(float value) {
  
  kid3_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kid3)
}

// float Kid4 = 13;
void ProtectSetting::clear_kid4() {
  kid4_ = 0;
}
float ProtectSetting::kid4() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kid4)
  return kid4_;
}
void ProtectSetting::set_kid4(float value) {
  
  kid4_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kid4)
}

// float Kxb = 14;
void ProtectSetting::clear_kxb() {
  kxb_ = 0;
}
float ProtectSetting::kxb() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kxb)
  return kxb_;
}
void ProtectSetting::set_kxb(float value) {
  
  kxb_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kxb)
}

// float Kxb3 = 15;
void ProtectSetting::clear_kxb3() {
  kxb3_ = 0;
}
float ProtectSetting::kxb3() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kxb3)
  return kxb3_;
}
void ProtectSetting::set_kxb3(float value) {
  
  kxb3_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kxb3)
}

// float Kxb5 = 16;
void ProtectSetting::clear_kxb5() {
  kxb5_ = 0;
}
float ProtectSetting::kxb5() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kxb5)
  return kxb5_;
}
void ProtectSetting::set_kxb5(float value) {
  
  kxb5_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kxb5)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchPara::kIKAFieldNumber;
const int SwitchPara::kIKBFieldNumber;
const int SwitchPara::kIKCFieldNumber;
const int SwitchPara::kIKDFieldNumber;
const int SwitchPara::kIKEFieldNumber;
const int SwitchPara::kIKFFieldNumber;
const int SwitchPara::kIKGFieldNumber;
const int SwitchPara::kIKHFieldNumber;
const int SwitchPara::kIKIFieldNumber;
const int SwitchPara::kIKJFieldNumber;
const int SwitchPara::kILogicFieldNumber;
const int SwitchPara::kIOut1FieldNumber;
const int SwitchPara::kIOut2FieldNumber;
const int SwitchPara::kIOut3FieldNumber;
const int SwitchPara::kIOut4FieldNumber;
const int SwitchPara::kIOut5FieldNumber;
const int SwitchPara::kIOut6FieldNumber;
const int SwitchPara::kIOut7FieldNumber;
const int SwitchPara::kIOut8FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchPara::SwitchPara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Differential_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Differential.SwitchPara)
}
SwitchPara::SwitchPara(const SwitchPara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ika_, &from.ika_,
    reinterpret_cast<char*>(&iout8_) -
    reinterpret_cast<char*>(&ika_) + sizeof(iout8_));
  // @@protoc_insertion_point(copy_constructor:Differential.SwitchPara)
}

void SwitchPara::SharedCtor() {
  ::memset(&ika_, 0, reinterpret_cast<char*>(&iout8_) -
    reinterpret_cast<char*>(&ika_) + sizeof(iout8_));
  _cached_size_ = 0;
}

SwitchPara::~SwitchPara() {
  // @@protoc_insertion_point(destructor:Differential.SwitchPara)
  SharedDtor();
}

void SwitchPara::SharedDtor() {
}

void SwitchPara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchPara::descriptor() {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[15].descriptor;
}

const SwitchPara& SwitchPara::default_instance() {
  protobuf_Differential_2eproto::InitDefaults();
  return *internal_default_instance();
}

SwitchPara* SwitchPara::New(::google::protobuf::Arena* arena) const {
  SwitchPara* n = new SwitchPara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwitchPara::Clear() {
// @@protoc_insertion_point(message_clear_start:Differential.SwitchPara)
  ::memset(&ika_, 0, reinterpret_cast<char*>(&iout8_) -
    reinterpret_cast<char*>(&ika_) + sizeof(iout8_));
}

bool SwitchPara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Differential.SwitchPara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 iKA = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ika_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iKB = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ikb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iKC = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ikc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iKD = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ikd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iKE = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ike_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iKF = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ikf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iKG = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ikg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iKH = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ikh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iKI = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iki_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iKJ = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ikj_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iLogic = 11;
      case 11: {
        if (tag == 88u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ilogic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iOut1 = 12;
      case 12: {
        if (tag == 96u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iout1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iOut2 = 13;
      case 13: {
        if (tag == 104u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iout2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iOut3 = 14;
      case 14: {
        if (tag == 112u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iout3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iOut4 = 15;
      case 15: {
        if (tag == 120u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iout4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iOut5 = 16;
      case 16: {
        if (tag == 128u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iout5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iOut6 = 17;
      case 17: {
        if (tag == 136u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iout6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iOut7 = 18;
      case 18: {
        if (tag == 144u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iout7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iOut8 = 19;
      case 19: {
        if (tag == 152u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iout8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Differential.SwitchPara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Differential.SwitchPara)
  return false;
#undef DO_
}

void SwitchPara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Differential.SwitchPara)
  // uint32 iKA = 1;
  if (this->ika() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ika(), output);
  }

  // uint32 iKB = 2;
  if (this->ikb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ikb(), output);
  }

  // uint32 iKC = 3;
  if (this->ikc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ikc(), output);
  }

  // uint32 iKD = 4;
  if (this->ikd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ikd(), output);
  }

  // uint32 iKE = 5;
  if (this->ike() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ike(), output);
  }

  // uint32 iKF = 6;
  if (this->ikf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ikf(), output);
  }

  // uint32 iKG = 7;
  if (this->ikg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->ikg(), output);
  }

  // uint32 iKH = 8;
  if (this->ikh() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->ikh(), output);
  }

  // uint32 iKI = 9;
  if (this->iki() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->iki(), output);
  }

  // uint32 iKJ = 10;
  if (this->ikj() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->ikj(), output);
  }

  // uint32 iLogic = 11;
  if (this->ilogic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->ilogic(), output);
  }

  // uint32 iOut1 = 12;
  if (this->iout1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->iout1(), output);
  }

  // uint32 iOut2 = 13;
  if (this->iout2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->iout2(), output);
  }

  // uint32 iOut3 = 14;
  if (this->iout3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->iout3(), output);
  }

  // uint32 iOut4 = 15;
  if (this->iout4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->iout4(), output);
  }

  // uint32 iOut5 = 16;
  if (this->iout5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->iout5(), output);
  }

  // uint32 iOut6 = 17;
  if (this->iout6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->iout6(), output);
  }

  // uint32 iOut7 = 18;
  if (this->iout7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->iout7(), output);
  }

  // uint32 iOut8 = 19;
  if (this->iout8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->iout8(), output);
  }

  // @@protoc_insertion_point(serialize_end:Differential.SwitchPara)
}

::google::protobuf::uint8* SwitchPara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Differential.SwitchPara)
  // uint32 iKA = 1;
  if (this->ika() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ika(), target);
  }

  // uint32 iKB = 2;
  if (this->ikb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ikb(), target);
  }

  // uint32 iKC = 3;
  if (this->ikc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ikc(), target);
  }

  // uint32 iKD = 4;
  if (this->ikd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ikd(), target);
  }

  // uint32 iKE = 5;
  if (this->ike() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ike(), target);
  }

  // uint32 iKF = 6;
  if (this->ikf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ikf(), target);
  }

  // uint32 iKG = 7;
  if (this->ikg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->ikg(), target);
  }

  // uint32 iKH = 8;
  if (this->ikh() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->ikh(), target);
  }

  // uint32 iKI = 9;
  if (this->iki() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->iki(), target);
  }

  // uint32 iKJ = 10;
  if (this->ikj() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->ikj(), target);
  }

  // uint32 iLogic = 11;
  if (this->ilogic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->ilogic(), target);
  }

  // uint32 iOut1 = 12;
  if (this->iout1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->iout1(), target);
  }

  // uint32 iOut2 = 13;
  if (this->iout2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->iout2(), target);
  }

  // uint32 iOut3 = 14;
  if (this->iout3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->iout3(), target);
  }

  // uint32 iOut4 = 15;
  if (this->iout4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->iout4(), target);
  }

  // uint32 iOut5 = 16;
  if (this->iout5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->iout5(), target);
  }

  // uint32 iOut6 = 17;
  if (this->iout6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->iout6(), target);
  }

  // uint32 iOut7 = 18;
  if (this->iout7() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->iout7(), target);
  }

  // uint32 iOut8 = 19;
  if (this->iout8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->iout8(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Differential.SwitchPara)
  return target;
}

size_t SwitchPara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Differential.SwitchPara)
  size_t total_size = 0;

  // uint32 iKA = 1;
  if (this->ika() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ika());
  }

  // uint32 iKB = 2;
  if (this->ikb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ikb());
  }

  // uint32 iKC = 3;
  if (this->ikc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ikc());
  }

  // uint32 iKD = 4;
  if (this->ikd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ikd());
  }

  // uint32 iKE = 5;
  if (this->ike() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ike());
  }

  // uint32 iKF = 6;
  if (this->ikf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ikf());
  }

  // uint32 iKG = 7;
  if (this->ikg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ikg());
  }

  // uint32 iKH = 8;
  if (this->ikh() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ikh());
  }

  // uint32 iKI = 9;
  if (this->iki() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iki());
  }

  // uint32 iKJ = 10;
  if (this->ikj() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ikj());
  }

  // uint32 iLogic = 11;
  if (this->ilogic() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ilogic());
  }

  // uint32 iOut1 = 12;
  if (this->iout1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iout1());
  }

  // uint32 iOut2 = 13;
  if (this->iout2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iout2());
  }

  // uint32 iOut3 = 14;
  if (this->iout3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iout3());
  }

  // uint32 iOut4 = 15;
  if (this->iout4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iout4());
  }

  // uint32 iOut5 = 16;
  if (this->iout5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iout5());
  }

  // uint32 iOut6 = 17;
  if (this->iout6() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iout6());
  }

  // uint32 iOut7 = 18;
  if (this->iout7() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iout7());
  }

  // uint32 iOut8 = 19;
  if (this->iout8() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iout8());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchPara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Differential.SwitchPara)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchPara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwitchPara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Differential.SwitchPara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Differential.SwitchPara)
    MergeFrom(*source);
  }
}

void SwitchPara::MergeFrom(const SwitchPara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Differential.SwitchPara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ika() != 0) {
    set_ika(from.ika());
  }
  if (from.ikb() != 0) {
    set_ikb(from.ikb());
  }
  if (from.ikc() != 0) {
    set_ikc(from.ikc());
  }
  if (from.ikd() != 0) {
    set_ikd(from.ikd());
  }
  if (from.ike() != 0) {
    set_ike(from.ike());
  }
  if (from.ikf() != 0) {
    set_ikf(from.ikf());
  }
  if (from.ikg() != 0) {
    set_ikg(from.ikg());
  }
  if (from.ikh() != 0) {
    set_ikh(from.ikh());
  }
  if (from.iki() != 0) {
    set_iki(from.iki());
  }
  if (from.ikj() != 0) {
    set_ikj(from.ikj());
  }
  if (from.ilogic() != 0) {
    set_ilogic(from.ilogic());
  }
  if (from.iout1() != 0) {
    set_iout1(from.iout1());
  }
  if (from.iout2() != 0) {
    set_iout2(from.iout2());
  }
  if (from.iout3() != 0) {
    set_iout3(from.iout3());
  }
  if (from.iout4() != 0) {
    set_iout4(from.iout4());
  }
  if (from.iout5() != 0) {
    set_iout5(from.iout5());
  }
  if (from.iout6() != 0) {
    set_iout6(from.iout6());
  }
  if (from.iout7() != 0) {
    set_iout7(from.iout7());
  }
  if (from.iout8() != 0) {
    set_iout8(from.iout8());
  }
}

void SwitchPara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Differential.SwitchPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchPara::CopyFrom(const SwitchPara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Differential.SwitchPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchPara::IsInitialized() const {
  return true;
}

void SwitchPara::Swap(SwitchPara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchPara::InternalSwap(SwitchPara* other) {
  std::swap(ika_, other->ika_);
  std::swap(ikb_, other->ikb_);
  std::swap(ikc_, other->ikc_);
  std::swap(ikd_, other->ikd_);
  std::swap(ike_, other->ike_);
  std::swap(ikf_, other->ikf_);
  std::swap(ikg_, other->ikg_);
  std::swap(ikh_, other->ikh_);
  std::swap(iki_, other->iki_);
  std::swap(ikj_, other->ikj_);
  std::swap(ilogic_, other->ilogic_);
  std::swap(iout1_, other->iout1_);
  std::swap(iout2_, other->iout2_);
  std::swap(iout3_, other->iout3_);
  std::swap(iout4_, other->iout4_);
  std::swap(iout5_, other->iout5_);
  std::swap(iout6_, other->iout6_);
  std::swap(iout7_, other->iout7_);
  std::swap(iout8_, other->iout8_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SwitchPara::GetMetadata() const {
  protobuf_Differential_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Differential_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchPara

// uint32 iKA = 1;
void SwitchPara::clear_ika() {
  ika_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ika() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKA)
  return ika_;
}
void SwitchPara::set_ika(::google::protobuf::uint32 value) {
  
  ika_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKA)
}

// uint32 iKB = 2;
void SwitchPara::clear_ikb() {
  ikb_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ikb() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKB)
  return ikb_;
}
void SwitchPara::set_ikb(::google::protobuf::uint32 value) {
  
  ikb_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKB)
}

// uint32 iKC = 3;
void SwitchPara::clear_ikc() {
  ikc_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ikc() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKC)
  return ikc_;
}
void SwitchPara::set_ikc(::google::protobuf::uint32 value) {
  
  ikc_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKC)
}

// uint32 iKD = 4;
void SwitchPara::clear_ikd() {
  ikd_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ikd() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKD)
  return ikd_;
}
void SwitchPara::set_ikd(::google::protobuf::uint32 value) {
  
  ikd_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKD)
}

// uint32 iKE = 5;
void SwitchPara::clear_ike() {
  ike_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ike() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKE)
  return ike_;
}
void SwitchPara::set_ike(::google::protobuf::uint32 value) {
  
  ike_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKE)
}

// uint32 iKF = 6;
void SwitchPara::clear_ikf() {
  ikf_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ikf() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKF)
  return ikf_;
}
void SwitchPara::set_ikf(::google::protobuf::uint32 value) {
  
  ikf_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKF)
}

// uint32 iKG = 7;
void SwitchPara::clear_ikg() {
  ikg_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ikg() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKG)
  return ikg_;
}
void SwitchPara::set_ikg(::google::protobuf::uint32 value) {
  
  ikg_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKG)
}

// uint32 iKH = 8;
void SwitchPara::clear_ikh() {
  ikh_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ikh() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKH)
  return ikh_;
}
void SwitchPara::set_ikh(::google::protobuf::uint32 value) {
  
  ikh_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKH)
}

// uint32 iKI = 9;
void SwitchPara::clear_iki() {
  iki_ = 0u;
}
::google::protobuf::uint32 SwitchPara::iki() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKI)
  return iki_;
}
void SwitchPara::set_iki(::google::protobuf::uint32 value) {
  
  iki_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKI)
}

// uint32 iKJ = 10;
void SwitchPara::clear_ikj() {
  ikj_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ikj() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKJ)
  return ikj_;
}
void SwitchPara::set_ikj(::google::protobuf::uint32 value) {
  
  ikj_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKJ)
}

// uint32 iLogic = 11;
void SwitchPara::clear_ilogic() {
  ilogic_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ilogic() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iLogic)
  return ilogic_;
}
void SwitchPara::set_ilogic(::google::protobuf::uint32 value) {
  
  ilogic_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iLogic)
}

// uint32 iOut1 = 12;
void SwitchPara::clear_iout1() {
  iout1_ = 0u;
}
::google::protobuf::uint32 SwitchPara::iout1() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut1)
  return iout1_;
}
void SwitchPara::set_iout1(::google::protobuf::uint32 value) {
  
  iout1_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut1)
}

// uint32 iOut2 = 13;
void SwitchPara::clear_iout2() {
  iout2_ = 0u;
}
::google::protobuf::uint32 SwitchPara::iout2() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut2)
  return iout2_;
}
void SwitchPara::set_iout2(::google::protobuf::uint32 value) {
  
  iout2_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut2)
}

// uint32 iOut3 = 14;
void SwitchPara::clear_iout3() {
  iout3_ = 0u;
}
::google::protobuf::uint32 SwitchPara::iout3() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut3)
  return iout3_;
}
void SwitchPara::set_iout3(::google::protobuf::uint32 value) {
  
  iout3_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut3)
}

// uint32 iOut4 = 15;
void SwitchPara::clear_iout4() {
  iout4_ = 0u;
}
::google::protobuf::uint32 SwitchPara::iout4() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut4)
  return iout4_;
}
void SwitchPara::set_iout4(::google::protobuf::uint32 value) {
  
  iout4_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut4)
}

// uint32 iOut5 = 16;
void SwitchPara::clear_iout5() {
  iout5_ = 0u;
}
::google::protobuf::uint32 SwitchPara::iout5() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut5)
  return iout5_;
}
void SwitchPara::set_iout5(::google::protobuf::uint32 value) {
  
  iout5_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut5)
}

// uint32 iOut6 = 17;
void SwitchPara::clear_iout6() {
  iout6_ = 0u;
}
::google::protobuf::uint32 SwitchPara::iout6() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut6)
  return iout6_;
}
void SwitchPara::set_iout6(::google::protobuf::uint32 value) {
  
  iout6_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut6)
}

// uint32 iOut7 = 18;
void SwitchPara::clear_iout7() {
  iout7_ = 0u;
}
::google::protobuf::uint32 SwitchPara::iout7() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut7)
  return iout7_;
}
void SwitchPara::set_iout7(::google::protobuf::uint32 value) {
  
  iout7_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut7)
}

// uint32 iOut8 = 19;
void SwitchPara::clear_iout8() {
  iout8_ = 0u;
}
::google::protobuf::uint32 SwitchPara::iout8() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut8)
  return iout8_;
}
void SwitchPara::set_iout8(::google::protobuf::uint32 value) {
  
  iout8_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut8)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Differential

// @@protoc_insertion_point(global_scope)
