// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SearchZBorder.proto

#ifndef PROTOBUF_SearchZBorder_2eproto__INCLUDED
#define PROTOBUF_SearchZBorder_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace SearchZBorder {
class BasicResultItem;
class BasicResultItemDefaultTypeInternal;
extern BasicResultItemDefaultTypeInternal _BasicResultItem_default_instance_;
class CommonPara;
class CommonParaDefaultTypeInternal;
extern CommonParaDefaultTypeInternal _CommonPara_default_instance_;
class Items;
class ItemsDefaultTypeInternal;
extern ItemsDefaultTypeInternal _Items_default_instance_;
class SwitchPara;
class SwitchParaDefaultTypeInternal;
extern SwitchParaDefaultTypeInternal _SwitchPara_default_instance_;
class TRIPMAP;
class TRIPMAPDefaultTypeInternal;
extern TRIPMAPDefaultTypeInternal _TRIPMAP_default_instance_;
class TestItem_SearchZBorder;
class TestItem_SearchZBorderDefaultTypeInternal;
extern TestItem_SearchZBorderDefaultTypeInternal _TestItem_SearchZBorder_default_instance_;
class TestItem_SearchZBorder_Result;
class TestItem_SearchZBorder_ResultDefaultTypeInternal;
extern TestItem_SearchZBorder_ResultDefaultTypeInternal _TestItem_SearchZBorder_Result_default_instance_;
class chanel;
class chanelDefaultTypeInternal;
extern chanelDefaultTypeInternal _chanel_default_instance_;
}  // namespace SearchZBorder

namespace SearchZBorder {

namespace protobuf_SearchZBorder_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_SearchZBorder_2eproto

enum Error_type {
  Error_A_JD = 0,
  Error_B_JD = 1,
  Error_C_JD = 2,
  Error_AB_DL = 3,
  Error_BC_DL = 4,
  Error_CA_DL = 5,
  Error_AB_JDDL = 6,
  Error_BC_JDDL = 7,
  Error_CA_JDDL = 8,
  Error_ABC_DL = 9,
  Error_SINGLE_ZK = 10,
  Error_type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Error_type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Error_type_IsValid(int value);
const Error_type Error_type_MIN = Error_A_JD;
const Error_type Error_type_MAX = Error_SINGLE_ZK;
const int Error_type_ARRAYSIZE = Error_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Error_type_descriptor();
inline const ::std::string& Error_type_Name(Error_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Error_type_descriptor(), value);
}
inline bool Error_type_Parse(
    const ::std::string& name, Error_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Error_type>(
    Error_type_descriptor(), name, value);
}
enum PTCON {
  BUS = 0,
  LINE = 1,
  PTCON_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PTCON_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PTCON_IsValid(int value);
const PTCON PTCON_MIN = BUS;
const PTCON PTCON_MAX = LINE;
const int PTCON_ARRAYSIZE = PTCON_MAX + 1;

const ::google::protobuf::EnumDescriptor* PTCON_descriptor();
inline const ::std::string& PTCON_Name(PTCON value) {
  return ::google::protobuf::internal::NameOfEnum(
    PTCON_descriptor(), value);
}
inline bool PTCON_Parse(
    const ::std::string& name, PTCON* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PTCON>(
    PTCON_descriptor(), name, value);
}
enum CTPOINT {
  POINT_BUS = 0,
  POINT_LINE = 1,
  CTPOINT_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CTPOINT_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CTPOINT_IsValid(int value);
const CTPOINT CTPOINT_MIN = POINT_BUS;
const CTPOINT CTPOINT_MAX = POINT_LINE;
const int CTPOINT_ARRAYSIZE = CTPOINT_MAX + 1;

const ::google::protobuf::EnumDescriptor* CTPOINT_descriptor();
inline const ::std::string& CTPOINT_Name(CTPOINT value) {
  return ::google::protobuf::internal::NameOfEnum(
    CTPOINT_descriptor(), value);
}
inline bool CTPOINT_Parse(
    const ::std::string& name, CTPOINT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CTPOINT>(
    CTPOINT_descriptor(), name, value);
}
enum BCSIMULATION {
  eNO = 0,
  eYES = 1,
  BCSIMULATION_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BCSIMULATION_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BCSIMULATION_IsValid(int value);
const BCSIMULATION BCSIMULATION_MIN = eNO;
const BCSIMULATION BCSIMULATION_MAX = eYES;
const int BCSIMULATION_ARRAYSIZE = BCSIMULATION_MAX + 1;

const ::google::protobuf::EnumDescriptor* BCSIMULATION_descriptor();
inline const ::std::string& BCSIMULATION_Name(BCSIMULATION value) {
  return ::google::protobuf::internal::NameOfEnum(
    BCSIMULATION_descriptor(), value);
}
inline bool BCSIMULATION_Parse(
    const ::std::string& name, BCSIMULATION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BCSIMULATION>(
    BCSIMULATION_descriptor(), name, value);
}
enum FaultIncMode {
  RANDOM = 0,
  CONSTANT = 1,
  FaultIncMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FaultIncMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FaultIncMode_IsValid(int value);
const FaultIncMode FaultIncMode_MIN = RANDOM;
const FaultIncMode FaultIncMode_MAX = CONSTANT;
const int FaultIncMode_ARRAYSIZE = FaultIncMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* FaultIncMode_descriptor();
inline const ::std::string& FaultIncMode_Name(FaultIncMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    FaultIncMode_descriptor(), value);
}
inline bool FaultIncMode_Parse(
    const ::std::string& name, FaultIncMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FaultIncMode>(
    FaultIncMode_descriptor(), name, value);
}
enum DCSIM {
  NOOVERLYING = 0,
  OVERLYING = 1,
  DCSIM_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DCSIM_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DCSIM_IsValid(int value);
const DCSIM DCSIM_MIN = NOOVERLYING;
const DCSIM DCSIM_MAX = OVERLYING;
const int DCSIM_ARRAYSIZE = DCSIM_MAX + 1;

const ::google::protobuf::EnumDescriptor* DCSIM_descriptor();
inline const ::std::string& DCSIM_Name(DCSIM value) {
  return ::google::protobuf::internal::NameOfEnum(
    DCSIM_descriptor(), value);
}
inline bool DCSIM_Parse(
    const ::std::string& name, DCSIM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DCSIM>(
    DCSIM_descriptor(), name, value);
}
enum TestMode {
  CONSTI = 0,
  CONSTV = 1,
  CONSTZ = 2,
  TestMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestMode_IsValid(int value);
const TestMode TestMode_MIN = CONSTI;
const TestMode TestMode_MAX = CONSTZ;
const int TestMode_ARRAYSIZE = TestMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestMode_descriptor();
inline const ::std::string& TestMode_Name(TestMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestMode_descriptor(), value);
}
inline bool TestMode_Parse(
    const ::std::string& name, TestMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestMode>(
    TestMode_descriptor(), name, value);
}
enum KoMode {
  K0 = 0,
  KRKX = 1,
  Z0 = 2,
  KoMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  KoMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool KoMode_IsValid(int value);
const KoMode KoMode_MIN = K0;
const KoMode KoMode_MAX = Z0;
const int KoMode_ARRAYSIZE = KoMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* KoMode_descriptor();
inline const ::std::string& KoMode_Name(KoMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    KoMode_descriptor(), value);
}
inline bool KoMode_Parse(
    const ::std::string& name, KoMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KoMode>(
    KoMode_descriptor(), name, value);
}
enum VZDEFINE {
  ZERO = 0,
  Z3X3VO = 1,
  F3X3VO = 2,
  Z3VO = 3,
  F3VO = 4,
  VZDEFINE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VZDEFINE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VZDEFINE_IsValid(int value);
const VZDEFINE VZDEFINE_MIN = ZERO;
const VZDEFINE VZDEFINE_MAX = F3VO;
const int VZDEFINE_ARRAYSIZE = VZDEFINE_MAX + 1;

const ::google::protobuf::EnumDescriptor* VZDEFINE_descriptor();
inline const ::std::string& VZDEFINE_Name(VZDEFINE value) {
  return ::google::protobuf::internal::NameOfEnum(
    VZDEFINE_descriptor(), value);
}
inline bool VZDEFINE_Parse(
    const ::std::string& name, VZDEFINE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VZDEFINE>(
    VZDEFINE_descriptor(), name, value);
}
enum VZPHDEFINE {
  VA_PHASE = 0,
  VB_PHASE = 1,
  VC_PHASE = 2,
  VAB_PHASE = 3,
  VBC_PHASE = 4,
  VCA_PHASE = 5,
  VZPHDEFINE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VZPHDEFINE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VZPHDEFINE_IsValid(int value);
const VZPHDEFINE VZPHDEFINE_MIN = VA_PHASE;
const VZPHDEFINE VZPHDEFINE_MAX = VCA_PHASE;
const int VZPHDEFINE_ARRAYSIZE = VZPHDEFINE_MAX + 1;

const ::google::protobuf::EnumDescriptor* VZPHDEFINE_descriptor();
inline const ::std::string& VZPHDEFINE_Name(VZPHDEFINE value) {
  return ::google::protobuf::internal::NameOfEnum(
    VZPHDEFINE_descriptor(), value);
}
inline bool VZPHDEFINE_Parse(
    const ::std::string& name, VZPHDEFINE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VZPHDEFINE>(
    VZPHDEFINE_descriptor(), name, value);
}
enum Search_Type {
  Search_Type_Search_Type = 0,
  Search_Type_Single = 1,
  Search_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Search_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Search_Type_IsValid(int value);
const Search_Type Search_Type_MIN = Search_Type_Search_Type;
const Search_Type Search_Type_MAX = Search_Type_Single;
const int Search_Type_ARRAYSIZE = Search_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Search_Type_descriptor();
inline const ::std::string& Search_Type_Name(Search_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Search_Type_descriptor(), value);
}
inline bool Search_Type_Parse(
    const ::std::string& name, Search_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Search_Type>(
    Search_Type_descriptor(), name, value);
}
// ===================================================================

class chanel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchZBorder.chanel) */ {
 public:
  chanel();
  virtual ~chanel();

  chanel(const chanel& from);

  inline chanel& operator=(const chanel& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chanel& default_instance();

  static inline const chanel* internal_default_instance() {
    return reinterpret_cast<const chanel*>(
               &_chanel_default_instance_);
  }

  void Swap(chanel* other);

  // implements Message ----------------------------------------------

  inline chanel* New() const PROTOBUF_FINAL { return New(NULL); }

  chanel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const chanel& from);
  void MergeFrom(const chanel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(chanel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float famptitude = 1;
  void clear_famptitude();
  static const int kFamptitudeFieldNumber = 1;
  float famptitude() const;
  void set_famptitude(float value);

  // float fphase = 2;
  void clear_fphase();
  static const int kFphaseFieldNumber = 2;
  float fphase() const;
  void set_fphase(float value);

  // @@protoc_insertion_point(class_scope:SearchZBorder.chanel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float famptitude_;
  float fphase_;
  mutable int _cached_size_;
  friend struct  protobuf_SearchZBorder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BasicResultItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchZBorder.BasicResultItem) */ {
 public:
  BasicResultItem();
  virtual ~BasicResultItem();

  BasicResultItem(const BasicResultItem& from);

  inline BasicResultItem& operator=(const BasicResultItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicResultItem& default_instance();

  static inline const BasicResultItem* internal_default_instance() {
    return reinterpret_cast<const BasicResultItem*>(
               &_BasicResultItem_default_instance_);
  }

  void Swap(BasicResultItem* other);

  // implements Message ----------------------------------------------

  inline BasicResultItem* New() const PROTOBUF_FINAL { return New(NULL); }

  BasicResultItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BasicResultItem& from);
  void MergeFrom(const BasicResultItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BasicResultItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .SearchZBorder.chanel Va = 1;
  bool has_va() const;
  void clear_va();
  static const int kVaFieldNumber = 1;
  const ::SearchZBorder::chanel& va() const;
  ::SearchZBorder::chanel* mutable_va();
  ::SearchZBorder::chanel* release_va();
  void set_allocated_va(::SearchZBorder::chanel* va);

  // .SearchZBorder.chanel Vb = 2;
  bool has_vb() const;
  void clear_vb();
  static const int kVbFieldNumber = 2;
  const ::SearchZBorder::chanel& vb() const;
  ::SearchZBorder::chanel* mutable_vb();
  ::SearchZBorder::chanel* release_vb();
  void set_allocated_vb(::SearchZBorder::chanel* vb);

  // .SearchZBorder.chanel Vc = 3;
  bool has_vc() const;
  void clear_vc();
  static const int kVcFieldNumber = 3;
  const ::SearchZBorder::chanel& vc() const;
  ::SearchZBorder::chanel* mutable_vc();
  ::SearchZBorder::chanel* release_vc();
  void set_allocated_vc(::SearchZBorder::chanel* vc);

  // .SearchZBorder.chanel Ia = 4;
  bool has_ia() const;
  void clear_ia();
  static const int kIaFieldNumber = 4;
  const ::SearchZBorder::chanel& ia() const;
  ::SearchZBorder::chanel* mutable_ia();
  ::SearchZBorder::chanel* release_ia();
  void set_allocated_ia(::SearchZBorder::chanel* ia);

  // .SearchZBorder.chanel Ib = 5;
  bool has_ib() const;
  void clear_ib();
  static const int kIbFieldNumber = 5;
  const ::SearchZBorder::chanel& ib() const;
  ::SearchZBorder::chanel* mutable_ib();
  ::SearchZBorder::chanel* release_ib();
  void set_allocated_ib(::SearchZBorder::chanel* ib);

  // .SearchZBorder.chanel Ic = 6;
  bool has_ic() const;
  void clear_ic();
  static const int kIcFieldNumber = 6;
  const ::SearchZBorder::chanel& ic() const;
  ::SearchZBorder::chanel* mutable_ic();
  ::SearchZBorder::chanel* release_ic();
  void set_allocated_ic(::SearchZBorder::chanel* ic);

  // @@protoc_insertion_point(class_scope:SearchZBorder.BasicResultItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SearchZBorder::chanel* va_;
  ::SearchZBorder::chanel* vb_;
  ::SearchZBorder::chanel* vc_;
  ::SearchZBorder::chanel* ia_;
  ::SearchZBorder::chanel* ib_;
  ::SearchZBorder::chanel* ic_;
  mutable int _cached_size_;
  friend struct  protobuf_SearchZBorder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestItem_SearchZBorder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchZBorder.TestItem_SearchZBorder) */ {
 public:
  TestItem_SearchZBorder();
  virtual ~TestItem_SearchZBorder();

  TestItem_SearchZBorder(const TestItem_SearchZBorder& from);

  inline TestItem_SearchZBorder& operator=(const TestItem_SearchZBorder& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestItem_SearchZBorder& default_instance();

  static inline const TestItem_SearchZBorder* internal_default_instance() {
    return reinterpret_cast<const TestItem_SearchZBorder*>(
               &_TestItem_SearchZBorder_default_instance_);
  }

  void Swap(TestItem_SearchZBorder* other);

  // implements Message ----------------------------------------------

  inline TestItem_SearchZBorder* New() const PROTOBUF_FINAL { return New(NULL); }

  TestItem_SearchZBorder* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestItem_SearchZBorder& from);
  void MergeFrom(const TestItem_SearchZBorder& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestItem_SearchZBorder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 iIndex = 1;
  void clear_iindex();
  static const int kIIndexFieldNumber = 1;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // .SearchZBorder.Error_type errortype = 2;
  void clear_errortype();
  static const int kErrortypeFieldNumber = 2;
  ::SearchZBorder::Error_type errortype() const;
  void set_errortype(::SearchZBorder::Error_type value);

  // float fEnd_Z = 3;
  void clear_fend_z();
  static const int kFEndZFieldNumber = 3;
  float fend_z() const;
  void set_fend_z(float value);

  // float fEnd_ZAngle = 4;
  void clear_fend_zangle();
  static const int kFEndZAngleFieldNumber = 4;
  float fend_zangle() const;
  void set_fend_zangle(float value);

  // float fHead_Z = 5;
  void clear_fhead_z();
  static const int kFHeadZFieldNumber = 5;
  float fhead_z() const;
  void set_fhead_z(float value);

  // float fHead_ZAngle = 6;
  void clear_fhead_zangle();
  static const int kFHeadZAngleFieldNumber = 6;
  float fhead_zangle() const;
  void set_fhead_zangle(float value);

  // float fZ_Step = 7;
  void clear_fz_step();
  static const int kFZStepFieldNumber = 7;
  float fz_step() const;
  void set_fz_step(float value);

  // float fDL_I = 8;
  void clear_fdl_i();
  static const int kFDLIFieldNumber = 8;
  float fdl_i() const;
  void set_fdl_i(float value);

  // float fDL_V = 9;
  void clear_fdl_v();
  static const int kFDLVFieldNumber = 9;
  float fdl_v() const;
  void set_fdl_v(float value);

  // float fMaxErrorTime = 10;
  void clear_fmaxerrortime();
  static const int kFMaxErrorTimeFieldNumber = 10;
  float fmaxerrortime() const;
  void set_fmaxerrortime(float value);

  // float fLoadCurrent = 11;
  void clear_floadcurrent();
  static const int kFLoadCurrentFieldNumber = 11;
  float floadcurrent() const;
  void set_floadcurrent(float value);

  // float fLoadAngle = 12;
  void clear_floadangle();
  static const int kFLoadAngleFieldNumber = 12;
  float floadangle() const;
  void set_floadangle(float value);

  // @@protoc_insertion_point(class_scope:SearchZBorder.TestItem_SearchZBorder)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 iindex_;
  int errortype_;
  float fend_z_;
  float fend_zangle_;
  float fhead_z_;
  float fhead_zangle_;
  float fz_step_;
  float fdl_i_;
  float fdl_v_;
  float fmaxerrortime_;
  float floadcurrent_;
  float floadangle_;
  mutable int _cached_size_;
  friend struct  protobuf_SearchZBorder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestItem_SearchZBorder_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchZBorder.TestItem_SearchZBorder_Result) */ {
 public:
  TestItem_SearchZBorder_Result();
  virtual ~TestItem_SearchZBorder_Result();

  TestItem_SearchZBorder_Result(const TestItem_SearchZBorder_Result& from);

  inline TestItem_SearchZBorder_Result& operator=(const TestItem_SearchZBorder_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestItem_SearchZBorder_Result& default_instance();

  static inline const TestItem_SearchZBorder_Result* internal_default_instance() {
    return reinterpret_cast<const TestItem_SearchZBorder_Result*>(
               &_TestItem_SearchZBorder_Result_default_instance_);
  }

  void Swap(TestItem_SearchZBorder_Result* other);

  // implements Message ----------------------------------------------

  inline TestItem_SearchZBorder_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  TestItem_SearchZBorder_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestItem_SearchZBorder_Result& from);
  void MergeFrom(const TestItem_SearchZBorder_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestItem_SearchZBorder_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .SearchZBorder.BasicResultItem basic = 2;
  bool has_basic() const;
  void clear_basic();
  static const int kBasicFieldNumber = 2;
  const ::SearchZBorder::BasicResultItem& basic() const;
  ::SearchZBorder::BasicResultItem* mutable_basic();
  ::SearchZBorder::BasicResultItem* release_basic();
  void set_allocated_basic(::SearchZBorder::BasicResultItem* basic);

  // uint32 iIndex = 1;
  void clear_iindex();
  static const int kIIndexFieldNumber = 1;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // float fZ = 3;
  void clear_fz();
  static const int kFZFieldNumber = 3;
  float fz() const;
  void set_fz(float value);

  // float fZAngle = 4;
  void clear_fzangle();
  static const int kFZAngleFieldNumber = 4;
  float fzangle() const;
  void set_fzangle(float value);

  // float fTime = 5;
  void clear_ftime();
  static const int kFTimeFieldNumber = 5;
  float ftime() const;
  void set_ftime(float value);

  // bool bEnd = 6;
  void clear_bend();
  static const int kBEndFieldNumber = 6;
  bool bend() const;
  void set_bend(bool value);

  // uint32 nibinstate = 7;
  void clear_nibinstate();
  static const int kNibinstateFieldNumber = 7;
  ::google::protobuf::uint32 nibinstate() const;
  void set_nibinstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SearchZBorder.TestItem_SearchZBorder_Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SearchZBorder::BasicResultItem* basic_;
  ::google::protobuf::uint32 iindex_;
  float fz_;
  float fzangle_;
  float ftime_;
  bool bend_;
  ::google::protobuf::uint32 nibinstate_;
  mutable int _cached_size_;
  friend struct  protobuf_SearchZBorder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Items : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchZBorder.Items) */ {
 public:
  Items();
  virtual ~Items();

  Items(const Items& from);

  inline Items& operator=(const Items& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Items& default_instance();

  static inline const Items* internal_default_instance() {
    return reinterpret_cast<const Items*>(
               &_Items_default_instance_);
  }

  void Swap(Items* other);

  // implements Message ----------------------------------------------

  inline Items* New() const PROTOBUF_FINAL { return New(NULL); }

  Items* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Items& from);
  void MergeFrom(const Items& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Items* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SearchZBorder.TestItem_SearchZBorder oItems = 3;
  int oitems_size() const;
  void clear_oitems();
  static const int kOItemsFieldNumber = 3;
  const ::SearchZBorder::TestItem_SearchZBorder& oitems(int index) const;
  ::SearchZBorder::TestItem_SearchZBorder* mutable_oitems(int index);
  ::SearchZBorder::TestItem_SearchZBorder* add_oitems();
  ::google::protobuf::RepeatedPtrField< ::SearchZBorder::TestItem_SearchZBorder >*
      mutable_oitems();
  const ::google::protobuf::RepeatedPtrField< ::SearchZBorder::TestItem_SearchZBorder >&
      oitems() const;

  // .SearchZBorder.CommonPara oComm = 1;
  bool has_ocomm() const;
  void clear_ocomm();
  static const int kOCommFieldNumber = 1;
  const ::SearchZBorder::CommonPara& ocomm() const;
  ::SearchZBorder::CommonPara* mutable_ocomm();
  ::SearchZBorder::CommonPara* release_ocomm();
  void set_allocated_ocomm(::SearchZBorder::CommonPara* ocomm);

  // .SearchZBorder.SwitchPara oSwitch = 2;
  bool has_oswitch() const;
  void clear_oswitch();
  static const int kOSwitchFieldNumber = 2;
  const ::SearchZBorder::SwitchPara& oswitch() const;
  ::SearchZBorder::SwitchPara* mutable_oswitch();
  ::SearchZBorder::SwitchPara* release_oswitch();
  void set_allocated_oswitch(::SearchZBorder::SwitchPara* oswitch);

  // @@protoc_insertion_point(class_scope:SearchZBorder.Items)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SearchZBorder::TestItem_SearchZBorder > oitems_;
  ::SearchZBorder::CommonPara* ocomm_;
  ::SearchZBorder::SwitchPara* oswitch_;
  mutable int _cached_size_;
  friend struct  protobuf_SearchZBorder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommonPara : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchZBorder.CommonPara) */ {
 public:
  CommonPara();
  virtual ~CommonPara();

  CommonPara(const CommonPara& from);

  inline CommonPara& operator=(const CommonPara& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonPara& default_instance();

  static inline const CommonPara* internal_default_instance() {
    return reinterpret_cast<const CommonPara*>(
               &_CommonPara_default_instance_);
  }

  void Swap(CommonPara* other);

  // implements Message ----------------------------------------------

  inline CommonPara* New() const PROTOBUF_FINAL { return New(NULL); }

  CommonPara* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommonPara& from);
  void MergeFrom(const CommonPara& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommonPara* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float EDV = 1;
  void clear_edv();
  static const int kEDVFieldNumber = 1;
  float edv() const;
  void set_edv(float value);

  // float EDI = 2;
  void clear_edi();
  static const int kEDIFieldNumber = 2;
  float edi() const;
  void set_edi(float value);

  // float EDHZ = 3;
  void clear_edhz();
  static const int kEDHZFieldNumber = 3;
  float edhz() const;
  void set_edhz(float value);

  // float PrepareTime = 4;
  void clear_preparetime();
  static const int kPrepareTimeFieldNumber = 4;
  float preparetime() const;
  void set_preparetime(float value);

  // float PreFaultTime = 5;
  void clear_prefaulttime();
  static const int kPreFaultTimeFieldNumber = 5;
  float prefaulttime() const;
  void set_prefaulttime(float value);

  // float PostFaultTime = 6;
  void clear_postfaulttime();
  static const int kPostFaultTimeFieldNumber = 6;
  float postfaulttime() const;
  void set_postfaulttime(float value);

  // .SearchZBorder.PTCON ePTCON = 7;
  void clear_eptcon();
  static const int kEPTCONFieldNumber = 7;
  ::SearchZBorder::PTCON eptcon() const;
  void set_eptcon(::SearchZBorder::PTCON value);

  // .SearchZBorder.CTPOINT eCTPOINT = 8;
  void clear_ectpoint();
  static const int kECTPOINTFieldNumber = 8;
  ::SearchZBorder::CTPOINT ectpoint() const;
  void set_ectpoint(::SearchZBorder::CTPOINT value);

  // .SearchZBorder.BCSIMULATION eBCSIMULATION = 9;
  void clear_ebcsimulation();
  static const int kEBCSIMULATIONFieldNumber = 9;
  ::SearchZBorder::BCSIMULATION ebcsimulation() const;
  void set_ebcsimulation(::SearchZBorder::BCSIMULATION value);

  // float TripTime = 10;
  void clear_triptime();
  static const int kTripTimeFieldNumber = 10;
  float triptime() const;
  void set_triptime(float value);

  // float CloseTime = 11;
  void clear_closetime();
  static const int kCloseTimeFieldNumber = 11;
  float closetime() const;
  void set_closetime(float value);

  // .SearchZBorder.FaultIncMode eFaultIncMode = 12;
  void clear_efaultincmode();
  static const int kEFaultIncModeFieldNumber = 12;
  ::SearchZBorder::FaultIncMode efaultincmode() const;
  void set_efaultincmode(::SearchZBorder::FaultIncMode value);

  // float FaultAngle = 13;
  void clear_faultangle();
  static const int kFaultAngleFieldNumber = 13;
  float faultangle() const;
  void set_faultangle(float value);

  // .SearchZBorder.DCSIM eDCSIM = 14;
  void clear_edcsim();
  static const int kEDCSIMFieldNumber = 14;
  ::SearchZBorder::DCSIM edcsim() const;
  void set_edcsim(::SearchZBorder::DCSIM value);

  // .SearchZBorder.TestMode eTestMode = 15;
  void clear_etestmode();
  static const int kETestModeFieldNumber = 15;
  ::SearchZBorder::TestMode etestmode() const;
  void set_etestmode(::SearchZBorder::TestMode value);

  // float Zs = 16;
  void clear_zs();
  static const int kZsFieldNumber = 16;
  float zs() const;
  void set_zs(float value);

  // float Phis = 17;
  void clear_phis();
  static const int kPhisFieldNumber = 17;
  float phis() const;
  void set_phis(float value);

  // float KOA = 18;
  void clear_koa();
  static const int kKOAFieldNumber = 18;
  float koa() const;
  void set_koa(float value);

  // float KOB = 19;
  void clear_kob();
  static const int kKOBFieldNumber = 19;
  float kob() const;
  void set_kob(float value);

  // .SearchZBorder.KoMode eKoMode = 20;
  void clear_ekomode();
  static const int kEKoModeFieldNumber = 20;
  ::SearchZBorder::KoMode ekomode() const;
  void set_ekomode(::SearchZBorder::KoMode value);

  // .SearchZBorder.Search_Type eSearchType = 21;
  void clear_esearchtype();
  static const int kESearchTypeFieldNumber = 21;
  ::SearchZBorder::Search_Type esearchtype() const;
  void set_esearchtype(::SearchZBorder::Search_Type value);

  // .SearchZBorder.VZDEFINE eVZDEFINE = 22;
  void clear_evzdefine();
  static const int kEVZDEFINEFieldNumber = 22;
  ::SearchZBorder::VZDEFINE evzdefine() const;
  void set_evzdefine(::SearchZBorder::VZDEFINE value);

  // .SearchZBorder.VZPHDEFINE eVZPHDEFINE = 23;
  void clear_evzphdefine();
  static const int kEVZPHDEFINEFieldNumber = 23;
  ::SearchZBorder::VZPHDEFINE evzphdefine() const;
  void set_evzphdefine(::SearchZBorder::VZPHDEFINE value);

  // float VzPhdiff = 24;
  void clear_vzphdiff();
  static const int kVzPhdiffFieldNumber = 24;
  float vzphdiff() const;
  void set_vzphdiff(float value);

  // float KOAs = 25;
  void clear_koas();
  static const int kKOAsFieldNumber = 25;
  float koas() const;
  void set_koas(float value);

  // float KOBs = 26;
  void clear_kobs();
  static const int kKOBsFieldNumber = 26;
  float kobs() const;
  void set_kobs(float value);

  // @@protoc_insertion_point(class_scope:SearchZBorder.CommonPara)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float edv_;
  float edi_;
  float edhz_;
  float preparetime_;
  float prefaulttime_;
  float postfaulttime_;
  int eptcon_;
  int ectpoint_;
  int ebcsimulation_;
  float triptime_;
  float closetime_;
  int efaultincmode_;
  float faultangle_;
  int edcsim_;
  int etestmode_;
  float zs_;
  float phis_;
  float koa_;
  float kob_;
  int ekomode_;
  int esearchtype_;
  int evzdefine_;
  int evzphdefine_;
  float vzphdiff_;
  float koas_;
  float kobs_;
  mutable int _cached_size_;
  friend struct  protobuf_SearchZBorder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TRIPMAP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchZBorder.TRIPMAP) */ {
 public:
  TRIPMAP();
  virtual ~TRIPMAP();

  TRIPMAP(const TRIPMAP& from);

  inline TRIPMAP& operator=(const TRIPMAP& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRIPMAP& default_instance();

  static inline const TRIPMAP* internal_default_instance() {
    return reinterpret_cast<const TRIPMAP*>(
               &_TRIPMAP_default_instance_);
  }

  void Swap(TRIPMAP* other);

  // implements Message ----------------------------------------------

  inline TRIPMAP* New() const PROTOBUF_FINAL { return New(NULL); }

  TRIPMAP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TRIPMAP& from);
  void MergeFrom(const TRIPMAP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TRIPMAP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 IK = 1;
  void clear_ik();
  static const int kIKFieldNumber = 1;
  ::google::protobuf::uint32 ik() const;
  void set_ik(::google::protobuf::uint32 value);

  // uint32 TripABC = 2;
  void clear_tripabc();
  static const int kTripABCFieldNumber = 2;
  ::google::protobuf::uint32 tripabc() const;
  void set_tripabc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SearchZBorder.TRIPMAP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ik_;
  ::google::protobuf::uint32 tripabc_;
  mutable int _cached_size_;
  friend struct  protobuf_SearchZBorder_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SwitchPara : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchZBorder.SwitchPara) */ {
 public:
  SwitchPara();
  virtual ~SwitchPara();

  SwitchPara(const SwitchPara& from);

  inline SwitchPara& operator=(const SwitchPara& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchPara& default_instance();

  static inline const SwitchPara* internal_default_instance() {
    return reinterpret_cast<const SwitchPara*>(
               &_SwitchPara_default_instance_);
  }

  void Swap(SwitchPara* other);

  // implements Message ----------------------------------------------

  inline SwitchPara* New() const PROTOBUF_FINAL { return New(NULL); }

  SwitchPara* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SwitchPara& from);
  void MergeFrom(const SwitchPara& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SwitchPara* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SearchZBorder.TRIPMAP iTripBuf = 1;
  int itripbuf_size() const;
  void clear_itripbuf();
  static const int kITripBufFieldNumber = 1;
  const ::SearchZBorder::TRIPMAP& itripbuf(int index) const;
  ::SearchZBorder::TRIPMAP* mutable_itripbuf(int index);
  ::SearchZBorder::TRIPMAP* add_itripbuf();
  ::google::protobuf::RepeatedPtrField< ::SearchZBorder::TRIPMAP >*
      mutable_itripbuf();
  const ::google::protobuf::RepeatedPtrField< ::SearchZBorder::TRIPMAP >&
      itripbuf() const;

  // repeated uint32 iKOutput = 2;
  int ikoutput_size() const;
  void clear_ikoutput();
  static const int kIKOutputFieldNumber = 2;
  ::google::protobuf::uint32 ikoutput(int index) const;
  void set_ikoutput(int index, ::google::protobuf::uint32 value);
  void add_ikoutput(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ikoutput() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ikoutput();

  // uint32 iOutMode = 3;
  void clear_ioutmode();
  static const int kIOutModeFieldNumber = 3;
  ::google::protobuf::uint32 ioutmode() const;
  void set_ioutmode(::google::protobuf::uint32 value);

  // float fTurnTime = 4;
  void clear_fturntime();
  static const int kFTurnTimeFieldNumber = 4;
  float fturntime() const;
  void set_fturntime(float value);

  // float fHoldTime = 5;
  void clear_fholdtime();
  static const int kFHoldTimeFieldNumber = 5;
  float fholdtime() const;
  void set_fholdtime(float value);

  // @@protoc_insertion_point(class_scope:SearchZBorder.SwitchPara)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SearchZBorder::TRIPMAP > itripbuf_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ikoutput_;
  mutable int _ikoutput_cached_byte_size_;
  ::google::protobuf::uint32 ioutmode_;
  float fturntime_;
  float fholdtime_;
  mutable int _cached_size_;
  friend struct  protobuf_SearchZBorder_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// chanel

// float famptitude = 1;
inline void chanel::clear_famptitude() {
  famptitude_ = 0;
}
inline float chanel::famptitude() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.chanel.famptitude)
  return famptitude_;
}
inline void chanel::set_famptitude(float value) {
  
  famptitude_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.chanel.famptitude)
}

// float fphase = 2;
inline void chanel::clear_fphase() {
  fphase_ = 0;
}
inline float chanel::fphase() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.chanel.fphase)
  return fphase_;
}
inline void chanel::set_fphase(float value) {
  
  fphase_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.chanel.fphase)
}

// -------------------------------------------------------------------

// BasicResultItem

// .SearchZBorder.chanel Va = 1;
inline bool BasicResultItem::has_va() const {
  return this != internal_default_instance() && va_ != NULL;
}
inline void BasicResultItem::clear_va() {
  if (GetArenaNoVirtual() == NULL && va_ != NULL) delete va_;
  va_ = NULL;
}
inline const ::SearchZBorder::chanel& BasicResultItem::va() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.BasicResultItem.Va)
  return va_ != NULL ? *va_
                         : *::SearchZBorder::chanel::internal_default_instance();
}
inline ::SearchZBorder::chanel* BasicResultItem::mutable_va() {
  
  if (va_ == NULL) {
    va_ = new ::SearchZBorder::chanel;
  }
  // @@protoc_insertion_point(field_mutable:SearchZBorder.BasicResultItem.Va)
  return va_;
}
inline ::SearchZBorder::chanel* BasicResultItem::release_va() {
  // @@protoc_insertion_point(field_release:SearchZBorder.BasicResultItem.Va)
  
  ::SearchZBorder::chanel* temp = va_;
  va_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_va(::SearchZBorder::chanel* va) {
  delete va_;
  va_ = va;
  if (va) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SearchZBorder.BasicResultItem.Va)
}

// .SearchZBorder.chanel Vb = 2;
inline bool BasicResultItem::has_vb() const {
  return this != internal_default_instance() && vb_ != NULL;
}
inline void BasicResultItem::clear_vb() {
  if (GetArenaNoVirtual() == NULL && vb_ != NULL) delete vb_;
  vb_ = NULL;
}
inline const ::SearchZBorder::chanel& BasicResultItem::vb() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.BasicResultItem.Vb)
  return vb_ != NULL ? *vb_
                         : *::SearchZBorder::chanel::internal_default_instance();
}
inline ::SearchZBorder::chanel* BasicResultItem::mutable_vb() {
  
  if (vb_ == NULL) {
    vb_ = new ::SearchZBorder::chanel;
  }
  // @@protoc_insertion_point(field_mutable:SearchZBorder.BasicResultItem.Vb)
  return vb_;
}
inline ::SearchZBorder::chanel* BasicResultItem::release_vb() {
  // @@protoc_insertion_point(field_release:SearchZBorder.BasicResultItem.Vb)
  
  ::SearchZBorder::chanel* temp = vb_;
  vb_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_vb(::SearchZBorder::chanel* vb) {
  delete vb_;
  vb_ = vb;
  if (vb) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SearchZBorder.BasicResultItem.Vb)
}

// .SearchZBorder.chanel Vc = 3;
inline bool BasicResultItem::has_vc() const {
  return this != internal_default_instance() && vc_ != NULL;
}
inline void BasicResultItem::clear_vc() {
  if (GetArenaNoVirtual() == NULL && vc_ != NULL) delete vc_;
  vc_ = NULL;
}
inline const ::SearchZBorder::chanel& BasicResultItem::vc() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.BasicResultItem.Vc)
  return vc_ != NULL ? *vc_
                         : *::SearchZBorder::chanel::internal_default_instance();
}
inline ::SearchZBorder::chanel* BasicResultItem::mutable_vc() {
  
  if (vc_ == NULL) {
    vc_ = new ::SearchZBorder::chanel;
  }
  // @@protoc_insertion_point(field_mutable:SearchZBorder.BasicResultItem.Vc)
  return vc_;
}
inline ::SearchZBorder::chanel* BasicResultItem::release_vc() {
  // @@protoc_insertion_point(field_release:SearchZBorder.BasicResultItem.Vc)
  
  ::SearchZBorder::chanel* temp = vc_;
  vc_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_vc(::SearchZBorder::chanel* vc) {
  delete vc_;
  vc_ = vc;
  if (vc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SearchZBorder.BasicResultItem.Vc)
}

// .SearchZBorder.chanel Ia = 4;
inline bool BasicResultItem::has_ia() const {
  return this != internal_default_instance() && ia_ != NULL;
}
inline void BasicResultItem::clear_ia() {
  if (GetArenaNoVirtual() == NULL && ia_ != NULL) delete ia_;
  ia_ = NULL;
}
inline const ::SearchZBorder::chanel& BasicResultItem::ia() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.BasicResultItem.Ia)
  return ia_ != NULL ? *ia_
                         : *::SearchZBorder::chanel::internal_default_instance();
}
inline ::SearchZBorder::chanel* BasicResultItem::mutable_ia() {
  
  if (ia_ == NULL) {
    ia_ = new ::SearchZBorder::chanel;
  }
  // @@protoc_insertion_point(field_mutable:SearchZBorder.BasicResultItem.Ia)
  return ia_;
}
inline ::SearchZBorder::chanel* BasicResultItem::release_ia() {
  // @@protoc_insertion_point(field_release:SearchZBorder.BasicResultItem.Ia)
  
  ::SearchZBorder::chanel* temp = ia_;
  ia_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_ia(::SearchZBorder::chanel* ia) {
  delete ia_;
  ia_ = ia;
  if (ia) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SearchZBorder.BasicResultItem.Ia)
}

// .SearchZBorder.chanel Ib = 5;
inline bool BasicResultItem::has_ib() const {
  return this != internal_default_instance() && ib_ != NULL;
}
inline void BasicResultItem::clear_ib() {
  if (GetArenaNoVirtual() == NULL && ib_ != NULL) delete ib_;
  ib_ = NULL;
}
inline const ::SearchZBorder::chanel& BasicResultItem::ib() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.BasicResultItem.Ib)
  return ib_ != NULL ? *ib_
                         : *::SearchZBorder::chanel::internal_default_instance();
}
inline ::SearchZBorder::chanel* BasicResultItem::mutable_ib() {
  
  if (ib_ == NULL) {
    ib_ = new ::SearchZBorder::chanel;
  }
  // @@protoc_insertion_point(field_mutable:SearchZBorder.BasicResultItem.Ib)
  return ib_;
}
inline ::SearchZBorder::chanel* BasicResultItem::release_ib() {
  // @@protoc_insertion_point(field_release:SearchZBorder.BasicResultItem.Ib)
  
  ::SearchZBorder::chanel* temp = ib_;
  ib_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_ib(::SearchZBorder::chanel* ib) {
  delete ib_;
  ib_ = ib;
  if (ib) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SearchZBorder.BasicResultItem.Ib)
}

// .SearchZBorder.chanel Ic = 6;
inline bool BasicResultItem::has_ic() const {
  return this != internal_default_instance() && ic_ != NULL;
}
inline void BasicResultItem::clear_ic() {
  if (GetArenaNoVirtual() == NULL && ic_ != NULL) delete ic_;
  ic_ = NULL;
}
inline const ::SearchZBorder::chanel& BasicResultItem::ic() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.BasicResultItem.Ic)
  return ic_ != NULL ? *ic_
                         : *::SearchZBorder::chanel::internal_default_instance();
}
inline ::SearchZBorder::chanel* BasicResultItem::mutable_ic() {
  
  if (ic_ == NULL) {
    ic_ = new ::SearchZBorder::chanel;
  }
  // @@protoc_insertion_point(field_mutable:SearchZBorder.BasicResultItem.Ic)
  return ic_;
}
inline ::SearchZBorder::chanel* BasicResultItem::release_ic() {
  // @@protoc_insertion_point(field_release:SearchZBorder.BasicResultItem.Ic)
  
  ::SearchZBorder::chanel* temp = ic_;
  ic_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_ic(::SearchZBorder::chanel* ic) {
  delete ic_;
  ic_ = ic;
  if (ic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SearchZBorder.BasicResultItem.Ic)
}

// -------------------------------------------------------------------

// TestItem_SearchZBorder

// uint32 iIndex = 1;
inline void TestItem_SearchZBorder::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_SearchZBorder::iindex() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.iIndex)
  return iindex_;
}
inline void TestItem_SearchZBorder::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.iIndex)
}

// .SearchZBorder.Error_type errortype = 2;
inline void TestItem_SearchZBorder::clear_errortype() {
  errortype_ = 0;
}
inline ::SearchZBorder::Error_type TestItem_SearchZBorder::errortype() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.errortype)
  return static_cast< ::SearchZBorder::Error_type >(errortype_);
}
inline void TestItem_SearchZBorder::set_errortype(::SearchZBorder::Error_type value) {
  
  errortype_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.errortype)
}

// float fEnd_Z = 3;
inline void TestItem_SearchZBorder::clear_fend_z() {
  fend_z_ = 0;
}
inline float TestItem_SearchZBorder::fend_z() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.fEnd_Z)
  return fend_z_;
}
inline void TestItem_SearchZBorder::set_fend_z(float value) {
  
  fend_z_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.fEnd_Z)
}

// float fEnd_ZAngle = 4;
inline void TestItem_SearchZBorder::clear_fend_zangle() {
  fend_zangle_ = 0;
}
inline float TestItem_SearchZBorder::fend_zangle() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.fEnd_ZAngle)
  return fend_zangle_;
}
inline void TestItem_SearchZBorder::set_fend_zangle(float value) {
  
  fend_zangle_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.fEnd_ZAngle)
}

// float fHead_Z = 5;
inline void TestItem_SearchZBorder::clear_fhead_z() {
  fhead_z_ = 0;
}
inline float TestItem_SearchZBorder::fhead_z() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.fHead_Z)
  return fhead_z_;
}
inline void TestItem_SearchZBorder::set_fhead_z(float value) {
  
  fhead_z_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.fHead_Z)
}

// float fHead_ZAngle = 6;
inline void TestItem_SearchZBorder::clear_fhead_zangle() {
  fhead_zangle_ = 0;
}
inline float TestItem_SearchZBorder::fhead_zangle() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.fHead_ZAngle)
  return fhead_zangle_;
}
inline void TestItem_SearchZBorder::set_fhead_zangle(float value) {
  
  fhead_zangle_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.fHead_ZAngle)
}

// float fZ_Step = 7;
inline void TestItem_SearchZBorder::clear_fz_step() {
  fz_step_ = 0;
}
inline float TestItem_SearchZBorder::fz_step() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.fZ_Step)
  return fz_step_;
}
inline void TestItem_SearchZBorder::set_fz_step(float value) {
  
  fz_step_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.fZ_Step)
}

// float fDL_I = 8;
inline void TestItem_SearchZBorder::clear_fdl_i() {
  fdl_i_ = 0;
}
inline float TestItem_SearchZBorder::fdl_i() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.fDL_I)
  return fdl_i_;
}
inline void TestItem_SearchZBorder::set_fdl_i(float value) {
  
  fdl_i_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.fDL_I)
}

// float fDL_V = 9;
inline void TestItem_SearchZBorder::clear_fdl_v() {
  fdl_v_ = 0;
}
inline float TestItem_SearchZBorder::fdl_v() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.fDL_V)
  return fdl_v_;
}
inline void TestItem_SearchZBorder::set_fdl_v(float value) {
  
  fdl_v_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.fDL_V)
}

// float fMaxErrorTime = 10;
inline void TestItem_SearchZBorder::clear_fmaxerrortime() {
  fmaxerrortime_ = 0;
}
inline float TestItem_SearchZBorder::fmaxerrortime() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.fMaxErrorTime)
  return fmaxerrortime_;
}
inline void TestItem_SearchZBorder::set_fmaxerrortime(float value) {
  
  fmaxerrortime_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.fMaxErrorTime)
}

// float fLoadCurrent = 11;
inline void TestItem_SearchZBorder::clear_floadcurrent() {
  floadcurrent_ = 0;
}
inline float TestItem_SearchZBorder::floadcurrent() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.fLoadCurrent)
  return floadcurrent_;
}
inline void TestItem_SearchZBorder::set_floadcurrent(float value) {
  
  floadcurrent_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.fLoadCurrent)
}

// float fLoadAngle = 12;
inline void TestItem_SearchZBorder::clear_floadangle() {
  floadangle_ = 0;
}
inline float TestItem_SearchZBorder::floadangle() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder.fLoadAngle)
  return floadangle_;
}
inline void TestItem_SearchZBorder::set_floadangle(float value) {
  
  floadangle_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder.fLoadAngle)
}

// -------------------------------------------------------------------

// TestItem_SearchZBorder_Result

// uint32 iIndex = 1;
inline void TestItem_SearchZBorder_Result::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_SearchZBorder_Result::iindex() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder_Result.iIndex)
  return iindex_;
}
inline void TestItem_SearchZBorder_Result::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder_Result.iIndex)
}

// .SearchZBorder.BasicResultItem basic = 2;
inline bool TestItem_SearchZBorder_Result::has_basic() const {
  return this != internal_default_instance() && basic_ != NULL;
}
inline void TestItem_SearchZBorder_Result::clear_basic() {
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) delete basic_;
  basic_ = NULL;
}
inline const ::SearchZBorder::BasicResultItem& TestItem_SearchZBorder_Result::basic() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder_Result.basic)
  return basic_ != NULL ? *basic_
                         : *::SearchZBorder::BasicResultItem::internal_default_instance();
}
inline ::SearchZBorder::BasicResultItem* TestItem_SearchZBorder_Result::mutable_basic() {
  
  if (basic_ == NULL) {
    basic_ = new ::SearchZBorder::BasicResultItem;
  }
  // @@protoc_insertion_point(field_mutable:SearchZBorder.TestItem_SearchZBorder_Result.basic)
  return basic_;
}
inline ::SearchZBorder::BasicResultItem* TestItem_SearchZBorder_Result::release_basic() {
  // @@protoc_insertion_point(field_release:SearchZBorder.TestItem_SearchZBorder_Result.basic)
  
  ::SearchZBorder::BasicResultItem* temp = basic_;
  basic_ = NULL;
  return temp;
}
inline void TestItem_SearchZBorder_Result::set_allocated_basic(::SearchZBorder::BasicResultItem* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SearchZBorder.TestItem_SearchZBorder_Result.basic)
}

// float fZ = 3;
inline void TestItem_SearchZBorder_Result::clear_fz() {
  fz_ = 0;
}
inline float TestItem_SearchZBorder_Result::fz() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder_Result.fZ)
  return fz_;
}
inline void TestItem_SearchZBorder_Result::set_fz(float value) {
  
  fz_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder_Result.fZ)
}

// float fZAngle = 4;
inline void TestItem_SearchZBorder_Result::clear_fzangle() {
  fzangle_ = 0;
}
inline float TestItem_SearchZBorder_Result::fzangle() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder_Result.fZAngle)
  return fzangle_;
}
inline void TestItem_SearchZBorder_Result::set_fzangle(float value) {
  
  fzangle_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder_Result.fZAngle)
}

// float fTime = 5;
inline void TestItem_SearchZBorder_Result::clear_ftime() {
  ftime_ = 0;
}
inline float TestItem_SearchZBorder_Result::ftime() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder_Result.fTime)
  return ftime_;
}
inline void TestItem_SearchZBorder_Result::set_ftime(float value) {
  
  ftime_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder_Result.fTime)
}

// bool bEnd = 6;
inline void TestItem_SearchZBorder_Result::clear_bend() {
  bend_ = false;
}
inline bool TestItem_SearchZBorder_Result::bend() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder_Result.bEnd)
  return bend_;
}
inline void TestItem_SearchZBorder_Result::set_bend(bool value) {
  
  bend_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder_Result.bEnd)
}

// uint32 nibinstate = 7;
inline void TestItem_SearchZBorder_Result::clear_nibinstate() {
  nibinstate_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_SearchZBorder_Result::nibinstate() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TestItem_SearchZBorder_Result.nibinstate)
  return nibinstate_;
}
inline void TestItem_SearchZBorder_Result::set_nibinstate(::google::protobuf::uint32 value) {
  
  nibinstate_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TestItem_SearchZBorder_Result.nibinstate)
}

// -------------------------------------------------------------------

// Items

// .SearchZBorder.CommonPara oComm = 1;
inline bool Items::has_ocomm() const {
  return this != internal_default_instance() && ocomm_ != NULL;
}
inline void Items::clear_ocomm() {
  if (GetArenaNoVirtual() == NULL && ocomm_ != NULL) delete ocomm_;
  ocomm_ = NULL;
}
inline const ::SearchZBorder::CommonPara& Items::ocomm() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.Items.oComm)
  return ocomm_ != NULL ? *ocomm_
                         : *::SearchZBorder::CommonPara::internal_default_instance();
}
inline ::SearchZBorder::CommonPara* Items::mutable_ocomm() {
  
  if (ocomm_ == NULL) {
    ocomm_ = new ::SearchZBorder::CommonPara;
  }
  // @@protoc_insertion_point(field_mutable:SearchZBorder.Items.oComm)
  return ocomm_;
}
inline ::SearchZBorder::CommonPara* Items::release_ocomm() {
  // @@protoc_insertion_point(field_release:SearchZBorder.Items.oComm)
  
  ::SearchZBorder::CommonPara* temp = ocomm_;
  ocomm_ = NULL;
  return temp;
}
inline void Items::set_allocated_ocomm(::SearchZBorder::CommonPara* ocomm) {
  delete ocomm_;
  ocomm_ = ocomm;
  if (ocomm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SearchZBorder.Items.oComm)
}

// .SearchZBorder.SwitchPara oSwitch = 2;
inline bool Items::has_oswitch() const {
  return this != internal_default_instance() && oswitch_ != NULL;
}
inline void Items::clear_oswitch() {
  if (GetArenaNoVirtual() == NULL && oswitch_ != NULL) delete oswitch_;
  oswitch_ = NULL;
}
inline const ::SearchZBorder::SwitchPara& Items::oswitch() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.Items.oSwitch)
  return oswitch_ != NULL ? *oswitch_
                         : *::SearchZBorder::SwitchPara::internal_default_instance();
}
inline ::SearchZBorder::SwitchPara* Items::mutable_oswitch() {
  
  if (oswitch_ == NULL) {
    oswitch_ = new ::SearchZBorder::SwitchPara;
  }
  // @@protoc_insertion_point(field_mutable:SearchZBorder.Items.oSwitch)
  return oswitch_;
}
inline ::SearchZBorder::SwitchPara* Items::release_oswitch() {
  // @@protoc_insertion_point(field_release:SearchZBorder.Items.oSwitch)
  
  ::SearchZBorder::SwitchPara* temp = oswitch_;
  oswitch_ = NULL;
  return temp;
}
inline void Items::set_allocated_oswitch(::SearchZBorder::SwitchPara* oswitch) {
  delete oswitch_;
  oswitch_ = oswitch;
  if (oswitch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SearchZBorder.Items.oSwitch)
}

// repeated .SearchZBorder.TestItem_SearchZBorder oItems = 3;
inline int Items::oitems_size() const {
  return oitems_.size();
}
inline void Items::clear_oitems() {
  oitems_.Clear();
}
inline const ::SearchZBorder::TestItem_SearchZBorder& Items::oitems(int index) const {
  // @@protoc_insertion_point(field_get:SearchZBorder.Items.oItems)
  return oitems_.Get(index);
}
inline ::SearchZBorder::TestItem_SearchZBorder* Items::mutable_oitems(int index) {
  // @@protoc_insertion_point(field_mutable:SearchZBorder.Items.oItems)
  return oitems_.Mutable(index);
}
inline ::SearchZBorder::TestItem_SearchZBorder* Items::add_oitems() {
  // @@protoc_insertion_point(field_add:SearchZBorder.Items.oItems)
  return oitems_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SearchZBorder::TestItem_SearchZBorder >*
Items::mutable_oitems() {
  // @@protoc_insertion_point(field_mutable_list:SearchZBorder.Items.oItems)
  return &oitems_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SearchZBorder::TestItem_SearchZBorder >&
Items::oitems() const {
  // @@protoc_insertion_point(field_list:SearchZBorder.Items.oItems)
  return oitems_;
}

// -------------------------------------------------------------------

// CommonPara

// float EDV = 1;
inline void CommonPara::clear_edv() {
  edv_ = 0;
}
inline float CommonPara::edv() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.EDV)
  return edv_;
}
inline void CommonPara::set_edv(float value) {
  
  edv_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.EDV)
}

// float EDI = 2;
inline void CommonPara::clear_edi() {
  edi_ = 0;
}
inline float CommonPara::edi() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.EDI)
  return edi_;
}
inline void CommonPara::set_edi(float value) {
  
  edi_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.EDI)
}

// float EDHZ = 3;
inline void CommonPara::clear_edhz() {
  edhz_ = 0;
}
inline float CommonPara::edhz() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.EDHZ)
  return edhz_;
}
inline void CommonPara::set_edhz(float value) {
  
  edhz_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.EDHZ)
}

// float PrepareTime = 4;
inline void CommonPara::clear_preparetime() {
  preparetime_ = 0;
}
inline float CommonPara::preparetime() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.PrepareTime)
  return preparetime_;
}
inline void CommonPara::set_preparetime(float value) {
  
  preparetime_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.PrepareTime)
}

// float PreFaultTime = 5;
inline void CommonPara::clear_prefaulttime() {
  prefaulttime_ = 0;
}
inline float CommonPara::prefaulttime() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.PreFaultTime)
  return prefaulttime_;
}
inline void CommonPara::set_prefaulttime(float value) {
  
  prefaulttime_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.PreFaultTime)
}

// float PostFaultTime = 6;
inline void CommonPara::clear_postfaulttime() {
  postfaulttime_ = 0;
}
inline float CommonPara::postfaulttime() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.PostFaultTime)
  return postfaulttime_;
}
inline void CommonPara::set_postfaulttime(float value) {
  
  postfaulttime_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.PostFaultTime)
}

// .SearchZBorder.PTCON ePTCON = 7;
inline void CommonPara::clear_eptcon() {
  eptcon_ = 0;
}
inline ::SearchZBorder::PTCON CommonPara::eptcon() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.ePTCON)
  return static_cast< ::SearchZBorder::PTCON >(eptcon_);
}
inline void CommonPara::set_eptcon(::SearchZBorder::PTCON value) {
  
  eptcon_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.ePTCON)
}

// .SearchZBorder.CTPOINT eCTPOINT = 8;
inline void CommonPara::clear_ectpoint() {
  ectpoint_ = 0;
}
inline ::SearchZBorder::CTPOINT CommonPara::ectpoint() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.eCTPOINT)
  return static_cast< ::SearchZBorder::CTPOINT >(ectpoint_);
}
inline void CommonPara::set_ectpoint(::SearchZBorder::CTPOINT value) {
  
  ectpoint_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.eCTPOINT)
}

// .SearchZBorder.BCSIMULATION eBCSIMULATION = 9;
inline void CommonPara::clear_ebcsimulation() {
  ebcsimulation_ = 0;
}
inline ::SearchZBorder::BCSIMULATION CommonPara::ebcsimulation() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.eBCSIMULATION)
  return static_cast< ::SearchZBorder::BCSIMULATION >(ebcsimulation_);
}
inline void CommonPara::set_ebcsimulation(::SearchZBorder::BCSIMULATION value) {
  
  ebcsimulation_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.eBCSIMULATION)
}

// float TripTime = 10;
inline void CommonPara::clear_triptime() {
  triptime_ = 0;
}
inline float CommonPara::triptime() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.TripTime)
  return triptime_;
}
inline void CommonPara::set_triptime(float value) {
  
  triptime_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.TripTime)
}

// float CloseTime = 11;
inline void CommonPara::clear_closetime() {
  closetime_ = 0;
}
inline float CommonPara::closetime() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.CloseTime)
  return closetime_;
}
inline void CommonPara::set_closetime(float value) {
  
  closetime_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.CloseTime)
}

// .SearchZBorder.FaultIncMode eFaultIncMode = 12;
inline void CommonPara::clear_efaultincmode() {
  efaultincmode_ = 0;
}
inline ::SearchZBorder::FaultIncMode CommonPara::efaultincmode() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.eFaultIncMode)
  return static_cast< ::SearchZBorder::FaultIncMode >(efaultincmode_);
}
inline void CommonPara::set_efaultincmode(::SearchZBorder::FaultIncMode value) {
  
  efaultincmode_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.eFaultIncMode)
}

// float FaultAngle = 13;
inline void CommonPara::clear_faultangle() {
  faultangle_ = 0;
}
inline float CommonPara::faultangle() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.FaultAngle)
  return faultangle_;
}
inline void CommonPara::set_faultangle(float value) {
  
  faultangle_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.FaultAngle)
}

// .SearchZBorder.DCSIM eDCSIM = 14;
inline void CommonPara::clear_edcsim() {
  edcsim_ = 0;
}
inline ::SearchZBorder::DCSIM CommonPara::edcsim() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.eDCSIM)
  return static_cast< ::SearchZBorder::DCSIM >(edcsim_);
}
inline void CommonPara::set_edcsim(::SearchZBorder::DCSIM value) {
  
  edcsim_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.eDCSIM)
}

// .SearchZBorder.TestMode eTestMode = 15;
inline void CommonPara::clear_etestmode() {
  etestmode_ = 0;
}
inline ::SearchZBorder::TestMode CommonPara::etestmode() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.eTestMode)
  return static_cast< ::SearchZBorder::TestMode >(etestmode_);
}
inline void CommonPara::set_etestmode(::SearchZBorder::TestMode value) {
  
  etestmode_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.eTestMode)
}

// float Zs = 16;
inline void CommonPara::clear_zs() {
  zs_ = 0;
}
inline float CommonPara::zs() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.Zs)
  return zs_;
}
inline void CommonPara::set_zs(float value) {
  
  zs_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.Zs)
}

// float Phis = 17;
inline void CommonPara::clear_phis() {
  phis_ = 0;
}
inline float CommonPara::phis() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.Phis)
  return phis_;
}
inline void CommonPara::set_phis(float value) {
  
  phis_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.Phis)
}

// float KOA = 18;
inline void CommonPara::clear_koa() {
  koa_ = 0;
}
inline float CommonPara::koa() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.KOA)
  return koa_;
}
inline void CommonPara::set_koa(float value) {
  
  koa_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.KOA)
}

// float KOB = 19;
inline void CommonPara::clear_kob() {
  kob_ = 0;
}
inline float CommonPara::kob() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.KOB)
  return kob_;
}
inline void CommonPara::set_kob(float value) {
  
  kob_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.KOB)
}

// .SearchZBorder.KoMode eKoMode = 20;
inline void CommonPara::clear_ekomode() {
  ekomode_ = 0;
}
inline ::SearchZBorder::KoMode CommonPara::ekomode() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.eKoMode)
  return static_cast< ::SearchZBorder::KoMode >(ekomode_);
}
inline void CommonPara::set_ekomode(::SearchZBorder::KoMode value) {
  
  ekomode_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.eKoMode)
}

// .SearchZBorder.Search_Type eSearchType = 21;
inline void CommonPara::clear_esearchtype() {
  esearchtype_ = 0;
}
inline ::SearchZBorder::Search_Type CommonPara::esearchtype() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.eSearchType)
  return static_cast< ::SearchZBorder::Search_Type >(esearchtype_);
}
inline void CommonPara::set_esearchtype(::SearchZBorder::Search_Type value) {
  
  esearchtype_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.eSearchType)
}

// .SearchZBorder.VZDEFINE eVZDEFINE = 22;
inline void CommonPara::clear_evzdefine() {
  evzdefine_ = 0;
}
inline ::SearchZBorder::VZDEFINE CommonPara::evzdefine() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.eVZDEFINE)
  return static_cast< ::SearchZBorder::VZDEFINE >(evzdefine_);
}
inline void CommonPara::set_evzdefine(::SearchZBorder::VZDEFINE value) {
  
  evzdefine_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.eVZDEFINE)
}

// .SearchZBorder.VZPHDEFINE eVZPHDEFINE = 23;
inline void CommonPara::clear_evzphdefine() {
  evzphdefine_ = 0;
}
inline ::SearchZBorder::VZPHDEFINE CommonPara::evzphdefine() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.eVZPHDEFINE)
  return static_cast< ::SearchZBorder::VZPHDEFINE >(evzphdefine_);
}
inline void CommonPara::set_evzphdefine(::SearchZBorder::VZPHDEFINE value) {
  
  evzphdefine_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.eVZPHDEFINE)
}

// float VzPhdiff = 24;
inline void CommonPara::clear_vzphdiff() {
  vzphdiff_ = 0;
}
inline float CommonPara::vzphdiff() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.VzPhdiff)
  return vzphdiff_;
}
inline void CommonPara::set_vzphdiff(float value) {
  
  vzphdiff_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.VzPhdiff)
}

// float KOAs = 25;
inline void CommonPara::clear_koas() {
  koas_ = 0;
}
inline float CommonPara::koas() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.KOAs)
  return koas_;
}
inline void CommonPara::set_koas(float value) {
  
  koas_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.KOAs)
}

// float KOBs = 26;
inline void CommonPara::clear_kobs() {
  kobs_ = 0;
}
inline float CommonPara::kobs() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.CommonPara.KOBs)
  return kobs_;
}
inline void CommonPara::set_kobs(float value) {
  
  kobs_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.CommonPara.KOBs)
}

// -------------------------------------------------------------------

// TRIPMAP

// uint32 IK = 1;
inline void TRIPMAP::clear_ik() {
  ik_ = 0u;
}
inline ::google::protobuf::uint32 TRIPMAP::ik() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TRIPMAP.IK)
  return ik_;
}
inline void TRIPMAP::set_ik(::google::protobuf::uint32 value) {
  
  ik_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TRIPMAP.IK)
}

// uint32 TripABC = 2;
inline void TRIPMAP::clear_tripabc() {
  tripabc_ = 0u;
}
inline ::google::protobuf::uint32 TRIPMAP::tripabc() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.TRIPMAP.TripABC)
  return tripabc_;
}
inline void TRIPMAP::set_tripabc(::google::protobuf::uint32 value) {
  
  tripabc_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.TRIPMAP.TripABC)
}

// -------------------------------------------------------------------

// SwitchPara

// repeated .SearchZBorder.TRIPMAP iTripBuf = 1;
inline int SwitchPara::itripbuf_size() const {
  return itripbuf_.size();
}
inline void SwitchPara::clear_itripbuf() {
  itripbuf_.Clear();
}
inline const ::SearchZBorder::TRIPMAP& SwitchPara::itripbuf(int index) const {
  // @@protoc_insertion_point(field_get:SearchZBorder.SwitchPara.iTripBuf)
  return itripbuf_.Get(index);
}
inline ::SearchZBorder::TRIPMAP* SwitchPara::mutable_itripbuf(int index) {
  // @@protoc_insertion_point(field_mutable:SearchZBorder.SwitchPara.iTripBuf)
  return itripbuf_.Mutable(index);
}
inline ::SearchZBorder::TRIPMAP* SwitchPara::add_itripbuf() {
  // @@protoc_insertion_point(field_add:SearchZBorder.SwitchPara.iTripBuf)
  return itripbuf_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SearchZBorder::TRIPMAP >*
SwitchPara::mutable_itripbuf() {
  // @@protoc_insertion_point(field_mutable_list:SearchZBorder.SwitchPara.iTripBuf)
  return &itripbuf_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SearchZBorder::TRIPMAP >&
SwitchPara::itripbuf() const {
  // @@protoc_insertion_point(field_list:SearchZBorder.SwitchPara.iTripBuf)
  return itripbuf_;
}

// repeated uint32 iKOutput = 2;
inline int SwitchPara::ikoutput_size() const {
  return ikoutput_.size();
}
inline void SwitchPara::clear_ikoutput() {
  ikoutput_.Clear();
}
inline ::google::protobuf::uint32 SwitchPara::ikoutput(int index) const {
  // @@protoc_insertion_point(field_get:SearchZBorder.SwitchPara.iKOutput)
  return ikoutput_.Get(index);
}
inline void SwitchPara::set_ikoutput(int index, ::google::protobuf::uint32 value) {
  ikoutput_.Set(index, value);
  // @@protoc_insertion_point(field_set:SearchZBorder.SwitchPara.iKOutput)
}
inline void SwitchPara::add_ikoutput(::google::protobuf::uint32 value) {
  ikoutput_.Add(value);
  // @@protoc_insertion_point(field_add:SearchZBorder.SwitchPara.iKOutput)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SwitchPara::ikoutput() const {
  // @@protoc_insertion_point(field_list:SearchZBorder.SwitchPara.iKOutput)
  return ikoutput_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SwitchPara::mutable_ikoutput() {
  // @@protoc_insertion_point(field_mutable_list:SearchZBorder.SwitchPara.iKOutput)
  return &ikoutput_;
}

// uint32 iOutMode = 3;
inline void SwitchPara::clear_ioutmode() {
  ioutmode_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ioutmode() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.SwitchPara.iOutMode)
  return ioutmode_;
}
inline void SwitchPara::set_ioutmode(::google::protobuf::uint32 value) {
  
  ioutmode_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.SwitchPara.iOutMode)
}

// float fTurnTime = 4;
inline void SwitchPara::clear_fturntime() {
  fturntime_ = 0;
}
inline float SwitchPara::fturntime() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.SwitchPara.fTurnTime)
  return fturntime_;
}
inline void SwitchPara::set_fturntime(float value) {
  
  fturntime_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.SwitchPara.fTurnTime)
}

// float fHoldTime = 5;
inline void SwitchPara::clear_fholdtime() {
  fholdtime_ = 0;
}
inline float SwitchPara::fholdtime() const {
  // @@protoc_insertion_point(field_get:SearchZBorder.SwitchPara.fHoldTime)
  return fholdtime_;
}
inline void SwitchPara::set_fholdtime(float value) {
  
  fholdtime_ = value;
  // @@protoc_insertion_point(field_set:SearchZBorder.SwitchPara.fHoldTime)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace SearchZBorder

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SearchZBorder::Error_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SearchZBorder::Error_type>() {
  return ::SearchZBorder::Error_type_descriptor();
}
template <> struct is_proto_enum< ::SearchZBorder::PTCON> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SearchZBorder::PTCON>() {
  return ::SearchZBorder::PTCON_descriptor();
}
template <> struct is_proto_enum< ::SearchZBorder::CTPOINT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SearchZBorder::CTPOINT>() {
  return ::SearchZBorder::CTPOINT_descriptor();
}
template <> struct is_proto_enum< ::SearchZBorder::BCSIMULATION> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SearchZBorder::BCSIMULATION>() {
  return ::SearchZBorder::BCSIMULATION_descriptor();
}
template <> struct is_proto_enum< ::SearchZBorder::FaultIncMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SearchZBorder::FaultIncMode>() {
  return ::SearchZBorder::FaultIncMode_descriptor();
}
template <> struct is_proto_enum< ::SearchZBorder::DCSIM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SearchZBorder::DCSIM>() {
  return ::SearchZBorder::DCSIM_descriptor();
}
template <> struct is_proto_enum< ::SearchZBorder::TestMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SearchZBorder::TestMode>() {
  return ::SearchZBorder::TestMode_descriptor();
}
template <> struct is_proto_enum< ::SearchZBorder::KoMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SearchZBorder::KoMode>() {
  return ::SearchZBorder::KoMode_descriptor();
}
template <> struct is_proto_enum< ::SearchZBorder::VZDEFINE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SearchZBorder::VZDEFINE>() {
  return ::SearchZBorder::VZDEFINE_descriptor();
}
template <> struct is_proto_enum< ::SearchZBorder::VZPHDEFINE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SearchZBorder::VZPHDEFINE>() {
  return ::SearchZBorder::VZPHDEFINE_descriptor();
}
template <> struct is_proto_enum< ::SearchZBorder::Search_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SearchZBorder::Search_Type>() {
  return ::SearchZBorder::Search_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SearchZBorder_2eproto__INCLUDED
