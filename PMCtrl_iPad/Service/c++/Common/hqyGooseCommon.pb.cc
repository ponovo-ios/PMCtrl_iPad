// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hqyGooseCommon.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hqyGooseCommon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace hqyGooseCommon {
class UtcTimeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UtcTime> {
} _UtcTime_default_instance_;
class DataAtomDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DataAtom> {
} _DataAtom_default_instance_;
class Channel_InfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Channel_Info> {
} _Channel_Info_default_instance_;

namespace protobuf_hqyGooseCommon_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtcTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtcTime, year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtcTime, month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtcTime, day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtcTime, hour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtcTime, minute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtcTime, second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UtcTime, millisecond_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, mapchannel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, vuint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, vint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, vfloat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, vdouble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, vtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, vstring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataAtom, vstru_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel_Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel_Info, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Channel_Info, data_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(UtcTime)},
  { 11, -1, sizeof(DataAtom)},
  { 26, -1, sizeof(Channel_Info)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UtcTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DataAtom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Channel_Info_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "hqyGooseCommon.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _UtcTime_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _DataAtom_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Channel_Info_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UtcTime_default_instance_.DefaultConstruct();
  _DataAtom_default_instance_.DefaultConstruct();
  _Channel_Info_default_instance_.DefaultConstruct();
  _DataAtom_default_instance_.get_mutable()->vtime_ = const_cast< ::hqyGooseCommon::UtcTime*>(
      ::hqyGooseCommon::UtcTime::internal_default_instance());
  _Channel_Info_default_instance_.get_mutable()->data_ = const_cast< ::hqyGooseCommon::DataAtom*>(
      ::hqyGooseCommon::DataAtom::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\024hqyGooseCommon.proto\022\016hqyGooseCommon\"v"
      "\n\007UtcTime\022\014\n\004year\030\001 \001(\005\022\r\n\005month\030\002 \001(\005\022\013"
      "\n\003day\030\003 \001(\005\022\014\n\004hour\030\004 \001(\005\022\016\n\006minute\030\005 \001("
      "\005\022\016\n\006second\030\006 \001(\005\022\023\n\013millisecond\030\007 \001(\005\"\202"
      "\002\n\010DataAtom\022&\n\004type\030\001 \001(\0162\030.hqyGooseComm"
      "on.DataType\022\014\n\004Name\030\002 \001(\t\022\022\n\nMapChannel\030"
      "\003 \001(\t\022\014\n\004bits\030\004 \001(\005\022\r\n\005vUInt\030\005 \001(\r\022\014\n\004vI"
      "nt\030\006 \001(\005\022\016\n\006vFloat\030\007 \001(\002\022\017\n\007vDouble\030\010 \001("
      "\001\022&\n\005vTime\030\t \001(\0132\027.hqyGooseCommon.UtcTim"
      "e\022\017\n\007vString\030\n \001(\t\022\'\n\005vStru\030\013 \003(\0132\030.hqyG"
      "ooseCommon.DataAtom\"D\n\014Channel_Info\022\014\n\004N"
      "ame\030\001 \001(\t\022&\n\004Data\030\002 \001(\0132\030.hqyGooseCommon"
      ".DataAtom*\346\001\n\010DataType\022\n\n\006T_BOOL\020\000\022\t\n\005T_"
      "SPS\020\001\022\t\n\005T_DPS\020\002\022\020\n\014T_BIT_STRING\020\003\022\016\n\nT_"
      "UTC_TIME\020\004\022\r\n\tT_QUALITY\020\005\022\r\n\tT_FLOAT32\020\006"
      "\022\r\n\tT_FLOAT64\020\007\022\n\n\006T_INT8\020\010\022\013\n\007T_INT16\020\t"
      "\022\013\n\007T_INT32\020\n\022\013\n\007T_UINT8\020\013\022\014\n\010T_UINT16\020\014"
      "\022\014\n\010T_UINT32\020\r\022\014\n\010T_STRUCT\020\016\022\014\n\010T_STRING"
      "\020\017b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 730);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hqyGooseCommon.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_hqyGooseCommon_2eproto

const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
  protobuf_hqyGooseCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyGooseCommon_2eproto::file_level_enum_descriptors[0];
}
bool DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UtcTime::kYearFieldNumber;
const int UtcTime::kMonthFieldNumber;
const int UtcTime::kDayFieldNumber;
const int UtcTime::kHourFieldNumber;
const int UtcTime::kMinuteFieldNumber;
const int UtcTime::kSecondFieldNumber;
const int UtcTime::kMillisecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UtcTime::UtcTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyGooseCommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyGooseCommon.UtcTime)
}
UtcTime::UtcTime(const UtcTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&year_, &from.year_,
    reinterpret_cast<char*>(&millisecond_) -
    reinterpret_cast<char*>(&year_) + sizeof(millisecond_));
  // @@protoc_insertion_point(copy_constructor:hqyGooseCommon.UtcTime)
}

void UtcTime::SharedCtor() {
  ::memset(&year_, 0, reinterpret_cast<char*>(&millisecond_) -
    reinterpret_cast<char*>(&year_) + sizeof(millisecond_));
  _cached_size_ = 0;
}

UtcTime::~UtcTime() {
  // @@protoc_insertion_point(destructor:hqyGooseCommon.UtcTime)
  SharedDtor();
}

void UtcTime::SharedDtor() {
}

void UtcTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UtcTime::descriptor() {
  protobuf_hqyGooseCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyGooseCommon_2eproto::file_level_metadata[0].descriptor;
}

const UtcTime& UtcTime::default_instance() {
  protobuf_hqyGooseCommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

UtcTime* UtcTime::New(::google::protobuf::Arena* arena) const {
  UtcTime* n = new UtcTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UtcTime::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyGooseCommon.UtcTime)
  ::memset(&year_, 0, reinterpret_cast<char*>(&millisecond_) -
    reinterpret_cast<char*>(&year_) + sizeof(millisecond_));
}

bool UtcTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyGooseCommon.UtcTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 year = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &year_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 month = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &month_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 day = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hour = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minute = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minute_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 second = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 millisecond = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &millisecond_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyGooseCommon.UtcTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyGooseCommon.UtcTime)
  return false;
#undef DO_
}

void UtcTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyGooseCommon.UtcTime)
  // int32 year = 1;
  if (this->year() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->year(), output);
  }

  // int32 month = 2;
  if (this->month() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->month(), output);
  }

  // int32 day = 3;
  if (this->day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->day(), output);
  }

  // int32 hour = 4;
  if (this->hour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hour(), output);
  }

  // int32 minute = 5;
  if (this->minute() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->minute(), output);
  }

  // int32 second = 6;
  if (this->second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->second(), output);
  }

  // int32 millisecond = 7;
  if (this->millisecond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->millisecond(), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyGooseCommon.UtcTime)
}

::google::protobuf::uint8* UtcTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyGooseCommon.UtcTime)
  // int32 year = 1;
  if (this->year() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->year(), target);
  }

  // int32 month = 2;
  if (this->month() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->month(), target);
  }

  // int32 day = 3;
  if (this->day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->day(), target);
  }

  // int32 hour = 4;
  if (this->hour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hour(), target);
  }

  // int32 minute = 5;
  if (this->minute() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->minute(), target);
  }

  // int32 second = 6;
  if (this->second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->second(), target);
  }

  // int32 millisecond = 7;
  if (this->millisecond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->millisecond(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyGooseCommon.UtcTime)
  return target;
}

size_t UtcTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyGooseCommon.UtcTime)
  size_t total_size = 0;

  // int32 year = 1;
  if (this->year() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->year());
  }

  // int32 month = 2;
  if (this->month() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->month());
  }

  // int32 day = 3;
  if (this->day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->day());
  }

  // int32 hour = 4;
  if (this->hour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hour());
  }

  // int32 minute = 5;
  if (this->minute() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minute());
  }

  // int32 second = 6;
  if (this->second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->second());
  }

  // int32 millisecond = 7;
  if (this->millisecond() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->millisecond());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UtcTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyGooseCommon.UtcTime)
  GOOGLE_DCHECK_NE(&from, this);
  const UtcTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UtcTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyGooseCommon.UtcTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyGooseCommon.UtcTime)
    MergeFrom(*source);
  }
}

void UtcTime::MergeFrom(const UtcTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyGooseCommon.UtcTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.year() != 0) {
    set_year(from.year());
  }
  if (from.month() != 0) {
    set_month(from.month());
  }
  if (from.day() != 0) {
    set_day(from.day());
  }
  if (from.hour() != 0) {
    set_hour(from.hour());
  }
  if (from.minute() != 0) {
    set_minute(from.minute());
  }
  if (from.second() != 0) {
    set_second(from.second());
  }
  if (from.millisecond() != 0) {
    set_millisecond(from.millisecond());
  }
}

void UtcTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyGooseCommon.UtcTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UtcTime::CopyFrom(const UtcTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyGooseCommon.UtcTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UtcTime::IsInitialized() const {
  return true;
}

void UtcTime::Swap(UtcTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UtcTime::InternalSwap(UtcTime* other) {
  std::swap(year_, other->year_);
  std::swap(month_, other->month_);
  std::swap(day_, other->day_);
  std::swap(hour_, other->hour_);
  std::swap(minute_, other->minute_);
  std::swap(second_, other->second_);
  std::swap(millisecond_, other->millisecond_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UtcTime::GetMetadata() const {
  protobuf_hqyGooseCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyGooseCommon_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UtcTime

// int32 year = 1;
void UtcTime::clear_year() {
  year_ = 0;
}
::google::protobuf::int32 UtcTime::year() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.year)
  return year_;
}
void UtcTime::set_year(::google::protobuf::int32 value) {
  
  year_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.year)
}

// int32 month = 2;
void UtcTime::clear_month() {
  month_ = 0;
}
::google::protobuf::int32 UtcTime::month() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.month)
  return month_;
}
void UtcTime::set_month(::google::protobuf::int32 value) {
  
  month_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.month)
}

// int32 day = 3;
void UtcTime::clear_day() {
  day_ = 0;
}
::google::protobuf::int32 UtcTime::day() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.day)
  return day_;
}
void UtcTime::set_day(::google::protobuf::int32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.day)
}

// int32 hour = 4;
void UtcTime::clear_hour() {
  hour_ = 0;
}
::google::protobuf::int32 UtcTime::hour() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.hour)
  return hour_;
}
void UtcTime::set_hour(::google::protobuf::int32 value) {
  
  hour_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.hour)
}

// int32 minute = 5;
void UtcTime::clear_minute() {
  minute_ = 0;
}
::google::protobuf::int32 UtcTime::minute() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.minute)
  return minute_;
}
void UtcTime::set_minute(::google::protobuf::int32 value) {
  
  minute_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.minute)
}

// int32 second = 6;
void UtcTime::clear_second() {
  second_ = 0;
}
::google::protobuf::int32 UtcTime::second() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.second)
  return second_;
}
void UtcTime::set_second(::google::protobuf::int32 value) {
  
  second_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.second)
}

// int32 millisecond = 7;
void UtcTime::clear_millisecond() {
  millisecond_ = 0;
}
::google::protobuf::int32 UtcTime::millisecond() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.millisecond)
  return millisecond_;
}
void UtcTime::set_millisecond(::google::protobuf::int32 value) {
  
  millisecond_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.millisecond)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataAtom::kTypeFieldNumber;
const int DataAtom::kNameFieldNumber;
const int DataAtom::kMapChannelFieldNumber;
const int DataAtom::kBitsFieldNumber;
const int DataAtom::kVUIntFieldNumber;
const int DataAtom::kVIntFieldNumber;
const int DataAtom::kVFloatFieldNumber;
const int DataAtom::kVDoubleFieldNumber;
const int DataAtom::kVTimeFieldNumber;
const int DataAtom::kVStringFieldNumber;
const int DataAtom::kVStruFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataAtom::DataAtom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyGooseCommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyGooseCommon.DataAtom)
}
DataAtom::DataAtom(const DataAtom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vstru_(from.vstru_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  mapchannel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mapchannel().size() > 0) {
    mapchannel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapchannel_);
  }
  vstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vstring().size() > 0) {
    vstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vstring_);
  }
  if (from.has_vtime()) {
    vtime_ = new ::hqyGooseCommon::UtcTime(*from.vtime_);
  } else {
    vtime_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&vfloat_) -
    reinterpret_cast<char*>(&type_) + sizeof(vfloat_));
  // @@protoc_insertion_point(copy_constructor:hqyGooseCommon.DataAtom)
}

void DataAtom::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapchannel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&vtime_, 0, reinterpret_cast<char*>(&vfloat_) -
    reinterpret_cast<char*>(&vtime_) + sizeof(vfloat_));
  _cached_size_ = 0;
}

DataAtom::~DataAtom() {
  // @@protoc_insertion_point(destructor:hqyGooseCommon.DataAtom)
  SharedDtor();
}

void DataAtom::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapchannel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete vtime_;
  }
}

void DataAtom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataAtom::descriptor() {
  protobuf_hqyGooseCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyGooseCommon_2eproto::file_level_metadata[1].descriptor;
}

const DataAtom& DataAtom::default_instance() {
  protobuf_hqyGooseCommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

DataAtom* DataAtom::New(::google::protobuf::Arena* arena) const {
  DataAtom* n = new DataAtom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataAtom::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyGooseCommon.DataAtom)
  vstru_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapchannel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && vtime_ != NULL) {
    delete vtime_;
  }
  vtime_ = NULL;
  ::memset(&type_, 0, reinterpret_cast<char*>(&vfloat_) -
    reinterpret_cast<char*>(&type_) + sizeof(vfloat_));
}

bool DataAtom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyGooseCommon.DataAtom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .hqyGooseCommon.DataType type = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::hqyGooseCommon::DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hqyGooseCommon.DataAtom.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MapChannel = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapchannel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mapchannel().data(), this->mapchannel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hqyGooseCommon.DataAtom.MapChannel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bits = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vUInt = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vuint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vInt = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vFloat = 7;
      case 7: {
        if (tag == 61u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vfloat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vDouble = 8;
      case 8: {
        if (tag == 65u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vdouble_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .hqyGooseCommon.UtcTime vTime = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vString = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vstring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vstring().data(), this->vstring().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hqyGooseCommon.DataAtom.vString"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hqyGooseCommon.DataAtom vStru = 11;
      case 11: {
        if (tag == 90u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vstru()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyGooseCommon.DataAtom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyGooseCommon.DataAtom)
  return false;
#undef DO_
}

void DataAtom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyGooseCommon.DataAtom)
  // .hqyGooseCommon.DataType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGooseCommon.DataAtom.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string MapChannel = 3;
  if (this->mapchannel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mapchannel().data(), this->mapchannel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGooseCommon.DataAtom.MapChannel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mapchannel(), output);
  }

  // int32 bits = 4;
  if (this->bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bits(), output);
  }

  // uint32 vUInt = 5;
  if (this->vuint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->vuint(), output);
  }

  // int32 vInt = 6;
  if (this->vint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->vint(), output);
  }

  // float vFloat = 7;
  if (this->vfloat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->vfloat(), output);
  }

  // double vDouble = 8;
  if (this->vdouble() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->vdouble(), output);
  }

  // .hqyGooseCommon.UtcTime vTime = 9;
  if (this->has_vtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->vtime_, output);
  }

  // string vString = 10;
  if (this->vstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vstring().data(), this->vstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGooseCommon.DataAtom.vString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->vstring(), output);
  }

  // repeated .hqyGooseCommon.DataAtom vStru = 11;
  for (unsigned int i = 0, n = this->vstru_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->vstru(i), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyGooseCommon.DataAtom)
}

::google::protobuf::uint8* DataAtom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyGooseCommon.DataAtom)
  // .hqyGooseCommon.DataType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGooseCommon.DataAtom.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string MapChannel = 3;
  if (this->mapchannel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mapchannel().data(), this->mapchannel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGooseCommon.DataAtom.MapChannel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mapchannel(), target);
  }

  // int32 bits = 4;
  if (this->bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bits(), target);
  }

  // uint32 vUInt = 5;
  if (this->vuint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->vuint(), target);
  }

  // int32 vInt = 6;
  if (this->vint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->vint(), target);
  }

  // float vFloat = 7;
  if (this->vfloat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->vfloat(), target);
  }

  // double vDouble = 8;
  if (this->vdouble() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->vdouble(), target);
  }

  // .hqyGooseCommon.UtcTime vTime = 9;
  if (this->has_vtime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->vtime_, false, target);
  }

  // string vString = 10;
  if (this->vstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vstring().data(), this->vstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGooseCommon.DataAtom.vString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->vstring(), target);
  }

  // repeated .hqyGooseCommon.DataAtom vStru = 11;
  for (unsigned int i = 0, n = this->vstru_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->vstru(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyGooseCommon.DataAtom)
  return target;
}

size_t DataAtom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyGooseCommon.DataAtom)
  size_t total_size = 0;

  // repeated .hqyGooseCommon.DataAtom vStru = 11;
  {
    unsigned int count = this->vstru_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vstru(i));
    }
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string MapChannel = 3;
  if (this->mapchannel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mapchannel());
  }

  // string vString = 10;
  if (this->vstring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vstring());
  }

  // .hqyGooseCommon.UtcTime vTime = 9;
  if (this->has_vtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->vtime_);
  }

  // .hqyGooseCommon.DataType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 bits = 4;
  if (this->bits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bits());
  }

  // uint32 vUInt = 5;
  if (this->vuint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vuint());
  }

  // int32 vInt = 6;
  if (this->vint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vint());
  }

  // double vDouble = 8;
  if (this->vdouble() != 0) {
    total_size += 1 + 8;
  }

  // float vFloat = 7;
  if (this->vfloat() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataAtom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyGooseCommon.DataAtom)
  GOOGLE_DCHECK_NE(&from, this);
  const DataAtom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataAtom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyGooseCommon.DataAtom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyGooseCommon.DataAtom)
    MergeFrom(*source);
  }
}

void DataAtom::MergeFrom(const DataAtom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyGooseCommon.DataAtom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vstru_.MergeFrom(from.vstru_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mapchannel().size() > 0) {

    mapchannel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapchannel_);
  }
  if (from.vstring().size() > 0) {

    vstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vstring_);
  }
  if (from.has_vtime()) {
    mutable_vtime()->::hqyGooseCommon::UtcTime::MergeFrom(from.vtime());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.bits() != 0) {
    set_bits(from.bits());
  }
  if (from.vuint() != 0) {
    set_vuint(from.vuint());
  }
  if (from.vint() != 0) {
    set_vint(from.vint());
  }
  if (from.vdouble() != 0) {
    set_vdouble(from.vdouble());
  }
  if (from.vfloat() != 0) {
    set_vfloat(from.vfloat());
  }
}

void DataAtom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyGooseCommon.DataAtom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataAtom::CopyFrom(const DataAtom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyGooseCommon.DataAtom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataAtom::IsInitialized() const {
  return true;
}

void DataAtom::Swap(DataAtom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataAtom::InternalSwap(DataAtom* other) {
  vstru_.UnsafeArenaSwap(&other->vstru_);
  name_.Swap(&other->name_);
  mapchannel_.Swap(&other->mapchannel_);
  vstring_.Swap(&other->vstring_);
  std::swap(vtime_, other->vtime_);
  std::swap(type_, other->type_);
  std::swap(bits_, other->bits_);
  std::swap(vuint_, other->vuint_);
  std::swap(vint_, other->vint_);
  std::swap(vdouble_, other->vdouble_);
  std::swap(vfloat_, other->vfloat_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataAtom::GetMetadata() const {
  protobuf_hqyGooseCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyGooseCommon_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataAtom

// .hqyGooseCommon.DataType type = 1;
void DataAtom::clear_type() {
  type_ = 0;
}
::hqyGooseCommon::DataType DataAtom::type() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.type)
  return static_cast< ::hqyGooseCommon::DataType >(type_);
}
void DataAtom::set_type(::hqyGooseCommon::DataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.type)
}

// string Name = 2;
void DataAtom::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataAtom::name() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.Name)
  return name_.GetNoArena();
}
void DataAtom::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.Name)
}
#if LANG_CXX11
void DataAtom::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGooseCommon.DataAtom.Name)
}
#endif
void DataAtom::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGooseCommon.DataAtom.Name)
}
void DataAtom::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGooseCommon.DataAtom.Name)
}
::std::string* DataAtom::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.DataAtom.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataAtom::release_name() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.DataAtom.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataAtom::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.DataAtom.Name)
}

// string MapChannel = 3;
void DataAtom::clear_mapchannel() {
  mapchannel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataAtom::mapchannel() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.MapChannel)
  return mapchannel_.GetNoArena();
}
void DataAtom::set_mapchannel(const ::std::string& value) {
  
  mapchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.MapChannel)
}
#if LANG_CXX11
void DataAtom::set_mapchannel(::std::string&& value) {
  
  mapchannel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGooseCommon.DataAtom.MapChannel)
}
#endif
void DataAtom::set_mapchannel(const char* value) {
  
  mapchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGooseCommon.DataAtom.MapChannel)
}
void DataAtom::set_mapchannel(const char* value, size_t size) {
  
  mapchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGooseCommon.DataAtom.MapChannel)
}
::std::string* DataAtom::mutable_mapchannel() {
  
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.DataAtom.MapChannel)
  return mapchannel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataAtom::release_mapchannel() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.DataAtom.MapChannel)
  
  return mapchannel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataAtom::set_allocated_mapchannel(::std::string* mapchannel) {
  if (mapchannel != NULL) {
    
  } else {
    
  }
  mapchannel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapchannel);
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.DataAtom.MapChannel)
}

// int32 bits = 4;
void DataAtom::clear_bits() {
  bits_ = 0;
}
::google::protobuf::int32 DataAtom::bits() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.bits)
  return bits_;
}
void DataAtom::set_bits(::google::protobuf::int32 value) {
  
  bits_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.bits)
}

// uint32 vUInt = 5;
void DataAtom::clear_vuint() {
  vuint_ = 0u;
}
::google::protobuf::uint32 DataAtom::vuint() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vUInt)
  return vuint_;
}
void DataAtom::set_vuint(::google::protobuf::uint32 value) {
  
  vuint_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.vUInt)
}

// int32 vInt = 6;
void DataAtom::clear_vint() {
  vint_ = 0;
}
::google::protobuf::int32 DataAtom::vint() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vInt)
  return vint_;
}
void DataAtom::set_vint(::google::protobuf::int32 value) {
  
  vint_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.vInt)
}

// float vFloat = 7;
void DataAtom::clear_vfloat() {
  vfloat_ = 0;
}
float DataAtom::vfloat() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vFloat)
  return vfloat_;
}
void DataAtom::set_vfloat(float value) {
  
  vfloat_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.vFloat)
}

// double vDouble = 8;
void DataAtom::clear_vdouble() {
  vdouble_ = 0;
}
double DataAtom::vdouble() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vDouble)
  return vdouble_;
}
void DataAtom::set_vdouble(double value) {
  
  vdouble_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.vDouble)
}

// .hqyGooseCommon.UtcTime vTime = 9;
bool DataAtom::has_vtime() const {
  return this != internal_default_instance() && vtime_ != NULL;
}
void DataAtom::clear_vtime() {
  if (GetArenaNoVirtual() == NULL && vtime_ != NULL) delete vtime_;
  vtime_ = NULL;
}
const ::hqyGooseCommon::UtcTime& DataAtom::vtime() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vTime)
  return vtime_ != NULL ? *vtime_
                         : *::hqyGooseCommon::UtcTime::internal_default_instance();
}
::hqyGooseCommon::UtcTime* DataAtom::mutable_vtime() {
  
  if (vtime_ == NULL) {
    vtime_ = new ::hqyGooseCommon::UtcTime;
  }
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.DataAtom.vTime)
  return vtime_;
}
::hqyGooseCommon::UtcTime* DataAtom::release_vtime() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.DataAtom.vTime)
  
  ::hqyGooseCommon::UtcTime* temp = vtime_;
  vtime_ = NULL;
  return temp;
}
void DataAtom::set_allocated_vtime(::hqyGooseCommon::UtcTime* vtime) {
  delete vtime_;
  vtime_ = vtime;
  if (vtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.DataAtom.vTime)
}

// string vString = 10;
void DataAtom::clear_vstring() {
  vstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DataAtom::vstring() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vString)
  return vstring_.GetNoArena();
}
void DataAtom::set_vstring(const ::std::string& value) {
  
  vstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.vString)
}
#if LANG_CXX11
void DataAtom::set_vstring(::std::string&& value) {
  
  vstring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGooseCommon.DataAtom.vString)
}
#endif
void DataAtom::set_vstring(const char* value) {
  
  vstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGooseCommon.DataAtom.vString)
}
void DataAtom::set_vstring(const char* value, size_t size) {
  
  vstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGooseCommon.DataAtom.vString)
}
::std::string* DataAtom::mutable_vstring() {
  
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.DataAtom.vString)
  return vstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DataAtom::release_vstring() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.DataAtom.vString)
  
  return vstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DataAtom::set_allocated_vstring(::std::string* vstring) {
  if (vstring != NULL) {
    
  } else {
    
  }
  vstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vstring);
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.DataAtom.vString)
}

// repeated .hqyGooseCommon.DataAtom vStru = 11;
int DataAtom::vstru_size() const {
  return vstru_.size();
}
void DataAtom::clear_vstru() {
  vstru_.Clear();
}
const ::hqyGooseCommon::DataAtom& DataAtom::vstru(int index) const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vStru)
  return vstru_.Get(index);
}
::hqyGooseCommon::DataAtom* DataAtom::mutable_vstru(int index) {
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.DataAtom.vStru)
  return vstru_.Mutable(index);
}
::hqyGooseCommon::DataAtom* DataAtom::add_vstru() {
  // @@protoc_insertion_point(field_add:hqyGooseCommon.DataAtom.vStru)
  return vstru_.Add();
}
::google::protobuf::RepeatedPtrField< ::hqyGooseCommon::DataAtom >*
DataAtom::mutable_vstru() {
  // @@protoc_insertion_point(field_mutable_list:hqyGooseCommon.DataAtom.vStru)
  return &vstru_;
}
const ::google::protobuf::RepeatedPtrField< ::hqyGooseCommon::DataAtom >&
DataAtom::vstru() const {
  // @@protoc_insertion_point(field_list:hqyGooseCommon.DataAtom.vStru)
  return vstru_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Channel_Info::kNameFieldNumber;
const int Channel_Info::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Channel_Info::Channel_Info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyGooseCommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyGooseCommon.Channel_Info)
}
Channel_Info::Channel_Info(const Channel_Info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data()) {
    data_ = new ::hqyGooseCommon::DataAtom(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:hqyGooseCommon.Channel_Info)
}

void Channel_Info::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
  _cached_size_ = 0;
}

Channel_Info::~Channel_Info() {
  // @@protoc_insertion_point(destructor:hqyGooseCommon.Channel_Info)
  SharedDtor();
}

void Channel_Info::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void Channel_Info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Channel_Info::descriptor() {
  protobuf_hqyGooseCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyGooseCommon_2eproto::file_level_metadata[2].descriptor;
}

const Channel_Info& Channel_Info::default_instance() {
  protobuf_hqyGooseCommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

Channel_Info* Channel_Info::New(::google::protobuf::Arena* arena) const {
  Channel_Info* n = new Channel_Info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Channel_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyGooseCommon.Channel_Info)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}

bool Channel_Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyGooseCommon.Channel_Info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hqyGooseCommon.Channel_Info.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .hqyGooseCommon.DataAtom Data = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyGooseCommon.Channel_Info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyGooseCommon.Channel_Info)
  return false;
#undef DO_
}

void Channel_Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyGooseCommon.Channel_Info)
  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGooseCommon.Channel_Info.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .hqyGooseCommon.DataAtom Data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // @@protoc_insertion_point(serialize_end:hqyGooseCommon.Channel_Info)
}

::google::protobuf::uint8* Channel_Info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyGooseCommon.Channel_Info)
  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGooseCommon.Channel_Info.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .hqyGooseCommon.DataAtom Data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyGooseCommon.Channel_Info)
  return target;
}

size_t Channel_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyGooseCommon.Channel_Info)
  size_t total_size = 0;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .hqyGooseCommon.DataAtom Data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Channel_Info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyGooseCommon.Channel_Info)
  GOOGLE_DCHECK_NE(&from, this);
  const Channel_Info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Channel_Info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyGooseCommon.Channel_Info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyGooseCommon.Channel_Info)
    MergeFrom(*source);
  }
}

void Channel_Info::MergeFrom(const Channel_Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyGooseCommon.Channel_Info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data()) {
    mutable_data()->::hqyGooseCommon::DataAtom::MergeFrom(from.data());
  }
}

void Channel_Info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyGooseCommon.Channel_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Channel_Info::CopyFrom(const Channel_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyGooseCommon.Channel_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Channel_Info::IsInitialized() const {
  return true;
}

void Channel_Info::Swap(Channel_Info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Channel_Info::InternalSwap(Channel_Info* other) {
  name_.Swap(&other->name_);
  std::swap(data_, other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Channel_Info::GetMetadata() const {
  protobuf_hqyGooseCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyGooseCommon_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Channel_Info

// string Name = 1;
void Channel_Info::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Channel_Info::name() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.Channel_Info.Name)
  return name_.GetNoArena();
}
void Channel_Info::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGooseCommon.Channel_Info.Name)
}
#if LANG_CXX11
void Channel_Info::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGooseCommon.Channel_Info.Name)
}
#endif
void Channel_Info::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGooseCommon.Channel_Info.Name)
}
void Channel_Info::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGooseCommon.Channel_Info.Name)
}
::std::string* Channel_Info::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.Channel_Info.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Channel_Info::release_name() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.Channel_Info.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Channel_Info::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.Channel_Info.Name)
}

// .hqyGooseCommon.DataAtom Data = 2;
bool Channel_Info::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
void Channel_Info::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::hqyGooseCommon::DataAtom& Channel_Info::data() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.Channel_Info.Data)
  return data_ != NULL ? *data_
                         : *::hqyGooseCommon::DataAtom::internal_default_instance();
}
::hqyGooseCommon::DataAtom* Channel_Info::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::hqyGooseCommon::DataAtom;
  }
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.Channel_Info.Data)
  return data_;
}
::hqyGooseCommon::DataAtom* Channel_Info::release_data() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.Channel_Info.Data)
  
  ::hqyGooseCommon::DataAtom* temp = data_;
  data_ = NULL;
  return temp;
}
void Channel_Info::set_allocated_data(::hqyGooseCommon::DataAtom* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.Channel_Info.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace hqyGooseCommon

// @@protoc_insertion_point(global_scope)
