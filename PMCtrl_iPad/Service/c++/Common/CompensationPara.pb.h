// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CompensationPara.proto

#ifndef PROTOBUF_CompensationPara_2eproto__INCLUDED
#define PROTOBUF_CompensationPara_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace Compensation {
class ChanelCompensation;
class ChanelCompensationDefaultTypeInternal;
extern ChanelCompensationDefaultTypeInternal _ChanelCompensation_default_instance_;
class CompensationItem;
class CompensationItemDefaultTypeInternal;
extern CompensationItemDefaultTypeInternal _CompensationItem_default_instance_;
class module;
class moduleDefaultTypeInternal;
extern moduleDefaultTypeInternal _module_default_instance_;
class modules;
class modulesDefaultTypeInternal;
extern modulesDefaultTypeInternal _modules_default_instance_;
}  // namespace Compensation

namespace Compensation {

namespace protobuf_CompensationPara_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_CompensationPara_2eproto

// ===================================================================

class CompensationItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Compensation.CompensationItem) */ {
 public:
  CompensationItem();
  virtual ~CompensationItem();

  CompensationItem(const CompensationItem& from);

  inline CompensationItem& operator=(const CompensationItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompensationItem& default_instance();

  static inline const CompensationItem* internal_default_instance() {
    return reinterpret_cast<const CompensationItem*>(
               &_CompensationItem_default_instance_);
  }

  void Swap(CompensationItem* other);

  // implements Message ----------------------------------------------

  inline CompensationItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CompensationItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CompensationItem& from);
  void MergeFrom(const CompensationItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CompensationItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float fampcompensation = 1;
  void clear_fampcompensation();
  static const int kFampcompensationFieldNumber = 1;
  float fampcompensation() const;
  void set_fampcompensation(float value);

  // float fphcompensation = 2;
  void clear_fphcompensation();
  static const int kFphcompensationFieldNumber = 2;
  float fphcompensation() const;
  void set_fphcompensation(float value);

  // @@protoc_insertion_point(class_scope:Compensation.CompensationItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float fampcompensation_;
  float fphcompensation_;
  mutable int _cached_size_;
  friend struct  protobuf_CompensationPara_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChanelCompensation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Compensation.ChanelCompensation) */ {
 public:
  ChanelCompensation();
  virtual ~ChanelCompensation();

  ChanelCompensation(const ChanelCompensation& from);

  inline ChanelCompensation& operator=(const ChanelCompensation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChanelCompensation& default_instance();

  static inline const ChanelCompensation* internal_default_instance() {
    return reinterpret_cast<const ChanelCompensation*>(
               &_ChanelCompensation_default_instance_);
  }

  void Swap(ChanelCompensation* other);

  // implements Message ----------------------------------------------

  inline ChanelCompensation* New() const PROTOBUF_FINAL { return New(NULL); }

  ChanelCompensation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChanelCompensation& from);
  void MergeFrom(const ChanelCompensation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChanelCompensation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Compensation.CompensationItem oharms = 2;
  int oharms_size() const;
  void clear_oharms();
  static const int kOharmsFieldNumber = 2;
  const ::Compensation::CompensationItem& oharms(int index) const;
  ::Compensation::CompensationItem* mutable_oharms(int index);
  ::Compensation::CompensationItem* add_oharms();
  ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItem >*
      mutable_oharms();
  const ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItem >&
      oharms() const;

  // repeated float fTempXs = 3;
  int ftempxs_size() const;
  void clear_ftempxs();
  static const int kFTempXsFieldNumber = 3;
  float ftempxs(int index) const;
  void set_ftempxs(int index, float value);
  void add_ftempxs(float value);
  const ::google::protobuf::RepeatedField< float >&
      ftempxs() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_ftempxs();

  // float fzeroshift = 1;
  void clear_fzeroshift();
  static const int kFzeroshiftFieldNumber = 1;
  float fzeroshift() const;
  void set_fzeroshift(float value);

  // float fdczeroshft = 4;
  void clear_fdczeroshft();
  static const int kFdczeroshftFieldNumber = 4;
  float fdczeroshft() const;
  void set_fdczeroshft(float value);

  // float fMaxCurrentRatio = 5;
  void clear_fmaxcurrentratio();
  static const int kFMaxCurrentRatioFieldNumber = 5;
  float fmaxcurrentratio() const;
  void set_fmaxcurrentratio(float value);

  // @@protoc_insertion_point(class_scope:Compensation.ChanelCompensation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItem > oharms_;
  ::google::protobuf::RepeatedField< float > ftempxs_;
  mutable int _ftempxs_cached_byte_size_;
  float fzeroshift_;
  float fdczeroshft_;
  float fmaxcurrentratio_;
  mutable int _cached_size_;
  friend struct  protobuf_CompensationPara_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class module : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Compensation.module) */ {
 public:
  module();
  virtual ~module();

  module(const module& from);

  inline module& operator=(const module& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const module& default_instance();

  static inline const module* internal_default_instance() {
    return reinterpret_cast<const module*>(
               &_module_default_instance_);
  }

  void Swap(module* other);

  // implements Message ----------------------------------------------

  inline module* New() const PROTOBUF_FINAL { return New(NULL); }

  module* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const module& from);
  void MergeFrom(const module& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(module* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Compensation.ChanelCompensation chanelItem = 1;
  int chanelitem_size() const;
  void clear_chanelitem();
  static const int kChanelItemFieldNumber = 1;
  const ::Compensation::ChanelCompensation& chanelitem(int index) const;
  ::Compensation::ChanelCompensation* mutable_chanelitem(int index);
  ::Compensation::ChanelCompensation* add_chanelitem();
  ::google::protobuf::RepeatedPtrField< ::Compensation::ChanelCompensation >*
      mutable_chanelitem();
  const ::google::protobuf::RepeatedPtrField< ::Compensation::ChanelCompensation >&
      chanelitem() const;

  // string filename = 3;
  void clear_filename();
  static const int kFilenameFieldNumber = 3;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // uint32 nmodule = 2;
  void clear_nmodule();
  static const int kNmoduleFieldNumber = 2;
  ::google::protobuf::uint32 nmodule() const;
  void set_nmodule(::google::protobuf::uint32 value);

  // float frexs = 4;
  void clear_frexs();
  static const int kFrexsFieldNumber = 4;
  float frexs() const;
  void set_frexs(float value);

  // float faxudc = 5;
  void clear_faxudc();
  static const int kFaxudcFieldNumber = 5;
  float faxudc() const;
  void set_faxudc(float value);

  // float faxuzeroshift = 6;
  void clear_faxuzeroshift();
  static const int kFaxuzeroshiftFieldNumber = 6;
  float faxuzeroshift() const;
  void set_faxuzeroshift(float value);

  // @@protoc_insertion_point(class_scope:Compensation.module)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Compensation::ChanelCompensation > chanelitem_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::uint32 nmodule_;
  float frexs_;
  float faxudc_;
  float faxuzeroshift_;
  mutable int _cached_size_;
  friend struct  protobuf_CompensationPara_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class modules : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Compensation.modules) */ {
 public:
  modules();
  virtual ~modules();

  modules(const modules& from);

  inline modules& operator=(const modules& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const modules& default_instance();

  static inline const modules* internal_default_instance() {
    return reinterpret_cast<const modules*>(
               &_modules_default_instance_);
  }

  void Swap(modules* other);

  // implements Message ----------------------------------------------

  inline modules* New() const PROTOBUF_FINAL { return New(NULL); }

  modules* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const modules& from);
  void MergeFrom(const modules& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(modules* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Compensation.module moduleChanel = 1;
  int modulechanel_size() const;
  void clear_modulechanel();
  static const int kModuleChanelFieldNumber = 1;
  const ::Compensation::module& modulechanel(int index) const;
  ::Compensation::module* mutable_modulechanel(int index);
  ::Compensation::module* add_modulechanel();
  ::google::protobuf::RepeatedPtrField< ::Compensation::module >*
      mutable_modulechanel();
  const ::google::protobuf::RepeatedPtrField< ::Compensation::module >&
      modulechanel() const;

  // uint32 nUDCtest = 2;
  void clear_nudctest();
  static const int kNUDCtestFieldNumber = 2;
  ::google::protobuf::uint32 nudctest() const;
  void set_nudctest(::google::protobuf::uint32 value);

  // uint32 nIDCtest = 3;
  void clear_nidctest();
  static const int kNIDCtestFieldNumber = 3;
  ::google::protobuf::uint32 nidctest() const;
  void set_nidctest(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Compensation.modules)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Compensation::module > modulechanel_;
  ::google::protobuf::uint32 nudctest_;
  ::google::protobuf::uint32 nidctest_;
  mutable int _cached_size_;
  friend struct  protobuf_CompensationPara_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CompensationItem

// float fampcompensation = 1;
inline void CompensationItem::clear_fampcompensation() {
  fampcompensation_ = 0;
}
inline float CompensationItem::fampcompensation() const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItem.fampcompensation)
  return fampcompensation_;
}
inline void CompensationItem::set_fampcompensation(float value) {
  
  fampcompensation_ = value;
  // @@protoc_insertion_point(field_set:Compensation.CompensationItem.fampcompensation)
}

// float fphcompensation = 2;
inline void CompensationItem::clear_fphcompensation() {
  fphcompensation_ = 0;
}
inline float CompensationItem::fphcompensation() const {
  // @@protoc_insertion_point(field_get:Compensation.CompensationItem.fphcompensation)
  return fphcompensation_;
}
inline void CompensationItem::set_fphcompensation(float value) {
  
  fphcompensation_ = value;
  // @@protoc_insertion_point(field_set:Compensation.CompensationItem.fphcompensation)
}

// -------------------------------------------------------------------

// ChanelCompensation

// float fzeroshift = 1;
inline void ChanelCompensation::clear_fzeroshift() {
  fzeroshift_ = 0;
}
inline float ChanelCompensation::fzeroshift() const {
  // @@protoc_insertion_point(field_get:Compensation.ChanelCompensation.fzeroshift)
  return fzeroshift_;
}
inline void ChanelCompensation::set_fzeroshift(float value) {
  
  fzeroshift_ = value;
  // @@protoc_insertion_point(field_set:Compensation.ChanelCompensation.fzeroshift)
}

// repeated .Compensation.CompensationItem oharms = 2;
inline int ChanelCompensation::oharms_size() const {
  return oharms_.size();
}
inline void ChanelCompensation::clear_oharms() {
  oharms_.Clear();
}
inline const ::Compensation::CompensationItem& ChanelCompensation::oharms(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.ChanelCompensation.oharms)
  return oharms_.Get(index);
}
inline ::Compensation::CompensationItem* ChanelCompensation::mutable_oharms(int index) {
  // @@protoc_insertion_point(field_mutable:Compensation.ChanelCompensation.oharms)
  return oharms_.Mutable(index);
}
inline ::Compensation::CompensationItem* ChanelCompensation::add_oharms() {
  // @@protoc_insertion_point(field_add:Compensation.ChanelCompensation.oharms)
  return oharms_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItem >*
ChanelCompensation::mutable_oharms() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.ChanelCompensation.oharms)
  return &oharms_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Compensation::CompensationItem >&
ChanelCompensation::oharms() const {
  // @@protoc_insertion_point(field_list:Compensation.ChanelCompensation.oharms)
  return oharms_;
}

// repeated float fTempXs = 3;
inline int ChanelCompensation::ftempxs_size() const {
  return ftempxs_.size();
}
inline void ChanelCompensation::clear_ftempxs() {
  ftempxs_.Clear();
}
inline float ChanelCompensation::ftempxs(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.ChanelCompensation.fTempXs)
  return ftempxs_.Get(index);
}
inline void ChanelCompensation::set_ftempxs(int index, float value) {
  ftempxs_.Set(index, value);
  // @@protoc_insertion_point(field_set:Compensation.ChanelCompensation.fTempXs)
}
inline void ChanelCompensation::add_ftempxs(float value) {
  ftempxs_.Add(value);
  // @@protoc_insertion_point(field_add:Compensation.ChanelCompensation.fTempXs)
}
inline const ::google::protobuf::RepeatedField< float >&
ChanelCompensation::ftempxs() const {
  // @@protoc_insertion_point(field_list:Compensation.ChanelCompensation.fTempXs)
  return ftempxs_;
}
inline ::google::protobuf::RepeatedField< float >*
ChanelCompensation::mutable_ftempxs() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.ChanelCompensation.fTempXs)
  return &ftempxs_;
}

// float fdczeroshft = 4;
inline void ChanelCompensation::clear_fdczeroshft() {
  fdczeroshft_ = 0;
}
inline float ChanelCompensation::fdczeroshft() const {
  // @@protoc_insertion_point(field_get:Compensation.ChanelCompensation.fdczeroshft)
  return fdczeroshft_;
}
inline void ChanelCompensation::set_fdczeroshft(float value) {
  
  fdczeroshft_ = value;
  // @@protoc_insertion_point(field_set:Compensation.ChanelCompensation.fdczeroshft)
}

// float fMaxCurrentRatio = 5;
inline void ChanelCompensation::clear_fmaxcurrentratio() {
  fmaxcurrentratio_ = 0;
}
inline float ChanelCompensation::fmaxcurrentratio() const {
  // @@protoc_insertion_point(field_get:Compensation.ChanelCompensation.fMaxCurrentRatio)
  return fmaxcurrentratio_;
}
inline void ChanelCompensation::set_fmaxcurrentratio(float value) {
  
  fmaxcurrentratio_ = value;
  // @@protoc_insertion_point(field_set:Compensation.ChanelCompensation.fMaxCurrentRatio)
}

// -------------------------------------------------------------------

// module

// repeated .Compensation.ChanelCompensation chanelItem = 1;
inline int module::chanelitem_size() const {
  return chanelitem_.size();
}
inline void module::clear_chanelitem() {
  chanelitem_.Clear();
}
inline const ::Compensation::ChanelCompensation& module::chanelitem(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.module.chanelItem)
  return chanelitem_.Get(index);
}
inline ::Compensation::ChanelCompensation* module::mutable_chanelitem(int index) {
  // @@protoc_insertion_point(field_mutable:Compensation.module.chanelItem)
  return chanelitem_.Mutable(index);
}
inline ::Compensation::ChanelCompensation* module::add_chanelitem() {
  // @@protoc_insertion_point(field_add:Compensation.module.chanelItem)
  return chanelitem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Compensation::ChanelCompensation >*
module::mutable_chanelitem() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.module.chanelItem)
  return &chanelitem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Compensation::ChanelCompensation >&
module::chanelitem() const {
  // @@protoc_insertion_point(field_list:Compensation.module.chanelItem)
  return chanelitem_;
}

// uint32 nmodule = 2;
inline void module::clear_nmodule() {
  nmodule_ = 0u;
}
inline ::google::protobuf::uint32 module::nmodule() const {
  // @@protoc_insertion_point(field_get:Compensation.module.nmodule)
  return nmodule_;
}
inline void module::set_nmodule(::google::protobuf::uint32 value) {
  
  nmodule_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.nmodule)
}

// string filename = 3;
inline void module::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& module::filename() const {
  // @@protoc_insertion_point(field_get:Compensation.module.filename)
  return filename_.GetNoArena();
}
inline void module::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Compensation.module.filename)
}
#if LANG_CXX11
inline void module::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Compensation.module.filename)
}
#endif
inline void module::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Compensation.module.filename)
}
inline void module::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Compensation.module.filename)
}
inline ::std::string* module::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:Compensation.module.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* module::release_filename() {
  // @@protoc_insertion_point(field_release:Compensation.module.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void module::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:Compensation.module.filename)
}

// float frexs = 4;
inline void module::clear_frexs() {
  frexs_ = 0;
}
inline float module::frexs() const {
  // @@protoc_insertion_point(field_get:Compensation.module.frexs)
  return frexs_;
}
inline void module::set_frexs(float value) {
  
  frexs_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.frexs)
}

// float faxudc = 5;
inline void module::clear_faxudc() {
  faxudc_ = 0;
}
inline float module::faxudc() const {
  // @@protoc_insertion_point(field_get:Compensation.module.faxudc)
  return faxudc_;
}
inline void module::set_faxudc(float value) {
  
  faxudc_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.faxudc)
}

// float faxuzeroshift = 6;
inline void module::clear_faxuzeroshift() {
  faxuzeroshift_ = 0;
}
inline float module::faxuzeroshift() const {
  // @@protoc_insertion_point(field_get:Compensation.module.faxuzeroshift)
  return faxuzeroshift_;
}
inline void module::set_faxuzeroshift(float value) {
  
  faxuzeroshift_ = value;
  // @@protoc_insertion_point(field_set:Compensation.module.faxuzeroshift)
}

// -------------------------------------------------------------------

// modules

// repeated .Compensation.module moduleChanel = 1;
inline int modules::modulechanel_size() const {
  return modulechanel_.size();
}
inline void modules::clear_modulechanel() {
  modulechanel_.Clear();
}
inline const ::Compensation::module& modules::modulechanel(int index) const {
  // @@protoc_insertion_point(field_get:Compensation.modules.moduleChanel)
  return modulechanel_.Get(index);
}
inline ::Compensation::module* modules::mutable_modulechanel(int index) {
  // @@protoc_insertion_point(field_mutable:Compensation.modules.moduleChanel)
  return modulechanel_.Mutable(index);
}
inline ::Compensation::module* modules::add_modulechanel() {
  // @@protoc_insertion_point(field_add:Compensation.modules.moduleChanel)
  return modulechanel_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Compensation::module >*
modules::mutable_modulechanel() {
  // @@protoc_insertion_point(field_mutable_list:Compensation.modules.moduleChanel)
  return &modulechanel_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Compensation::module >&
modules::modulechanel() const {
  // @@protoc_insertion_point(field_list:Compensation.modules.moduleChanel)
  return modulechanel_;
}

// uint32 nUDCtest = 2;
inline void modules::clear_nudctest() {
  nudctest_ = 0u;
}
inline ::google::protobuf::uint32 modules::nudctest() const {
  // @@protoc_insertion_point(field_get:Compensation.modules.nUDCtest)
  return nudctest_;
}
inline void modules::set_nudctest(::google::protobuf::uint32 value) {
  
  nudctest_ = value;
  // @@protoc_insertion_point(field_set:Compensation.modules.nUDCtest)
}

// uint32 nIDCtest = 3;
inline void modules::clear_nidctest() {
  nidctest_ = 0u;
}
inline ::google::protobuf::uint32 modules::nidctest() const {
  // @@protoc_insertion_point(field_get:Compensation.modules.nIDCtest)
  return nidctest_;
}
inline void modules::set_nidctest(::google::protobuf::uint32 value) {
  
  nidctest_ = value;
  // @@protoc_insertion_point(field_set:Compensation.modules.nIDCtest)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Compensation

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CompensationPara_2eproto__INCLUDED
