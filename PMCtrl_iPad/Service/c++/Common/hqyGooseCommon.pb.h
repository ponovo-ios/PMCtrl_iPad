// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hqyGooseCommon.proto

#ifndef PROTOBUF_hqyGooseCommon_2eproto__INCLUDED
#define PROTOBUF_hqyGooseCommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace hqyGooseCommon {
class Channel_Info;
class Channel_InfoDefaultTypeInternal;
extern Channel_InfoDefaultTypeInternal _Channel_Info_default_instance_;
class DataAtom;
class DataAtomDefaultTypeInternal;
extern DataAtomDefaultTypeInternal _DataAtom_default_instance_;
class UtcTime;
class UtcTimeDefaultTypeInternal;
extern UtcTimeDefaultTypeInternal _UtcTime_default_instance_;
}  // namespace hqyGooseCommon

namespace hqyGooseCommon {

namespace protobuf_hqyGooseCommon_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_hqyGooseCommon_2eproto

enum DataType {
  T_BOOL = 0,
  T_SPS = 1,
  T_DPS = 2,
  T_BIT_STRING = 3,
  T_UTC_TIME = 4,
  T_QUALITY = 5,
  T_FLOAT32 = 6,
  T_FLOAT64 = 7,
  T_INT8 = 8,
  T_INT16 = 9,
  T_INT32 = 10,
  T_UINT8 = 11,
  T_UINT16 = 12,
  T_UINT32 = 13,
  T_STRUCT = 14,
  T_STRING = 15,
  DataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataType_IsValid(int value);
const DataType DataType_MIN = T_BOOL;
const DataType DataType_MAX = T_STRING;
const int DataType_ARRAYSIZE = DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataType_descriptor();
inline const ::std::string& DataType_Name(DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataType_descriptor(), value);
}
inline bool DataType_Parse(
    const ::std::string& name, DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataType>(
    DataType_descriptor(), name, value);
}
// ===================================================================

class UtcTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hqyGooseCommon.UtcTime) */ {
 public:
  UtcTime();
  virtual ~UtcTime();

  UtcTime(const UtcTime& from);

  inline UtcTime& operator=(const UtcTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UtcTime& default_instance();

  static inline const UtcTime* internal_default_instance() {
    return reinterpret_cast<const UtcTime*>(
               &_UtcTime_default_instance_);
  }

  void Swap(UtcTime* other);

  // implements Message ----------------------------------------------

  inline UtcTime* New() const PROTOBUF_FINAL { return New(NULL); }

  UtcTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UtcTime& from);
  void MergeFrom(const UtcTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UtcTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 year = 1;
  void clear_year();
  static const int kYearFieldNumber = 1;
  ::google::protobuf::int32 year() const;
  void set_year(::google::protobuf::int32 value);

  // int32 month = 2;
  void clear_month();
  static const int kMonthFieldNumber = 2;
  ::google::protobuf::int32 month() const;
  void set_month(::google::protobuf::int32 value);

  // int32 day = 3;
  void clear_day();
  static const int kDayFieldNumber = 3;
  ::google::protobuf::int32 day() const;
  void set_day(::google::protobuf::int32 value);

  // int32 hour = 4;
  void clear_hour();
  static const int kHourFieldNumber = 4;
  ::google::protobuf::int32 hour() const;
  void set_hour(::google::protobuf::int32 value);

  // int32 minute = 5;
  void clear_minute();
  static const int kMinuteFieldNumber = 5;
  ::google::protobuf::int32 minute() const;
  void set_minute(::google::protobuf::int32 value);

  // int32 second = 6;
  void clear_second();
  static const int kSecondFieldNumber = 6;
  ::google::protobuf::int32 second() const;
  void set_second(::google::protobuf::int32 value);

  // int32 millisecond = 7;
  void clear_millisecond();
  static const int kMillisecondFieldNumber = 7;
  ::google::protobuf::int32 millisecond() const;
  void set_millisecond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:hqyGooseCommon.UtcTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 year_;
  ::google::protobuf::int32 month_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 hour_;
  ::google::protobuf::int32 minute_;
  ::google::protobuf::int32 second_;
  ::google::protobuf::int32 millisecond_;
  mutable int _cached_size_;
  friend struct  protobuf_hqyGooseCommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataAtom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hqyGooseCommon.DataAtom) */ {
 public:
  DataAtom();
  virtual ~DataAtom();

  DataAtom(const DataAtom& from);

  inline DataAtom& operator=(const DataAtom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataAtom& default_instance();

  static inline const DataAtom* internal_default_instance() {
    return reinterpret_cast<const DataAtom*>(
               &_DataAtom_default_instance_);
  }

  void Swap(DataAtom* other);

  // implements Message ----------------------------------------------

  inline DataAtom* New() const PROTOBUF_FINAL { return New(NULL); }

  DataAtom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DataAtom& from);
  void MergeFrom(const DataAtom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DataAtom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hqyGooseCommon.DataAtom vStru = 11;
  int vstru_size() const;
  void clear_vstru();
  static const int kVStruFieldNumber = 11;
  const ::hqyGooseCommon::DataAtom& vstru(int index) const;
  ::hqyGooseCommon::DataAtom* mutable_vstru(int index);
  ::hqyGooseCommon::DataAtom* add_vstru();
  ::google::protobuf::RepeatedPtrField< ::hqyGooseCommon::DataAtom >*
      mutable_vstru();
  const ::google::protobuf::RepeatedPtrField< ::hqyGooseCommon::DataAtom >&
      vstru() const;

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string MapChannel = 3;
  void clear_mapchannel();
  static const int kMapChannelFieldNumber = 3;
  const ::std::string& mapchannel() const;
  void set_mapchannel(const ::std::string& value);
  #if LANG_CXX11
  void set_mapchannel(::std::string&& value);
  #endif
  void set_mapchannel(const char* value);
  void set_mapchannel(const char* value, size_t size);
  ::std::string* mutable_mapchannel();
  ::std::string* release_mapchannel();
  void set_allocated_mapchannel(::std::string* mapchannel);

  // string vString = 10;
  void clear_vstring();
  static const int kVStringFieldNumber = 10;
  const ::std::string& vstring() const;
  void set_vstring(const ::std::string& value);
  #if LANG_CXX11
  void set_vstring(::std::string&& value);
  #endif
  void set_vstring(const char* value);
  void set_vstring(const char* value, size_t size);
  ::std::string* mutable_vstring();
  ::std::string* release_vstring();
  void set_allocated_vstring(::std::string* vstring);

  // .hqyGooseCommon.UtcTime vTime = 9;
  bool has_vtime() const;
  void clear_vtime();
  static const int kVTimeFieldNumber = 9;
  const ::hqyGooseCommon::UtcTime& vtime() const;
  ::hqyGooseCommon::UtcTime* mutable_vtime();
  ::hqyGooseCommon::UtcTime* release_vtime();
  void set_allocated_vtime(::hqyGooseCommon::UtcTime* vtime);

  // .hqyGooseCommon.DataType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::hqyGooseCommon::DataType type() const;
  void set_type(::hqyGooseCommon::DataType value);

  // int32 bits = 4;
  void clear_bits();
  static const int kBitsFieldNumber = 4;
  ::google::protobuf::int32 bits() const;
  void set_bits(::google::protobuf::int32 value);

  // uint32 vUInt = 5;
  void clear_vuint();
  static const int kVUIntFieldNumber = 5;
  ::google::protobuf::uint32 vuint() const;
  void set_vuint(::google::protobuf::uint32 value);

  // int32 vInt = 6;
  void clear_vint();
  static const int kVIntFieldNumber = 6;
  ::google::protobuf::int32 vint() const;
  void set_vint(::google::protobuf::int32 value);

  // double vDouble = 8;
  void clear_vdouble();
  static const int kVDoubleFieldNumber = 8;
  double vdouble() const;
  void set_vdouble(double value);

  // float vFloat = 7;
  void clear_vfloat();
  static const int kVFloatFieldNumber = 7;
  float vfloat() const;
  void set_vfloat(float value);

  // @@protoc_insertion_point(class_scope:hqyGooseCommon.DataAtom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::hqyGooseCommon::DataAtom > vstru_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr mapchannel_;
  ::google::protobuf::internal::ArenaStringPtr vstring_;
  ::hqyGooseCommon::UtcTime* vtime_;
  int type_;
  ::google::protobuf::int32 bits_;
  ::google::protobuf::uint32 vuint_;
  ::google::protobuf::int32 vint_;
  double vdouble_;
  float vfloat_;
  mutable int _cached_size_;
  friend struct  protobuf_hqyGooseCommon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Channel_Info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hqyGooseCommon.Channel_Info) */ {
 public:
  Channel_Info();
  virtual ~Channel_Info();

  Channel_Info(const Channel_Info& from);

  inline Channel_Info& operator=(const Channel_Info& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Channel_Info& default_instance();

  static inline const Channel_Info* internal_default_instance() {
    return reinterpret_cast<const Channel_Info*>(
               &_Channel_Info_default_instance_);
  }

  void Swap(Channel_Info* other);

  // implements Message ----------------------------------------------

  inline Channel_Info* New() const PROTOBUF_FINAL { return New(NULL); }

  Channel_Info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Channel_Info& from);
  void MergeFrom(const Channel_Info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Channel_Info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .hqyGooseCommon.DataAtom Data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::hqyGooseCommon::DataAtom& data() const;
  ::hqyGooseCommon::DataAtom* mutable_data();
  ::hqyGooseCommon::DataAtom* release_data();
  void set_allocated_data(::hqyGooseCommon::DataAtom* data);

  // @@protoc_insertion_point(class_scope:hqyGooseCommon.Channel_Info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::hqyGooseCommon::DataAtom* data_;
  mutable int _cached_size_;
  friend struct  protobuf_hqyGooseCommon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UtcTime

// int32 year = 1;
inline void UtcTime::clear_year() {
  year_ = 0;
}
inline ::google::protobuf::int32 UtcTime::year() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.year)
  return year_;
}
inline void UtcTime::set_year(::google::protobuf::int32 value) {
  
  year_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.year)
}

// int32 month = 2;
inline void UtcTime::clear_month() {
  month_ = 0;
}
inline ::google::protobuf::int32 UtcTime::month() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.month)
  return month_;
}
inline void UtcTime::set_month(::google::protobuf::int32 value) {
  
  month_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.month)
}

// int32 day = 3;
inline void UtcTime::clear_day() {
  day_ = 0;
}
inline ::google::protobuf::int32 UtcTime::day() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.day)
  return day_;
}
inline void UtcTime::set_day(::google::protobuf::int32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.day)
}

// int32 hour = 4;
inline void UtcTime::clear_hour() {
  hour_ = 0;
}
inline ::google::protobuf::int32 UtcTime::hour() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.hour)
  return hour_;
}
inline void UtcTime::set_hour(::google::protobuf::int32 value) {
  
  hour_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.hour)
}

// int32 minute = 5;
inline void UtcTime::clear_minute() {
  minute_ = 0;
}
inline ::google::protobuf::int32 UtcTime::minute() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.minute)
  return minute_;
}
inline void UtcTime::set_minute(::google::protobuf::int32 value) {
  
  minute_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.minute)
}

// int32 second = 6;
inline void UtcTime::clear_second() {
  second_ = 0;
}
inline ::google::protobuf::int32 UtcTime::second() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.second)
  return second_;
}
inline void UtcTime::set_second(::google::protobuf::int32 value) {
  
  second_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.second)
}

// int32 millisecond = 7;
inline void UtcTime::clear_millisecond() {
  millisecond_ = 0;
}
inline ::google::protobuf::int32 UtcTime::millisecond() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.UtcTime.millisecond)
  return millisecond_;
}
inline void UtcTime::set_millisecond(::google::protobuf::int32 value) {
  
  millisecond_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.UtcTime.millisecond)
}

// -------------------------------------------------------------------

// DataAtom

// .hqyGooseCommon.DataType type = 1;
inline void DataAtom::clear_type() {
  type_ = 0;
}
inline ::hqyGooseCommon::DataType DataAtom::type() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.type)
  return static_cast< ::hqyGooseCommon::DataType >(type_);
}
inline void DataAtom::set_type(::hqyGooseCommon::DataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.type)
}

// string Name = 2;
inline void DataAtom::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataAtom::name() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.Name)
  return name_.GetNoArena();
}
inline void DataAtom::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.Name)
}
#if LANG_CXX11
inline void DataAtom::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGooseCommon.DataAtom.Name)
}
#endif
inline void DataAtom::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGooseCommon.DataAtom.Name)
}
inline void DataAtom::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGooseCommon.DataAtom.Name)
}
inline ::std::string* DataAtom::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.DataAtom.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataAtom::release_name() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.DataAtom.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataAtom::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.DataAtom.Name)
}

// string MapChannel = 3;
inline void DataAtom::clear_mapchannel() {
  mapchannel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataAtom::mapchannel() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.MapChannel)
  return mapchannel_.GetNoArena();
}
inline void DataAtom::set_mapchannel(const ::std::string& value) {
  
  mapchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.MapChannel)
}
#if LANG_CXX11
inline void DataAtom::set_mapchannel(::std::string&& value) {
  
  mapchannel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGooseCommon.DataAtom.MapChannel)
}
#endif
inline void DataAtom::set_mapchannel(const char* value) {
  
  mapchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGooseCommon.DataAtom.MapChannel)
}
inline void DataAtom::set_mapchannel(const char* value, size_t size) {
  
  mapchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGooseCommon.DataAtom.MapChannel)
}
inline ::std::string* DataAtom::mutable_mapchannel() {
  
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.DataAtom.MapChannel)
  return mapchannel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataAtom::release_mapchannel() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.DataAtom.MapChannel)
  
  return mapchannel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataAtom::set_allocated_mapchannel(::std::string* mapchannel) {
  if (mapchannel != NULL) {
    
  } else {
    
  }
  mapchannel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapchannel);
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.DataAtom.MapChannel)
}

// int32 bits = 4;
inline void DataAtom::clear_bits() {
  bits_ = 0;
}
inline ::google::protobuf::int32 DataAtom::bits() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.bits)
  return bits_;
}
inline void DataAtom::set_bits(::google::protobuf::int32 value) {
  
  bits_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.bits)
}

// uint32 vUInt = 5;
inline void DataAtom::clear_vuint() {
  vuint_ = 0u;
}
inline ::google::protobuf::uint32 DataAtom::vuint() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vUInt)
  return vuint_;
}
inline void DataAtom::set_vuint(::google::protobuf::uint32 value) {
  
  vuint_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.vUInt)
}

// int32 vInt = 6;
inline void DataAtom::clear_vint() {
  vint_ = 0;
}
inline ::google::protobuf::int32 DataAtom::vint() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vInt)
  return vint_;
}
inline void DataAtom::set_vint(::google::protobuf::int32 value) {
  
  vint_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.vInt)
}

// float vFloat = 7;
inline void DataAtom::clear_vfloat() {
  vfloat_ = 0;
}
inline float DataAtom::vfloat() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vFloat)
  return vfloat_;
}
inline void DataAtom::set_vfloat(float value) {
  
  vfloat_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.vFloat)
}

// double vDouble = 8;
inline void DataAtom::clear_vdouble() {
  vdouble_ = 0;
}
inline double DataAtom::vdouble() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vDouble)
  return vdouble_;
}
inline void DataAtom::set_vdouble(double value) {
  
  vdouble_ = value;
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.vDouble)
}

// .hqyGooseCommon.UtcTime vTime = 9;
inline bool DataAtom::has_vtime() const {
  return this != internal_default_instance() && vtime_ != NULL;
}
inline void DataAtom::clear_vtime() {
  if (GetArenaNoVirtual() == NULL && vtime_ != NULL) delete vtime_;
  vtime_ = NULL;
}
inline const ::hqyGooseCommon::UtcTime& DataAtom::vtime() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vTime)
  return vtime_ != NULL ? *vtime_
                         : *::hqyGooseCommon::UtcTime::internal_default_instance();
}
inline ::hqyGooseCommon::UtcTime* DataAtom::mutable_vtime() {
  
  if (vtime_ == NULL) {
    vtime_ = new ::hqyGooseCommon::UtcTime;
  }
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.DataAtom.vTime)
  return vtime_;
}
inline ::hqyGooseCommon::UtcTime* DataAtom::release_vtime() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.DataAtom.vTime)
  
  ::hqyGooseCommon::UtcTime* temp = vtime_;
  vtime_ = NULL;
  return temp;
}
inline void DataAtom::set_allocated_vtime(::hqyGooseCommon::UtcTime* vtime) {
  delete vtime_;
  vtime_ = vtime;
  if (vtime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.DataAtom.vTime)
}

// string vString = 10;
inline void DataAtom::clear_vstring() {
  vstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataAtom::vstring() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vString)
  return vstring_.GetNoArena();
}
inline void DataAtom::set_vstring(const ::std::string& value) {
  
  vstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGooseCommon.DataAtom.vString)
}
#if LANG_CXX11
inline void DataAtom::set_vstring(::std::string&& value) {
  
  vstring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGooseCommon.DataAtom.vString)
}
#endif
inline void DataAtom::set_vstring(const char* value) {
  
  vstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGooseCommon.DataAtom.vString)
}
inline void DataAtom::set_vstring(const char* value, size_t size) {
  
  vstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGooseCommon.DataAtom.vString)
}
inline ::std::string* DataAtom::mutable_vstring() {
  
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.DataAtom.vString)
  return vstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataAtom::release_vstring() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.DataAtom.vString)
  
  return vstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataAtom::set_allocated_vstring(::std::string* vstring) {
  if (vstring != NULL) {
    
  } else {
    
  }
  vstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vstring);
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.DataAtom.vString)
}

// repeated .hqyGooseCommon.DataAtom vStru = 11;
inline int DataAtom::vstru_size() const {
  return vstru_.size();
}
inline void DataAtom::clear_vstru() {
  vstru_.Clear();
}
inline const ::hqyGooseCommon::DataAtom& DataAtom::vstru(int index) const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.DataAtom.vStru)
  return vstru_.Get(index);
}
inline ::hqyGooseCommon::DataAtom* DataAtom::mutable_vstru(int index) {
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.DataAtom.vStru)
  return vstru_.Mutable(index);
}
inline ::hqyGooseCommon::DataAtom* DataAtom::add_vstru() {
  // @@protoc_insertion_point(field_add:hqyGooseCommon.DataAtom.vStru)
  return vstru_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hqyGooseCommon::DataAtom >*
DataAtom::mutable_vstru() {
  // @@protoc_insertion_point(field_mutable_list:hqyGooseCommon.DataAtom.vStru)
  return &vstru_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hqyGooseCommon::DataAtom >&
DataAtom::vstru() const {
  // @@protoc_insertion_point(field_list:hqyGooseCommon.DataAtom.vStru)
  return vstru_;
}

// -------------------------------------------------------------------

// Channel_Info

// string Name = 1;
inline void Channel_Info::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Channel_Info::name() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.Channel_Info.Name)
  return name_.GetNoArena();
}
inline void Channel_Info::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGooseCommon.Channel_Info.Name)
}
#if LANG_CXX11
inline void Channel_Info::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGooseCommon.Channel_Info.Name)
}
#endif
inline void Channel_Info::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGooseCommon.Channel_Info.Name)
}
inline void Channel_Info::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGooseCommon.Channel_Info.Name)
}
inline ::std::string* Channel_Info::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.Channel_Info.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Channel_Info::release_name() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.Channel_Info.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Channel_Info::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.Channel_Info.Name)
}

// .hqyGooseCommon.DataAtom Data = 2;
inline bool Channel_Info::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void Channel_Info::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::hqyGooseCommon::DataAtom& Channel_Info::data() const {
  // @@protoc_insertion_point(field_get:hqyGooseCommon.Channel_Info.Data)
  return data_ != NULL ? *data_
                         : *::hqyGooseCommon::DataAtom::internal_default_instance();
}
inline ::hqyGooseCommon::DataAtom* Channel_Info::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::hqyGooseCommon::DataAtom;
  }
  // @@protoc_insertion_point(field_mutable:hqyGooseCommon.Channel_Info.Data)
  return data_;
}
inline ::hqyGooseCommon::DataAtom* Channel_Info::release_data() {
  // @@protoc_insertion_point(field_release:hqyGooseCommon.Channel_Info.Data)
  
  ::hqyGooseCommon::DataAtom* temp = data_;
  data_ = NULL;
  return temp;
}
inline void Channel_Info::set_allocated_data(::hqyGooseCommon::DataAtom* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyGooseCommon.Channel_Info.Data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace hqyGooseCommon

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::hqyGooseCommon::DataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hqyGooseCommon::DataType>() {
  return ::hqyGooseCommon::DataType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hqyGooseCommon_2eproto__INCLUDED
