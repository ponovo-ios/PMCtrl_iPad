// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manuTest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "manuTest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ManuTestPara {
class SwitchParaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SwitchPara> {
} _SwitchPara_default_instance_;
class CommonParaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CommonPara> {
} _CommonPara_default_instance_;
class TestItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestItem> {
} _TestItem_default_instance_;
class realParaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<realPara> {
} _realPara_default_instance_;

namespace protobuf_manuTest_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, iinput_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ilogic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchPara, ioutput_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, ftrigdelay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, bagingtest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, bdctest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, bautotest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonPara, itesttype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem, ocommonpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem, oacanlogpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem, oacdigitalpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem, oanagradientpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem, odiggradientpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem, oswitchpara_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realPara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realPara, oacanlogpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(realPara, oacdigitalpara_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(SwitchPara)},
  { 7, -1, sizeof(CommonPara)},
  { 17, -1, sizeof(TestItem)},
  { 27, -1, sizeof(realPara)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SwitchPara_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CommonPara_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_realPara_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "manuTest.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _SwitchPara_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CommonPara_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _TestItem_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _realPara_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::OutPutCommon::protobuf_OutPutCommon_2eproto::InitDefaults();
  _SwitchPara_default_instance_.DefaultConstruct();
  _CommonPara_default_instance_.DefaultConstruct();
  _TestItem_default_instance_.DefaultConstruct();
  _realPara_default_instance_.DefaultConstruct();
  _TestItem_default_instance_.get_mutable()->ocommonpara_ = const_cast< ::ManuTestPara::CommonPara*>(
      ::ManuTestPara::CommonPara::internal_default_instance());
  _TestItem_default_instance_.get_mutable()->oacanlogpara_ = const_cast< ::OutPutCommon::acanalogpara*>(
      ::OutPutCommon::acanalogpara::internal_default_instance());
  _TestItem_default_instance_.get_mutable()->oacdigitalpara_ = const_cast< ::OutPutCommon::acanalogpara*>(
      ::OutPutCommon::acanalogpara::internal_default_instance());
  _TestItem_default_instance_.get_mutable()->oanagradientpara_ = const_cast< ::OutPutCommon::GradientPara*>(
      ::OutPutCommon::GradientPara::internal_default_instance());
  _TestItem_default_instance_.get_mutable()->odiggradientpara_ = const_cast< ::OutPutCommon::GradientPara*>(
      ::OutPutCommon::GradientPara::internal_default_instance());
  _TestItem_default_instance_.get_mutable()->oswitchpara_ = const_cast< ::ManuTestPara::SwitchPara*>(
      ::ManuTestPara::SwitchPara::internal_default_instance());
  _realPara_default_instance_.get_mutable()->oacanlogpara_ = const_cast< ::OutPutCommon::acanalogpara*>(
      ::OutPutCommon::acanalogpara::internal_default_instance());
  _realPara_default_instance_.get_mutable()->oacdigitalpara_ = const_cast< ::OutPutCommon::acanalogpara*>(
      ::OutPutCommon::acanalogpara::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016manuTest.proto\022\014ManuTestPara\032\022OutPutCo"
      "mmon.proto\"=\n\nSwitchPara\022\016\n\006iInPut\030\001 \001(\r"
      "\022\016\n\006iLogic\030\002 \001(\r\022\017\n\007iOutPut\030\003 \001(\r\"z\n\nCom"
      "monPara\022\022\n\nfTrigDelay\030\001 \001(\002\022\022\n\nbAgingTes"
      "t\030\002 \001(\010\022\017\n\007bDcTest\030\003 \001(\010\022\021\n\tbAutoTest\030\004 "
      "\001(\010\022\r\n\005bLock\030\005 \001(\010\022\021\n\tiTestType\030\006 \001(\r\"\272\002"
      "\n\010TestItem\022-\n\013oCommonPara\030\001 \001(\0132\030.ManuTe"
      "stPara.CommonPara\0220\n\014oacanlogpara\030\002 \001(\0132"
      "\032.OutPutCommon.acanalogpara\0222\n\016oacdigita"
      "lpara\030\003 \001(\0132\032.OutPutCommon.acanalogpara\022"
      "4\n\020oanaGradientpara\030\004 \001(\0132\032.OutPutCommon"
      ".GradientPara\0224\n\020odigGradientpara\030\005 \001(\0132"
      "\032.OutPutCommon.GradientPara\022-\n\013oswitchpa"
      "ra\030\006 \001(\0132\030.ManuTestPara.SwitchPara\"p\n\010re"
      "alPara\0220\n\014oacanlogpara\030\001 \001(\0132\032.OutPutCom"
      "mon.acanalogpara\0222\n\016oacdigitalpara\030\002 \001(\013"
      "2\032.OutPutCommon.acanalogparab\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 676);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "manuTest.proto", &protobuf_RegisterTypes);
  ::OutPutCommon::protobuf_OutPutCommon_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_manuTest_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchPara::kIInPutFieldNumber;
const int SwitchPara::kILogicFieldNumber;
const int SwitchPara::kIOutPutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchPara::SwitchPara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manuTest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ManuTestPara.SwitchPara)
}
SwitchPara::SwitchPara(const SwitchPara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&iinput_, &from.iinput_,
    reinterpret_cast<char*>(&ioutput_) -
    reinterpret_cast<char*>(&iinput_) + sizeof(ioutput_));
  // @@protoc_insertion_point(copy_constructor:ManuTestPara.SwitchPara)
}

void SwitchPara::SharedCtor() {
  ::memset(&iinput_, 0, reinterpret_cast<char*>(&ioutput_) -
    reinterpret_cast<char*>(&iinput_) + sizeof(ioutput_));
  _cached_size_ = 0;
}

SwitchPara::~SwitchPara() {
  // @@protoc_insertion_point(destructor:ManuTestPara.SwitchPara)
  SharedDtor();
}

void SwitchPara::SharedDtor() {
}

void SwitchPara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchPara::descriptor() {
  protobuf_manuTest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manuTest_2eproto::file_level_metadata[0].descriptor;
}

const SwitchPara& SwitchPara::default_instance() {
  protobuf_manuTest_2eproto::InitDefaults();
  return *internal_default_instance();
}

SwitchPara* SwitchPara::New(::google::protobuf::Arena* arena) const {
  SwitchPara* n = new SwitchPara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwitchPara::Clear() {
// @@protoc_insertion_point(message_clear_start:ManuTestPara.SwitchPara)
  ::memset(&iinput_, 0, reinterpret_cast<char*>(&ioutput_) -
    reinterpret_cast<char*>(&iinput_) + sizeof(ioutput_));
}

bool SwitchPara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ManuTestPara.SwitchPara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 iInPut = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iinput_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iLogic = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ilogic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iOutPut = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ioutput_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ManuTestPara.SwitchPara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ManuTestPara.SwitchPara)
  return false;
#undef DO_
}

void SwitchPara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ManuTestPara.SwitchPara)
  // uint32 iInPut = 1;
  if (this->iinput() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->iinput(), output);
  }

  // uint32 iLogic = 2;
  if (this->ilogic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ilogic(), output);
  }

  // uint32 iOutPut = 3;
  if (this->ioutput() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ioutput(), output);
  }

  // @@protoc_insertion_point(serialize_end:ManuTestPara.SwitchPara)
}

::google::protobuf::uint8* SwitchPara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ManuTestPara.SwitchPara)
  // uint32 iInPut = 1;
  if (this->iinput() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->iinput(), target);
  }

  // uint32 iLogic = 2;
  if (this->ilogic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ilogic(), target);
  }

  // uint32 iOutPut = 3;
  if (this->ioutput() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ioutput(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ManuTestPara.SwitchPara)
  return target;
}

size_t SwitchPara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManuTestPara.SwitchPara)
  size_t total_size = 0;

  // uint32 iInPut = 1;
  if (this->iinput() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iinput());
  }

  // uint32 iLogic = 2;
  if (this->ilogic() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ilogic());
  }

  // uint32 iOutPut = 3;
  if (this->ioutput() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ioutput());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchPara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ManuTestPara.SwitchPara)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchPara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwitchPara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ManuTestPara.SwitchPara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ManuTestPara.SwitchPara)
    MergeFrom(*source);
  }
}

void SwitchPara::MergeFrom(const SwitchPara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ManuTestPara.SwitchPara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.iinput() != 0) {
    set_iinput(from.iinput());
  }
  if (from.ilogic() != 0) {
    set_ilogic(from.ilogic());
  }
  if (from.ioutput() != 0) {
    set_ioutput(from.ioutput());
  }
}

void SwitchPara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ManuTestPara.SwitchPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchPara::CopyFrom(const SwitchPara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManuTestPara.SwitchPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchPara::IsInitialized() const {
  return true;
}

void SwitchPara::Swap(SwitchPara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchPara::InternalSwap(SwitchPara* other) {
  std::swap(iinput_, other->iinput_);
  std::swap(ilogic_, other->ilogic_);
  std::swap(ioutput_, other->ioutput_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SwitchPara::GetMetadata() const {
  protobuf_manuTest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manuTest_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchPara

// uint32 iInPut = 1;
void SwitchPara::clear_iinput() {
  iinput_ = 0u;
}
::google::protobuf::uint32 SwitchPara::iinput() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.SwitchPara.iInPut)
  return iinput_;
}
void SwitchPara::set_iinput(::google::protobuf::uint32 value) {
  
  iinput_ = value;
  // @@protoc_insertion_point(field_set:ManuTestPara.SwitchPara.iInPut)
}

// uint32 iLogic = 2;
void SwitchPara::clear_ilogic() {
  ilogic_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ilogic() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.SwitchPara.iLogic)
  return ilogic_;
}
void SwitchPara::set_ilogic(::google::protobuf::uint32 value) {
  
  ilogic_ = value;
  // @@protoc_insertion_point(field_set:ManuTestPara.SwitchPara.iLogic)
}

// uint32 iOutPut = 3;
void SwitchPara::clear_ioutput() {
  ioutput_ = 0u;
}
::google::protobuf::uint32 SwitchPara::ioutput() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.SwitchPara.iOutPut)
  return ioutput_;
}
void SwitchPara::set_ioutput(::google::protobuf::uint32 value) {
  
  ioutput_ = value;
  // @@protoc_insertion_point(field_set:ManuTestPara.SwitchPara.iOutPut)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonPara::kFTrigDelayFieldNumber;
const int CommonPara::kBAgingTestFieldNumber;
const int CommonPara::kBDcTestFieldNumber;
const int CommonPara::kBAutoTestFieldNumber;
const int CommonPara::kBLockFieldNumber;
const int CommonPara::kITestTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonPara::CommonPara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manuTest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ManuTestPara.CommonPara)
}
CommonPara::CommonPara(const CommonPara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ftrigdelay_, &from.ftrigdelay_,
    reinterpret_cast<char*>(&itesttype_) -
    reinterpret_cast<char*>(&ftrigdelay_) + sizeof(itesttype_));
  // @@protoc_insertion_point(copy_constructor:ManuTestPara.CommonPara)
}

void CommonPara::SharedCtor() {
  ::memset(&ftrigdelay_, 0, reinterpret_cast<char*>(&itesttype_) -
    reinterpret_cast<char*>(&ftrigdelay_) + sizeof(itesttype_));
  _cached_size_ = 0;
}

CommonPara::~CommonPara() {
  // @@protoc_insertion_point(destructor:ManuTestPara.CommonPara)
  SharedDtor();
}

void CommonPara::SharedDtor() {
}

void CommonPara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonPara::descriptor() {
  protobuf_manuTest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manuTest_2eproto::file_level_metadata[1].descriptor;
}

const CommonPara& CommonPara::default_instance() {
  protobuf_manuTest_2eproto::InitDefaults();
  return *internal_default_instance();
}

CommonPara* CommonPara::New(::google::protobuf::Arena* arena) const {
  CommonPara* n = new CommonPara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommonPara::Clear() {
// @@protoc_insertion_point(message_clear_start:ManuTestPara.CommonPara)
  ::memset(&ftrigdelay_, 0, reinterpret_cast<char*>(&itesttype_) -
    reinterpret_cast<char*>(&ftrigdelay_) + sizeof(itesttype_));
}

bool CommonPara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ManuTestPara.CommonPara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float fTrigDelay = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ftrigdelay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bAgingTest = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bagingtest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bDcTest = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bdctest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bAutoTest = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bautotest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bLock = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &block_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iTestType = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itesttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ManuTestPara.CommonPara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ManuTestPara.CommonPara)
  return false;
#undef DO_
}

void CommonPara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ManuTestPara.CommonPara)
  // float fTrigDelay = 1;
  if (this->ftrigdelay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->ftrigdelay(), output);
  }

  // bool bAgingTest = 2;
  if (this->bagingtest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bagingtest(), output);
  }

  // bool bDcTest = 3;
  if (this->bdctest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bdctest(), output);
  }

  // bool bAutoTest = 4;
  if (this->bautotest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bautotest(), output);
  }

  // bool bLock = 5;
  if (this->block() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->block(), output);
  }

  // uint32 iTestType = 6;
  if (this->itesttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->itesttype(), output);
  }

  // @@protoc_insertion_point(serialize_end:ManuTestPara.CommonPara)
}

::google::protobuf::uint8* CommonPara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ManuTestPara.CommonPara)
  // float fTrigDelay = 1;
  if (this->ftrigdelay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->ftrigdelay(), target);
  }

  // bool bAgingTest = 2;
  if (this->bagingtest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bagingtest(), target);
  }

  // bool bDcTest = 3;
  if (this->bdctest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bdctest(), target);
  }

  // bool bAutoTest = 4;
  if (this->bautotest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bautotest(), target);
  }

  // bool bLock = 5;
  if (this->block() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->block(), target);
  }

  // uint32 iTestType = 6;
  if (this->itesttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->itesttype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ManuTestPara.CommonPara)
  return target;
}

size_t CommonPara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManuTestPara.CommonPara)
  size_t total_size = 0;

  // float fTrigDelay = 1;
  if (this->ftrigdelay() != 0) {
    total_size += 1 + 4;
  }

  // bool bAgingTest = 2;
  if (this->bagingtest() != 0) {
    total_size += 1 + 1;
  }

  // bool bDcTest = 3;
  if (this->bdctest() != 0) {
    total_size += 1 + 1;
  }

  // bool bAutoTest = 4;
  if (this->bautotest() != 0) {
    total_size += 1 + 1;
  }

  // bool bLock = 5;
  if (this->block() != 0) {
    total_size += 1 + 1;
  }

  // uint32 iTestType = 6;
  if (this->itesttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itesttype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonPara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ManuTestPara.CommonPara)
  GOOGLE_DCHECK_NE(&from, this);
  const CommonPara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonPara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ManuTestPara.CommonPara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ManuTestPara.CommonPara)
    MergeFrom(*source);
  }
}

void CommonPara::MergeFrom(const CommonPara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ManuTestPara.CommonPara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ftrigdelay() != 0) {
    set_ftrigdelay(from.ftrigdelay());
  }
  if (from.bagingtest() != 0) {
    set_bagingtest(from.bagingtest());
  }
  if (from.bdctest() != 0) {
    set_bdctest(from.bdctest());
  }
  if (from.bautotest() != 0) {
    set_bautotest(from.bautotest());
  }
  if (from.block() != 0) {
    set_block(from.block());
  }
  if (from.itesttype() != 0) {
    set_itesttype(from.itesttype());
  }
}

void CommonPara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ManuTestPara.CommonPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonPara::CopyFrom(const CommonPara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManuTestPara.CommonPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonPara::IsInitialized() const {
  return true;
}

void CommonPara::Swap(CommonPara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonPara::InternalSwap(CommonPara* other) {
  std::swap(ftrigdelay_, other->ftrigdelay_);
  std::swap(bagingtest_, other->bagingtest_);
  std::swap(bdctest_, other->bdctest_);
  std::swap(bautotest_, other->bautotest_);
  std::swap(block_, other->block_);
  std::swap(itesttype_, other->itesttype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommonPara::GetMetadata() const {
  protobuf_manuTest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manuTest_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommonPara

// float fTrigDelay = 1;
void CommonPara::clear_ftrigdelay() {
  ftrigdelay_ = 0;
}
float CommonPara::ftrigdelay() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.CommonPara.fTrigDelay)
  return ftrigdelay_;
}
void CommonPara::set_ftrigdelay(float value) {
  
  ftrigdelay_ = value;
  // @@protoc_insertion_point(field_set:ManuTestPara.CommonPara.fTrigDelay)
}

// bool bAgingTest = 2;
void CommonPara::clear_bagingtest() {
  bagingtest_ = false;
}
bool CommonPara::bagingtest() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.CommonPara.bAgingTest)
  return bagingtest_;
}
void CommonPara::set_bagingtest(bool value) {
  
  bagingtest_ = value;
  // @@protoc_insertion_point(field_set:ManuTestPara.CommonPara.bAgingTest)
}

// bool bDcTest = 3;
void CommonPara::clear_bdctest() {
  bdctest_ = false;
}
bool CommonPara::bdctest() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.CommonPara.bDcTest)
  return bdctest_;
}
void CommonPara::set_bdctest(bool value) {
  
  bdctest_ = value;
  // @@protoc_insertion_point(field_set:ManuTestPara.CommonPara.bDcTest)
}

// bool bAutoTest = 4;
void CommonPara::clear_bautotest() {
  bautotest_ = false;
}
bool CommonPara::bautotest() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.CommonPara.bAutoTest)
  return bautotest_;
}
void CommonPara::set_bautotest(bool value) {
  
  bautotest_ = value;
  // @@protoc_insertion_point(field_set:ManuTestPara.CommonPara.bAutoTest)
}

// bool bLock = 5;
void CommonPara::clear_block() {
  block_ = false;
}
bool CommonPara::block() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.CommonPara.bLock)
  return block_;
}
void CommonPara::set_block(bool value) {
  
  block_ = value;
  // @@protoc_insertion_point(field_set:ManuTestPara.CommonPara.bLock)
}

// uint32 iTestType = 6;
void CommonPara::clear_itesttype() {
  itesttype_ = 0u;
}
::google::protobuf::uint32 CommonPara::itesttype() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.CommonPara.iTestType)
  return itesttype_;
}
void CommonPara::set_itesttype(::google::protobuf::uint32 value) {
  
  itesttype_ = value;
  // @@protoc_insertion_point(field_set:ManuTestPara.CommonPara.iTestType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestItem::kOCommonParaFieldNumber;
const int TestItem::kOacanlogparaFieldNumber;
const int TestItem::kOacdigitalparaFieldNumber;
const int TestItem::kOanaGradientparaFieldNumber;
const int TestItem::kOdigGradientparaFieldNumber;
const int TestItem::kOswitchparaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestItem::TestItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manuTest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ManuTestPara.TestItem)
}
TestItem::TestItem(const TestItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ocommonpara()) {
    ocommonpara_ = new ::ManuTestPara::CommonPara(*from.ocommonpara_);
  } else {
    ocommonpara_ = NULL;
  }
  if (from.has_oacanlogpara()) {
    oacanlogpara_ = new ::OutPutCommon::acanalogpara(*from.oacanlogpara_);
  } else {
    oacanlogpara_ = NULL;
  }
  if (from.has_oacdigitalpara()) {
    oacdigitalpara_ = new ::OutPutCommon::acanalogpara(*from.oacdigitalpara_);
  } else {
    oacdigitalpara_ = NULL;
  }
  if (from.has_oanagradientpara()) {
    oanagradientpara_ = new ::OutPutCommon::GradientPara(*from.oanagradientpara_);
  } else {
    oanagradientpara_ = NULL;
  }
  if (from.has_odiggradientpara()) {
    odiggradientpara_ = new ::OutPutCommon::GradientPara(*from.odiggradientpara_);
  } else {
    odiggradientpara_ = NULL;
  }
  if (from.has_oswitchpara()) {
    oswitchpara_ = new ::ManuTestPara::SwitchPara(*from.oswitchpara_);
  } else {
    oswitchpara_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ManuTestPara.TestItem)
}

void TestItem::SharedCtor() {
  ::memset(&ocommonpara_, 0, reinterpret_cast<char*>(&oswitchpara_) -
    reinterpret_cast<char*>(&ocommonpara_) + sizeof(oswitchpara_));
  _cached_size_ = 0;
}

TestItem::~TestItem() {
  // @@protoc_insertion_point(destructor:ManuTestPara.TestItem)
  SharedDtor();
}

void TestItem::SharedDtor() {
  if (this != internal_default_instance()) {
    delete ocommonpara_;
  }
  if (this != internal_default_instance()) {
    delete oacanlogpara_;
  }
  if (this != internal_default_instance()) {
    delete oacdigitalpara_;
  }
  if (this != internal_default_instance()) {
    delete oanagradientpara_;
  }
  if (this != internal_default_instance()) {
    delete odiggradientpara_;
  }
  if (this != internal_default_instance()) {
    delete oswitchpara_;
  }
}

void TestItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestItem::descriptor() {
  protobuf_manuTest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manuTest_2eproto::file_level_metadata[2].descriptor;
}

const TestItem& TestItem::default_instance() {
  protobuf_manuTest_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestItem* TestItem::New(::google::protobuf::Arena* arena) const {
  TestItem* n = new TestItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ManuTestPara.TestItem)
  if (GetArenaNoVirtual() == NULL && ocommonpara_ != NULL) {
    delete ocommonpara_;
  }
  ocommonpara_ = NULL;
  if (GetArenaNoVirtual() == NULL && oacanlogpara_ != NULL) {
    delete oacanlogpara_;
  }
  oacanlogpara_ = NULL;
  if (GetArenaNoVirtual() == NULL && oacdigitalpara_ != NULL) {
    delete oacdigitalpara_;
  }
  oacdigitalpara_ = NULL;
  if (GetArenaNoVirtual() == NULL && oanagradientpara_ != NULL) {
    delete oanagradientpara_;
  }
  oanagradientpara_ = NULL;
  if (GetArenaNoVirtual() == NULL && odiggradientpara_ != NULL) {
    delete odiggradientpara_;
  }
  odiggradientpara_ = NULL;
  if (GetArenaNoVirtual() == NULL && oswitchpara_ != NULL) {
    delete oswitchpara_;
  }
  oswitchpara_ = NULL;
}

bool TestItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ManuTestPara.TestItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ManuTestPara.CommonPara oCommonPara = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ocommonpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OutPutCommon.acanalogpara oacanlogpara = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oacanlogpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OutPutCommon.acanalogpara oacdigitalpara = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oacdigitalpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OutPutCommon.GradientPara oanaGradientpara = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oanagradientpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OutPutCommon.GradientPara odigGradientpara = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_odiggradientpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ManuTestPara.SwitchPara oswitchpara = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oswitchpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ManuTestPara.TestItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ManuTestPara.TestItem)
  return false;
#undef DO_
}

void TestItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ManuTestPara.TestItem)
  // .ManuTestPara.CommonPara oCommonPara = 1;
  if (this->has_ocommonpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ocommonpara_, output);
  }

  // .OutPutCommon.acanalogpara oacanlogpara = 2;
  if (this->has_oacanlogpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->oacanlogpara_, output);
  }

  // .OutPutCommon.acanalogpara oacdigitalpara = 3;
  if (this->has_oacdigitalpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->oacdigitalpara_, output);
  }

  // .OutPutCommon.GradientPara oanaGradientpara = 4;
  if (this->has_oanagradientpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->oanagradientpara_, output);
  }

  // .OutPutCommon.GradientPara odigGradientpara = 5;
  if (this->has_odiggradientpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->odiggradientpara_, output);
  }

  // .ManuTestPara.SwitchPara oswitchpara = 6;
  if (this->has_oswitchpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->oswitchpara_, output);
  }

  // @@protoc_insertion_point(serialize_end:ManuTestPara.TestItem)
}

::google::protobuf::uint8* TestItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ManuTestPara.TestItem)
  // .ManuTestPara.CommonPara oCommonPara = 1;
  if (this->has_ocommonpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->ocommonpara_, false, target);
  }

  // .OutPutCommon.acanalogpara oacanlogpara = 2;
  if (this->has_oacanlogpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->oacanlogpara_, false, target);
  }

  // .OutPutCommon.acanalogpara oacdigitalpara = 3;
  if (this->has_oacdigitalpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->oacdigitalpara_, false, target);
  }

  // .OutPutCommon.GradientPara oanaGradientpara = 4;
  if (this->has_oanagradientpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->oanagradientpara_, false, target);
  }

  // .OutPutCommon.GradientPara odigGradientpara = 5;
  if (this->has_odiggradientpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->odiggradientpara_, false, target);
  }

  // .ManuTestPara.SwitchPara oswitchpara = 6;
  if (this->has_oswitchpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->oswitchpara_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ManuTestPara.TestItem)
  return target;
}

size_t TestItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManuTestPara.TestItem)
  size_t total_size = 0;

  // .ManuTestPara.CommonPara oCommonPara = 1;
  if (this->has_ocommonpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ocommonpara_);
  }

  // .OutPutCommon.acanalogpara oacanlogpara = 2;
  if (this->has_oacanlogpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oacanlogpara_);
  }

  // .OutPutCommon.acanalogpara oacdigitalpara = 3;
  if (this->has_oacdigitalpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oacdigitalpara_);
  }

  // .OutPutCommon.GradientPara oanaGradientpara = 4;
  if (this->has_oanagradientpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oanagradientpara_);
  }

  // .OutPutCommon.GradientPara odigGradientpara = 5;
  if (this->has_odiggradientpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->odiggradientpara_);
  }

  // .ManuTestPara.SwitchPara oswitchpara = 6;
  if (this->has_oswitchpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oswitchpara_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ManuTestPara.TestItem)
  GOOGLE_DCHECK_NE(&from, this);
  const TestItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ManuTestPara.TestItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ManuTestPara.TestItem)
    MergeFrom(*source);
  }
}

void TestItem::MergeFrom(const TestItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ManuTestPara.TestItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ocommonpara()) {
    mutable_ocommonpara()->::ManuTestPara::CommonPara::MergeFrom(from.ocommonpara());
  }
  if (from.has_oacanlogpara()) {
    mutable_oacanlogpara()->::OutPutCommon::acanalogpara::MergeFrom(from.oacanlogpara());
  }
  if (from.has_oacdigitalpara()) {
    mutable_oacdigitalpara()->::OutPutCommon::acanalogpara::MergeFrom(from.oacdigitalpara());
  }
  if (from.has_oanagradientpara()) {
    mutable_oanagradientpara()->::OutPutCommon::GradientPara::MergeFrom(from.oanagradientpara());
  }
  if (from.has_odiggradientpara()) {
    mutable_odiggradientpara()->::OutPutCommon::GradientPara::MergeFrom(from.odiggradientpara());
  }
  if (from.has_oswitchpara()) {
    mutable_oswitchpara()->::ManuTestPara::SwitchPara::MergeFrom(from.oswitchpara());
  }
}

void TestItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ManuTestPara.TestItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestItem::CopyFrom(const TestItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManuTestPara.TestItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestItem::IsInitialized() const {
  return true;
}

void TestItem::Swap(TestItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestItem::InternalSwap(TestItem* other) {
  std::swap(ocommonpara_, other->ocommonpara_);
  std::swap(oacanlogpara_, other->oacanlogpara_);
  std::swap(oacdigitalpara_, other->oacdigitalpara_);
  std::swap(oanagradientpara_, other->oanagradientpara_);
  std::swap(odiggradientpara_, other->odiggradientpara_);
  std::swap(oswitchpara_, other->oswitchpara_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestItem::GetMetadata() const {
  protobuf_manuTest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manuTest_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestItem

// .ManuTestPara.CommonPara oCommonPara = 1;
bool TestItem::has_ocommonpara() const {
  return this != internal_default_instance() && ocommonpara_ != NULL;
}
void TestItem::clear_ocommonpara() {
  if (GetArenaNoVirtual() == NULL && ocommonpara_ != NULL) delete ocommonpara_;
  ocommonpara_ = NULL;
}
const ::ManuTestPara::CommonPara& TestItem::ocommonpara() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.TestItem.oCommonPara)
  return ocommonpara_ != NULL ? *ocommonpara_
                         : *::ManuTestPara::CommonPara::internal_default_instance();
}
::ManuTestPara::CommonPara* TestItem::mutable_ocommonpara() {
  
  if (ocommonpara_ == NULL) {
    ocommonpara_ = new ::ManuTestPara::CommonPara;
  }
  // @@protoc_insertion_point(field_mutable:ManuTestPara.TestItem.oCommonPara)
  return ocommonpara_;
}
::ManuTestPara::CommonPara* TestItem::release_ocommonpara() {
  // @@protoc_insertion_point(field_release:ManuTestPara.TestItem.oCommonPara)
  
  ::ManuTestPara::CommonPara* temp = ocommonpara_;
  ocommonpara_ = NULL;
  return temp;
}
void TestItem::set_allocated_ocommonpara(::ManuTestPara::CommonPara* ocommonpara) {
  delete ocommonpara_;
  ocommonpara_ = ocommonpara;
  if (ocommonpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ManuTestPara.TestItem.oCommonPara)
}

// .OutPutCommon.acanalogpara oacanlogpara = 2;
bool TestItem::has_oacanlogpara() const {
  return this != internal_default_instance() && oacanlogpara_ != NULL;
}
void TestItem::clear_oacanlogpara() {
  if (GetArenaNoVirtual() == NULL && oacanlogpara_ != NULL) delete oacanlogpara_;
  oacanlogpara_ = NULL;
}
const ::OutPutCommon::acanalogpara& TestItem::oacanlogpara() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.TestItem.oacanlogpara)
  return oacanlogpara_ != NULL ? *oacanlogpara_
                         : *::OutPutCommon::acanalogpara::internal_default_instance();
}
::OutPutCommon::acanalogpara* TestItem::mutable_oacanlogpara() {
  
  if (oacanlogpara_ == NULL) {
    oacanlogpara_ = new ::OutPutCommon::acanalogpara;
  }
  // @@protoc_insertion_point(field_mutable:ManuTestPara.TestItem.oacanlogpara)
  return oacanlogpara_;
}
::OutPutCommon::acanalogpara* TestItem::release_oacanlogpara() {
  // @@protoc_insertion_point(field_release:ManuTestPara.TestItem.oacanlogpara)
  
  ::OutPutCommon::acanalogpara* temp = oacanlogpara_;
  oacanlogpara_ = NULL;
  return temp;
}
void TestItem::set_allocated_oacanlogpara(::OutPutCommon::acanalogpara* oacanlogpara) {
  delete oacanlogpara_;
  oacanlogpara_ = oacanlogpara;
  if (oacanlogpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ManuTestPara.TestItem.oacanlogpara)
}

// .OutPutCommon.acanalogpara oacdigitalpara = 3;
bool TestItem::has_oacdigitalpara() const {
  return this != internal_default_instance() && oacdigitalpara_ != NULL;
}
void TestItem::clear_oacdigitalpara() {
  if (GetArenaNoVirtual() == NULL && oacdigitalpara_ != NULL) delete oacdigitalpara_;
  oacdigitalpara_ = NULL;
}
const ::OutPutCommon::acanalogpara& TestItem::oacdigitalpara() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.TestItem.oacdigitalpara)
  return oacdigitalpara_ != NULL ? *oacdigitalpara_
                         : *::OutPutCommon::acanalogpara::internal_default_instance();
}
::OutPutCommon::acanalogpara* TestItem::mutable_oacdigitalpara() {
  
  if (oacdigitalpara_ == NULL) {
    oacdigitalpara_ = new ::OutPutCommon::acanalogpara;
  }
  // @@protoc_insertion_point(field_mutable:ManuTestPara.TestItem.oacdigitalpara)
  return oacdigitalpara_;
}
::OutPutCommon::acanalogpara* TestItem::release_oacdigitalpara() {
  // @@protoc_insertion_point(field_release:ManuTestPara.TestItem.oacdigitalpara)
  
  ::OutPutCommon::acanalogpara* temp = oacdigitalpara_;
  oacdigitalpara_ = NULL;
  return temp;
}
void TestItem::set_allocated_oacdigitalpara(::OutPutCommon::acanalogpara* oacdigitalpara) {
  delete oacdigitalpara_;
  oacdigitalpara_ = oacdigitalpara;
  if (oacdigitalpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ManuTestPara.TestItem.oacdigitalpara)
}

// .OutPutCommon.GradientPara oanaGradientpara = 4;
bool TestItem::has_oanagradientpara() const {
  return this != internal_default_instance() && oanagradientpara_ != NULL;
}
void TestItem::clear_oanagradientpara() {
  if (GetArenaNoVirtual() == NULL && oanagradientpara_ != NULL) delete oanagradientpara_;
  oanagradientpara_ = NULL;
}
const ::OutPutCommon::GradientPara& TestItem::oanagradientpara() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.TestItem.oanaGradientpara)
  return oanagradientpara_ != NULL ? *oanagradientpara_
                         : *::OutPutCommon::GradientPara::internal_default_instance();
}
::OutPutCommon::GradientPara* TestItem::mutable_oanagradientpara() {
  
  if (oanagradientpara_ == NULL) {
    oanagradientpara_ = new ::OutPutCommon::GradientPara;
  }
  // @@protoc_insertion_point(field_mutable:ManuTestPara.TestItem.oanaGradientpara)
  return oanagradientpara_;
}
::OutPutCommon::GradientPara* TestItem::release_oanagradientpara() {
  // @@protoc_insertion_point(field_release:ManuTestPara.TestItem.oanaGradientpara)
  
  ::OutPutCommon::GradientPara* temp = oanagradientpara_;
  oanagradientpara_ = NULL;
  return temp;
}
void TestItem::set_allocated_oanagradientpara(::OutPutCommon::GradientPara* oanagradientpara) {
  delete oanagradientpara_;
  oanagradientpara_ = oanagradientpara;
  if (oanagradientpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ManuTestPara.TestItem.oanaGradientpara)
}

// .OutPutCommon.GradientPara odigGradientpara = 5;
bool TestItem::has_odiggradientpara() const {
  return this != internal_default_instance() && odiggradientpara_ != NULL;
}
void TestItem::clear_odiggradientpara() {
  if (GetArenaNoVirtual() == NULL && odiggradientpara_ != NULL) delete odiggradientpara_;
  odiggradientpara_ = NULL;
}
const ::OutPutCommon::GradientPara& TestItem::odiggradientpara() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.TestItem.odigGradientpara)
  return odiggradientpara_ != NULL ? *odiggradientpara_
                         : *::OutPutCommon::GradientPara::internal_default_instance();
}
::OutPutCommon::GradientPara* TestItem::mutable_odiggradientpara() {
  
  if (odiggradientpara_ == NULL) {
    odiggradientpara_ = new ::OutPutCommon::GradientPara;
  }
  // @@protoc_insertion_point(field_mutable:ManuTestPara.TestItem.odigGradientpara)
  return odiggradientpara_;
}
::OutPutCommon::GradientPara* TestItem::release_odiggradientpara() {
  // @@protoc_insertion_point(field_release:ManuTestPara.TestItem.odigGradientpara)
  
  ::OutPutCommon::GradientPara* temp = odiggradientpara_;
  odiggradientpara_ = NULL;
  return temp;
}
void TestItem::set_allocated_odiggradientpara(::OutPutCommon::GradientPara* odiggradientpara) {
  delete odiggradientpara_;
  odiggradientpara_ = odiggradientpara;
  if (odiggradientpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ManuTestPara.TestItem.odigGradientpara)
}

// .ManuTestPara.SwitchPara oswitchpara = 6;
bool TestItem::has_oswitchpara() const {
  return this != internal_default_instance() && oswitchpara_ != NULL;
}
void TestItem::clear_oswitchpara() {
  if (GetArenaNoVirtual() == NULL && oswitchpara_ != NULL) delete oswitchpara_;
  oswitchpara_ = NULL;
}
const ::ManuTestPara::SwitchPara& TestItem::oswitchpara() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.TestItem.oswitchpara)
  return oswitchpara_ != NULL ? *oswitchpara_
                         : *::ManuTestPara::SwitchPara::internal_default_instance();
}
::ManuTestPara::SwitchPara* TestItem::mutable_oswitchpara() {
  
  if (oswitchpara_ == NULL) {
    oswitchpara_ = new ::ManuTestPara::SwitchPara;
  }
  // @@protoc_insertion_point(field_mutable:ManuTestPara.TestItem.oswitchpara)
  return oswitchpara_;
}
::ManuTestPara::SwitchPara* TestItem::release_oswitchpara() {
  // @@protoc_insertion_point(field_release:ManuTestPara.TestItem.oswitchpara)
  
  ::ManuTestPara::SwitchPara* temp = oswitchpara_;
  oswitchpara_ = NULL;
  return temp;
}
void TestItem::set_allocated_oswitchpara(::ManuTestPara::SwitchPara* oswitchpara) {
  delete oswitchpara_;
  oswitchpara_ = oswitchpara;
  if (oswitchpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ManuTestPara.TestItem.oswitchpara)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int realPara::kOacanlogparaFieldNumber;
const int realPara::kOacdigitalparaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

realPara::realPara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_manuTest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ManuTestPara.realPara)
}
realPara::realPara(const realPara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oacanlogpara()) {
    oacanlogpara_ = new ::OutPutCommon::acanalogpara(*from.oacanlogpara_);
  } else {
    oacanlogpara_ = NULL;
  }
  if (from.has_oacdigitalpara()) {
    oacdigitalpara_ = new ::OutPutCommon::acanalogpara(*from.oacdigitalpara_);
  } else {
    oacdigitalpara_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ManuTestPara.realPara)
}

void realPara::SharedCtor() {
  ::memset(&oacanlogpara_, 0, reinterpret_cast<char*>(&oacdigitalpara_) -
    reinterpret_cast<char*>(&oacanlogpara_) + sizeof(oacdigitalpara_));
  _cached_size_ = 0;
}

realPara::~realPara() {
  // @@protoc_insertion_point(destructor:ManuTestPara.realPara)
  SharedDtor();
}

void realPara::SharedDtor() {
  if (this != internal_default_instance()) {
    delete oacanlogpara_;
  }
  if (this != internal_default_instance()) {
    delete oacdigitalpara_;
  }
}

void realPara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* realPara::descriptor() {
  protobuf_manuTest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manuTest_2eproto::file_level_metadata[3].descriptor;
}

const realPara& realPara::default_instance() {
  protobuf_manuTest_2eproto::InitDefaults();
  return *internal_default_instance();
}

realPara* realPara::New(::google::protobuf::Arena* arena) const {
  realPara* n = new realPara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void realPara::Clear() {
// @@protoc_insertion_point(message_clear_start:ManuTestPara.realPara)
  if (GetArenaNoVirtual() == NULL && oacanlogpara_ != NULL) {
    delete oacanlogpara_;
  }
  oacanlogpara_ = NULL;
  if (GetArenaNoVirtual() == NULL && oacdigitalpara_ != NULL) {
    delete oacdigitalpara_;
  }
  oacdigitalpara_ = NULL;
}

bool realPara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ManuTestPara.realPara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .OutPutCommon.acanalogpara oacanlogpara = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oacanlogpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OutPutCommon.acanalogpara oacdigitalpara = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oacdigitalpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ManuTestPara.realPara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ManuTestPara.realPara)
  return false;
#undef DO_
}

void realPara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ManuTestPara.realPara)
  // .OutPutCommon.acanalogpara oacanlogpara = 1;
  if (this->has_oacanlogpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->oacanlogpara_, output);
  }

  // .OutPutCommon.acanalogpara oacdigitalpara = 2;
  if (this->has_oacdigitalpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->oacdigitalpara_, output);
  }

  // @@protoc_insertion_point(serialize_end:ManuTestPara.realPara)
}

::google::protobuf::uint8* realPara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ManuTestPara.realPara)
  // .OutPutCommon.acanalogpara oacanlogpara = 1;
  if (this->has_oacanlogpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->oacanlogpara_, false, target);
  }

  // .OutPutCommon.acanalogpara oacdigitalpara = 2;
  if (this->has_oacdigitalpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->oacdigitalpara_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ManuTestPara.realPara)
  return target;
}

size_t realPara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManuTestPara.realPara)
  size_t total_size = 0;

  // .OutPutCommon.acanalogpara oacanlogpara = 1;
  if (this->has_oacanlogpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oacanlogpara_);
  }

  // .OutPutCommon.acanalogpara oacdigitalpara = 2;
  if (this->has_oacdigitalpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oacdigitalpara_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void realPara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ManuTestPara.realPara)
  GOOGLE_DCHECK_NE(&from, this);
  const realPara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const realPara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ManuTestPara.realPara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ManuTestPara.realPara)
    MergeFrom(*source);
  }
}

void realPara::MergeFrom(const realPara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ManuTestPara.realPara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oacanlogpara()) {
    mutable_oacanlogpara()->::OutPutCommon::acanalogpara::MergeFrom(from.oacanlogpara());
  }
  if (from.has_oacdigitalpara()) {
    mutable_oacdigitalpara()->::OutPutCommon::acanalogpara::MergeFrom(from.oacdigitalpara());
  }
}

void realPara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ManuTestPara.realPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void realPara::CopyFrom(const realPara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManuTestPara.realPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool realPara::IsInitialized() const {
  return true;
}

void realPara::Swap(realPara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void realPara::InternalSwap(realPara* other) {
  std::swap(oacanlogpara_, other->oacanlogpara_);
  std::swap(oacdigitalpara_, other->oacdigitalpara_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata realPara::GetMetadata() const {
  protobuf_manuTest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_manuTest_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// realPara

// .OutPutCommon.acanalogpara oacanlogpara = 1;
bool realPara::has_oacanlogpara() const {
  return this != internal_default_instance() && oacanlogpara_ != NULL;
}
void realPara::clear_oacanlogpara() {
  if (GetArenaNoVirtual() == NULL && oacanlogpara_ != NULL) delete oacanlogpara_;
  oacanlogpara_ = NULL;
}
const ::OutPutCommon::acanalogpara& realPara::oacanlogpara() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.realPara.oacanlogpara)
  return oacanlogpara_ != NULL ? *oacanlogpara_
                         : *::OutPutCommon::acanalogpara::internal_default_instance();
}
::OutPutCommon::acanalogpara* realPara::mutable_oacanlogpara() {
  
  if (oacanlogpara_ == NULL) {
    oacanlogpara_ = new ::OutPutCommon::acanalogpara;
  }
  // @@protoc_insertion_point(field_mutable:ManuTestPara.realPara.oacanlogpara)
  return oacanlogpara_;
}
::OutPutCommon::acanalogpara* realPara::release_oacanlogpara() {
  // @@protoc_insertion_point(field_release:ManuTestPara.realPara.oacanlogpara)
  
  ::OutPutCommon::acanalogpara* temp = oacanlogpara_;
  oacanlogpara_ = NULL;
  return temp;
}
void realPara::set_allocated_oacanlogpara(::OutPutCommon::acanalogpara* oacanlogpara) {
  delete oacanlogpara_;
  oacanlogpara_ = oacanlogpara;
  if (oacanlogpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ManuTestPara.realPara.oacanlogpara)
}

// .OutPutCommon.acanalogpara oacdigitalpara = 2;
bool realPara::has_oacdigitalpara() const {
  return this != internal_default_instance() && oacdigitalpara_ != NULL;
}
void realPara::clear_oacdigitalpara() {
  if (GetArenaNoVirtual() == NULL && oacdigitalpara_ != NULL) delete oacdigitalpara_;
  oacdigitalpara_ = NULL;
}
const ::OutPutCommon::acanalogpara& realPara::oacdigitalpara() const {
  // @@protoc_insertion_point(field_get:ManuTestPara.realPara.oacdigitalpara)
  return oacdigitalpara_ != NULL ? *oacdigitalpara_
                         : *::OutPutCommon::acanalogpara::internal_default_instance();
}
::OutPutCommon::acanalogpara* realPara::mutable_oacdigitalpara() {
  
  if (oacdigitalpara_ == NULL) {
    oacdigitalpara_ = new ::OutPutCommon::acanalogpara;
  }
  // @@protoc_insertion_point(field_mutable:ManuTestPara.realPara.oacdigitalpara)
  return oacdigitalpara_;
}
::OutPutCommon::acanalogpara* realPara::release_oacdigitalpara() {
  // @@protoc_insertion_point(field_release:ManuTestPara.realPara.oacdigitalpara)
  
  ::OutPutCommon::acanalogpara* temp = oacdigitalpara_;
  oacdigitalpara_ = NULL;
  return temp;
}
void realPara::set_allocated_oacdigitalpara(::OutPutCommon::acanalogpara* oacdigitalpara) {
  delete oacdigitalpara_;
  oacdigitalpara_ = oacdigitalpara;
  if (oacdigitalpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ManuTestPara.realPara.oacdigitalpara)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ManuTestPara

// @@protoc_insertion_point(global_scope)
