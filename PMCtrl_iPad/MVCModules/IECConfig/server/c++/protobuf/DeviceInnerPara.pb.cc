// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DeviceInnerPara.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DeviceInnerPara.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DeviceInnerPara {
class DeviceInnerSettingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeviceInnerSetting> {
} _DeviceInnerSetting_default_instance_;
class ModuleInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModuleInfo> {
} _ModuleInfo_default_instance_;
class DASettingsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DASettings> {
} _DASettings_default_instance_;
class DASettingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DASetting> {
} _DASetting_default_instance_;
class AmplifierVoltDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AmplifierVolt> {
} _AmplifierVolt_default_instance_;

namespace protobuf_DeviceInnerPara_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInnerSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInnerSetting, oamplifiervolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceInnerSetting, nmodule_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleInfo, oinnersetting_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DASettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DASettings, odas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DASetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DASetting, fvolt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, fvoltmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, fvoltmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, fvoltdc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, bvoltoverload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, ntemp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, nvoltoverhot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, bdcoverhot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, voltwarining_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmplifierVolt, misswarining_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(DeviceInnerSetting)},
  { 6, -1, sizeof(ModuleInfo)},
  { 11, -1, sizeof(DASettings)},
  { 16, -1, sizeof(DASetting)},
  { 21, -1, sizeof(AmplifierVolt)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceInnerSetting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModuleInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DASettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DASetting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AmplifierVolt_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "DeviceInnerPara.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _DeviceInnerSetting_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ModuleInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _DASettings_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _DASetting_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _AmplifierVolt_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DeviceInnerSetting_default_instance_.DefaultConstruct();
  _ModuleInfo_default_instance_.DefaultConstruct();
  _DASettings_default_instance_.DefaultConstruct();
  _DASetting_default_instance_.DefaultConstruct();
  _AmplifierVolt_default_instance_.DefaultConstruct();
  _DeviceInnerSetting_default_instance_.get_mutable()->oamplifiervolt_ = const_cast< ::DeviceInnerPara::AmplifierVolt*>(
      ::DeviceInnerPara::AmplifierVolt::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\025DeviceInnerPara.proto\022\017DeviceInnerPara"
      "\"]\n\022DeviceInnerSetting\0226\n\016oAmplifierVolt"
      "\030\002 \001(\0132\036.DeviceInnerPara.AmplifierVolt\022\017"
      "\n\007nModule\030\003 \001(\r\"H\n\nModuleInfo\022:\n\roInnerS"
      "etting\030\001 \003(\0132#.DeviceInnerPara.DeviceInn"
      "erSetting\"6\n\nDASettings\022(\n\004odas\030\001 \003(\0132\032."
      "DeviceInnerPara.DASetting\"\032\n\tDASetting\022\r"
      "\n\005fVolt\030\001 \003(\002\"\300\001\n\rAmplifierVolt\022\020\n\010fVolt"
      "Max\030\001 \003(\002\022\020\n\010fVoltMin\030\002 \003(\002\022\017\n\007fVoltDc\030\003"
      " \003(\002\022\025\n\rbVoltOverLoad\030\004 \003(\r\022\r\n\005nTemp\030\005 \003"
      "(\r\022\024\n\014nVoltOverHot\030\006 \001(\r\022\022\n\nbDCOverHot\030\007"
      " \001(\r\022\024\n\014voltwarining\030\010 \001(\r\022\024\n\014misswarini"
      "ng\030\t \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 496);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DeviceInnerPara.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_DeviceInnerPara_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceInnerSetting::kOAmplifierVoltFieldNumber;
const int DeviceInnerSetting::kNModuleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceInnerSetting::DeviceInnerSetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DeviceInnerPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceInnerPara.DeviceInnerSetting)
}
DeviceInnerSetting::DeviceInnerSetting(const DeviceInnerSetting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oamplifiervolt()) {
    oamplifiervolt_ = new ::DeviceInnerPara::AmplifierVolt(*from.oamplifiervolt_);
  } else {
    oamplifiervolt_ = NULL;
  }
  nmodule_ = from.nmodule_;
  // @@protoc_insertion_point(copy_constructor:DeviceInnerPara.DeviceInnerSetting)
}

void DeviceInnerSetting::SharedCtor() {
  ::memset(&oamplifiervolt_, 0, reinterpret_cast<char*>(&nmodule_) -
    reinterpret_cast<char*>(&oamplifiervolt_) + sizeof(nmodule_));
  _cached_size_ = 0;
}

DeviceInnerSetting::~DeviceInnerSetting() {
  // @@protoc_insertion_point(destructor:DeviceInnerPara.DeviceInnerSetting)
  SharedDtor();
}

void DeviceInnerSetting::SharedDtor() {
  if (this != internal_default_instance()) {
    delete oamplifiervolt_;
  }
}

void DeviceInnerSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceInnerSetting::descriptor() {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[0].descriptor;
}

const DeviceInnerSetting& DeviceInnerSetting::default_instance() {
  protobuf_DeviceInnerPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceInnerSetting* DeviceInnerSetting::New(::google::protobuf::Arena* arena) const {
  DeviceInnerSetting* n = new DeviceInnerSetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceInnerSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceInnerPara.DeviceInnerSetting)
  if (GetArenaNoVirtual() == NULL && oamplifiervolt_ != NULL) {
    delete oamplifiervolt_;
  }
  oamplifiervolt_ = NULL;
  nmodule_ = 0u;
}

bool DeviceInnerSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceInnerPara.DeviceInnerSetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .DeviceInnerPara.AmplifierVolt oAmplifierVolt = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oamplifiervolt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nModule = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nmodule_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceInnerPara.DeviceInnerSetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceInnerPara.DeviceInnerSetting)
  return false;
#undef DO_
}

void DeviceInnerSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceInnerPara.DeviceInnerSetting)
  // .DeviceInnerPara.AmplifierVolt oAmplifierVolt = 2;
  if (this->has_oamplifiervolt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->oamplifiervolt_, output);
  }

  // uint32 nModule = 3;
  if (this->nmodule() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nmodule(), output);
  }

  // @@protoc_insertion_point(serialize_end:DeviceInnerPara.DeviceInnerSetting)
}

::google::protobuf::uint8* DeviceInnerSetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceInnerPara.DeviceInnerSetting)
  // .DeviceInnerPara.AmplifierVolt oAmplifierVolt = 2;
  if (this->has_oamplifiervolt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->oamplifiervolt_, false, target);
  }

  // uint32 nModule = 3;
  if (this->nmodule() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->nmodule(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DeviceInnerPara.DeviceInnerSetting)
  return target;
}

size_t DeviceInnerSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceInnerPara.DeviceInnerSetting)
  size_t total_size = 0;

  // .DeviceInnerPara.AmplifierVolt oAmplifierVolt = 2;
  if (this->has_oamplifiervolt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oamplifiervolt_);
  }

  // uint32 nModule = 3;
  if (this->nmodule() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nmodule());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceInnerSetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceInnerPara.DeviceInnerSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceInnerSetting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceInnerSetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceInnerPara.DeviceInnerSetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceInnerPara.DeviceInnerSetting)
    MergeFrom(*source);
  }
}

void DeviceInnerSetting::MergeFrom(const DeviceInnerSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceInnerPara.DeviceInnerSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oamplifiervolt()) {
    mutable_oamplifiervolt()->::DeviceInnerPara::AmplifierVolt::MergeFrom(from.oamplifiervolt());
  }
  if (from.nmodule() != 0) {
    set_nmodule(from.nmodule());
  }
}

void DeviceInnerSetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceInnerPara.DeviceInnerSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceInnerSetting::CopyFrom(const DeviceInnerSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceInnerPara.DeviceInnerSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceInnerSetting::IsInitialized() const {
  return true;
}

void DeviceInnerSetting::Swap(DeviceInnerSetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceInnerSetting::InternalSwap(DeviceInnerSetting* other) {
  std::swap(oamplifiervolt_, other->oamplifiervolt_);
  std::swap(nmodule_, other->nmodule_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceInnerSetting::GetMetadata() const {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceInnerSetting

// .DeviceInnerPara.AmplifierVolt oAmplifierVolt = 2;
bool DeviceInnerSetting::has_oamplifiervolt() const {
  return this != internal_default_instance() && oamplifiervolt_ != NULL;
}
void DeviceInnerSetting::clear_oamplifiervolt() {
  if (GetArenaNoVirtual() == NULL && oamplifiervolt_ != NULL) delete oamplifiervolt_;
  oamplifiervolt_ = NULL;
}
const ::DeviceInnerPara::AmplifierVolt& DeviceInnerSetting::oamplifiervolt() const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.DeviceInnerSetting.oAmplifierVolt)
  return oamplifiervolt_ != NULL ? *oamplifiervolt_
                         : *::DeviceInnerPara::AmplifierVolt::internal_default_instance();
}
::DeviceInnerPara::AmplifierVolt* DeviceInnerSetting::mutable_oamplifiervolt() {
  
  if (oamplifiervolt_ == NULL) {
    oamplifiervolt_ = new ::DeviceInnerPara::AmplifierVolt;
  }
  // @@protoc_insertion_point(field_mutable:DeviceInnerPara.DeviceInnerSetting.oAmplifierVolt)
  return oamplifiervolt_;
}
::DeviceInnerPara::AmplifierVolt* DeviceInnerSetting::release_oamplifiervolt() {
  // @@protoc_insertion_point(field_release:DeviceInnerPara.DeviceInnerSetting.oAmplifierVolt)
  
  ::DeviceInnerPara::AmplifierVolt* temp = oamplifiervolt_;
  oamplifiervolt_ = NULL;
  return temp;
}
void DeviceInnerSetting::set_allocated_oamplifiervolt(::DeviceInnerPara::AmplifierVolt* oamplifiervolt) {
  delete oamplifiervolt_;
  oamplifiervolt_ = oamplifiervolt;
  if (oamplifiervolt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DeviceInnerPara.DeviceInnerSetting.oAmplifierVolt)
}

// uint32 nModule = 3;
void DeviceInnerSetting::clear_nmodule() {
  nmodule_ = 0u;
}
::google::protobuf::uint32 DeviceInnerSetting::nmodule() const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.DeviceInnerSetting.nModule)
  return nmodule_;
}
void DeviceInnerSetting::set_nmodule(::google::protobuf::uint32 value) {
  
  nmodule_ = value;
  // @@protoc_insertion_point(field_set:DeviceInnerPara.DeviceInnerSetting.nModule)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleInfo::kOInnerSettingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleInfo::ModuleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DeviceInnerPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceInnerPara.ModuleInfo)
}
ModuleInfo::ModuleInfo(const ModuleInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      oinnersetting_(from.oinnersetting_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DeviceInnerPara.ModuleInfo)
}

void ModuleInfo::SharedCtor() {
  _cached_size_ = 0;
}

ModuleInfo::~ModuleInfo() {
  // @@protoc_insertion_point(destructor:DeviceInnerPara.ModuleInfo)
  SharedDtor();
}

void ModuleInfo::SharedDtor() {
}

void ModuleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModuleInfo::descriptor() {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[1].descriptor;
}

const ModuleInfo& ModuleInfo::default_instance() {
  protobuf_DeviceInnerPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModuleInfo* ModuleInfo::New(::google::protobuf::Arena* arena) const {
  ModuleInfo* n = new ModuleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModuleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceInnerPara.ModuleInfo)
  oinnersetting_.Clear();
}

bool ModuleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceInnerPara.ModuleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DeviceInnerPara.DeviceInnerSetting oInnerSetting = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_oinnersetting()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceInnerPara.ModuleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceInnerPara.ModuleInfo)
  return false;
#undef DO_
}

void ModuleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceInnerPara.ModuleInfo)
  // repeated .DeviceInnerPara.DeviceInnerSetting oInnerSetting = 1;
  for (unsigned int i = 0, n = this->oinnersetting_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->oinnersetting(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DeviceInnerPara.ModuleInfo)
}

::google::protobuf::uint8* ModuleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceInnerPara.ModuleInfo)
  // repeated .DeviceInnerPara.DeviceInnerSetting oInnerSetting = 1;
  for (unsigned int i = 0, n = this->oinnersetting_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->oinnersetting(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DeviceInnerPara.ModuleInfo)
  return target;
}

size_t ModuleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceInnerPara.ModuleInfo)
  size_t total_size = 0;

  // repeated .DeviceInnerPara.DeviceInnerSetting oInnerSetting = 1;
  {
    unsigned int count = this->oinnersetting_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oinnersetting(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModuleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceInnerPara.ModuleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceInnerPara.ModuleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceInnerPara.ModuleInfo)
    MergeFrom(*source);
  }
}

void ModuleInfo::MergeFrom(const ModuleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceInnerPara.ModuleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oinnersetting_.MergeFrom(from.oinnersetting_);
}

void ModuleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceInnerPara.ModuleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleInfo::CopyFrom(const ModuleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceInnerPara.ModuleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleInfo::IsInitialized() const {
  return true;
}

void ModuleInfo::Swap(ModuleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleInfo::InternalSwap(ModuleInfo* other) {
  oinnersetting_.UnsafeArenaSwap(&other->oinnersetting_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModuleInfo::GetMetadata() const {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModuleInfo

// repeated .DeviceInnerPara.DeviceInnerSetting oInnerSetting = 1;
int ModuleInfo::oinnersetting_size() const {
  return oinnersetting_.size();
}
void ModuleInfo::clear_oinnersetting() {
  oinnersetting_.Clear();
}
const ::DeviceInnerPara::DeviceInnerSetting& ModuleInfo::oinnersetting(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.ModuleInfo.oInnerSetting)
  return oinnersetting_.Get(index);
}
::DeviceInnerPara::DeviceInnerSetting* ModuleInfo::mutable_oinnersetting(int index) {
  // @@protoc_insertion_point(field_mutable:DeviceInnerPara.ModuleInfo.oInnerSetting)
  return oinnersetting_.Mutable(index);
}
::DeviceInnerPara::DeviceInnerSetting* ModuleInfo::add_oinnersetting() {
  // @@protoc_insertion_point(field_add:DeviceInnerPara.ModuleInfo.oInnerSetting)
  return oinnersetting_.Add();
}
::google::protobuf::RepeatedPtrField< ::DeviceInnerPara::DeviceInnerSetting >*
ModuleInfo::mutable_oinnersetting() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.ModuleInfo.oInnerSetting)
  return &oinnersetting_;
}
const ::google::protobuf::RepeatedPtrField< ::DeviceInnerPara::DeviceInnerSetting >&
ModuleInfo::oinnersetting() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.ModuleInfo.oInnerSetting)
  return oinnersetting_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DASettings::kOdasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DASettings::DASettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DeviceInnerPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceInnerPara.DASettings)
}
DASettings::DASettings(const DASettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      odas_(from.odas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DeviceInnerPara.DASettings)
}

void DASettings::SharedCtor() {
  _cached_size_ = 0;
}

DASettings::~DASettings() {
  // @@protoc_insertion_point(destructor:DeviceInnerPara.DASettings)
  SharedDtor();
}

void DASettings::SharedDtor() {
}

void DASettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DASettings::descriptor() {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[2].descriptor;
}

const DASettings& DASettings::default_instance() {
  protobuf_DeviceInnerPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

DASettings* DASettings::New(::google::protobuf::Arena* arena) const {
  DASettings* n = new DASettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DASettings::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceInnerPara.DASettings)
  odas_.Clear();
}

bool DASettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceInnerPara.DASettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DeviceInnerPara.DASetting odas = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_odas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceInnerPara.DASettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceInnerPara.DASettings)
  return false;
#undef DO_
}

void DASettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceInnerPara.DASettings)
  // repeated .DeviceInnerPara.DASetting odas = 1;
  for (unsigned int i = 0, n = this->odas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->odas(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DeviceInnerPara.DASettings)
}

::google::protobuf::uint8* DASettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceInnerPara.DASettings)
  // repeated .DeviceInnerPara.DASetting odas = 1;
  for (unsigned int i = 0, n = this->odas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->odas(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DeviceInnerPara.DASettings)
  return target;
}

size_t DASettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceInnerPara.DASettings)
  size_t total_size = 0;

  // repeated .DeviceInnerPara.DASetting odas = 1;
  {
    unsigned int count = this->odas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->odas(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DASettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceInnerPara.DASettings)
  GOOGLE_DCHECK_NE(&from, this);
  const DASettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DASettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceInnerPara.DASettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceInnerPara.DASettings)
    MergeFrom(*source);
  }
}

void DASettings::MergeFrom(const DASettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceInnerPara.DASettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  odas_.MergeFrom(from.odas_);
}

void DASettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceInnerPara.DASettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DASettings::CopyFrom(const DASettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceInnerPara.DASettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DASettings::IsInitialized() const {
  return true;
}

void DASettings::Swap(DASettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DASettings::InternalSwap(DASettings* other) {
  odas_.UnsafeArenaSwap(&other->odas_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DASettings::GetMetadata() const {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DASettings

// repeated .DeviceInnerPara.DASetting odas = 1;
int DASettings::odas_size() const {
  return odas_.size();
}
void DASettings::clear_odas() {
  odas_.Clear();
}
const ::DeviceInnerPara::DASetting& DASettings::odas(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.DASettings.odas)
  return odas_.Get(index);
}
::DeviceInnerPara::DASetting* DASettings::mutable_odas(int index) {
  // @@protoc_insertion_point(field_mutable:DeviceInnerPara.DASettings.odas)
  return odas_.Mutable(index);
}
::DeviceInnerPara::DASetting* DASettings::add_odas() {
  // @@protoc_insertion_point(field_add:DeviceInnerPara.DASettings.odas)
  return odas_.Add();
}
::google::protobuf::RepeatedPtrField< ::DeviceInnerPara::DASetting >*
DASettings::mutable_odas() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.DASettings.odas)
  return &odas_;
}
const ::google::protobuf::RepeatedPtrField< ::DeviceInnerPara::DASetting >&
DASettings::odas() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.DASettings.odas)
  return odas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DASetting::kFVoltFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DASetting::DASetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DeviceInnerPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceInnerPara.DASetting)
}
DASetting::DASetting(const DASetting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fvolt_(from.fvolt_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DeviceInnerPara.DASetting)
}

void DASetting::SharedCtor() {
  _cached_size_ = 0;
}

DASetting::~DASetting() {
  // @@protoc_insertion_point(destructor:DeviceInnerPara.DASetting)
  SharedDtor();
}

void DASetting::SharedDtor() {
}

void DASetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DASetting::descriptor() {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[3].descriptor;
}

const DASetting& DASetting::default_instance() {
  protobuf_DeviceInnerPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

DASetting* DASetting::New(::google::protobuf::Arena* arena) const {
  DASetting* n = new DASetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DASetting::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceInnerPara.DASetting)
  fvolt_.Clear();
}

bool DASetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceInnerPara.DASetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float fVolt = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fvolt())));
        } else if (tag == 13u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_fvolt())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceInnerPara.DASetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceInnerPara.DASetting)
  return false;
#undef DO_
}

void DASetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceInnerPara.DASetting)
  // repeated float fVolt = 1;
  if (this->fvolt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fvolt_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->fvolt().data(), this->fvolt_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:DeviceInnerPara.DASetting)
}

::google::protobuf::uint8* DASetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceInnerPara.DASetting)
  // repeated float fVolt = 1;
  if (this->fvolt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fvolt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fvolt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fvolt(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DeviceInnerPara.DASetting)
  return target;
}

size_t DASetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceInnerPara.DASetting)
  size_t total_size = 0;

  // repeated float fVolt = 1;
  {
    unsigned int count = this->fvolt_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fvolt_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DASetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceInnerPara.DASetting)
  GOOGLE_DCHECK_NE(&from, this);
  const DASetting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DASetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceInnerPara.DASetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceInnerPara.DASetting)
    MergeFrom(*source);
  }
}

void DASetting::MergeFrom(const DASetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceInnerPara.DASetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fvolt_.MergeFrom(from.fvolt_);
}

void DASetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceInnerPara.DASetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DASetting::CopyFrom(const DASetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceInnerPara.DASetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DASetting::IsInitialized() const {
  return true;
}

void DASetting::Swap(DASetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DASetting::InternalSwap(DASetting* other) {
  fvolt_.UnsafeArenaSwap(&other->fvolt_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DASetting::GetMetadata() const {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DASetting

// repeated float fVolt = 1;
int DASetting::fvolt_size() const {
  return fvolt_.size();
}
void DASetting::clear_fvolt() {
  fvolt_.Clear();
}
float DASetting::fvolt(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.DASetting.fVolt)
  return fvolt_.Get(index);
}
void DASetting::set_fvolt(int index, float value) {
  fvolt_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.DASetting.fVolt)
}
void DASetting::add_fvolt(float value) {
  fvolt_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.DASetting.fVolt)
}
const ::google::protobuf::RepeatedField< float >&
DASetting::fvolt() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.DASetting.fVolt)
  return fvolt_;
}
::google::protobuf::RepeatedField< float >*
DASetting::mutable_fvolt() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.DASetting.fVolt)
  return &fvolt_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AmplifierVolt::kFVoltMaxFieldNumber;
const int AmplifierVolt::kFVoltMinFieldNumber;
const int AmplifierVolt::kFVoltDcFieldNumber;
const int AmplifierVolt::kBVoltOverLoadFieldNumber;
const int AmplifierVolt::kNTempFieldNumber;
const int AmplifierVolt::kNVoltOverHotFieldNumber;
const int AmplifierVolt::kBDCOverHotFieldNumber;
const int AmplifierVolt::kVoltwariningFieldNumber;
const int AmplifierVolt::kMisswariningFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AmplifierVolt::AmplifierVolt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DeviceInnerPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceInnerPara.AmplifierVolt)
}
AmplifierVolt::AmplifierVolt(const AmplifierVolt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fvoltmax_(from.fvoltmax_),
      fvoltmin_(from.fvoltmin_),
      fvoltdc_(from.fvoltdc_),
      bvoltoverload_(from.bvoltoverload_),
      ntemp_(from.ntemp_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nvoltoverhot_, &from.nvoltoverhot_,
    reinterpret_cast<char*>(&misswarining_) -
    reinterpret_cast<char*>(&nvoltoverhot_) + sizeof(misswarining_));
  // @@protoc_insertion_point(copy_constructor:DeviceInnerPara.AmplifierVolt)
}

void AmplifierVolt::SharedCtor() {
  ::memset(&nvoltoverhot_, 0, reinterpret_cast<char*>(&misswarining_) -
    reinterpret_cast<char*>(&nvoltoverhot_) + sizeof(misswarining_));
  _cached_size_ = 0;
}

AmplifierVolt::~AmplifierVolt() {
  // @@protoc_insertion_point(destructor:DeviceInnerPara.AmplifierVolt)
  SharedDtor();
}

void AmplifierVolt::SharedDtor() {
}

void AmplifierVolt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AmplifierVolt::descriptor() {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[4].descriptor;
}

const AmplifierVolt& AmplifierVolt::default_instance() {
  protobuf_DeviceInnerPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

AmplifierVolt* AmplifierVolt::New(::google::protobuf::Arena* arena) const {
  AmplifierVolt* n = new AmplifierVolt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AmplifierVolt::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceInnerPara.AmplifierVolt)
  fvoltmax_.Clear();
  fvoltmin_.Clear();
  fvoltdc_.Clear();
  bvoltoverload_.Clear();
  ntemp_.Clear();
  ::memset(&nvoltoverhot_, 0, reinterpret_cast<char*>(&misswarining_) -
    reinterpret_cast<char*>(&nvoltoverhot_) + sizeof(misswarining_));
}

bool AmplifierVolt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceInnerPara.AmplifierVolt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float fVoltMax = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fvoltmax())));
        } else if (tag == 13u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_fvoltmax())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float fVoltMin = 2;
      case 2: {
        if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fvoltmin())));
        } else if (tag == 21u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_fvoltmin())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float fVoltDc = 3;
      case 3: {
        if (tag == 26u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fvoltdc())));
        } else if (tag == 29u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_fvoltdc())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 bVoltOverLoad = 4;
      case 4: {
        if (tag == 34u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_bvoltoverload())));
        } else if (tag == 32u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_bvoltoverload())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 nTemp = 5;
      case 5: {
        if (tag == 42u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ntemp())));
        } else if (tag == 40u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_ntemp())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nVoltOverHot = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nvoltoverhot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bDCOverHot = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bdcoverhot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 voltwarining = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &voltwarining_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 misswarining = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &misswarining_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceInnerPara.AmplifierVolt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceInnerPara.AmplifierVolt)
  return false;
#undef DO_
}

void AmplifierVolt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceInnerPara.AmplifierVolt)
  // repeated float fVoltMax = 1;
  if (this->fvoltmax_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fvoltmax_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->fvoltmax().data(), this->fvoltmax_size(), output);
  }

  // repeated float fVoltMin = 2;
  if (this->fvoltmin_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fvoltmin_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->fvoltmin().data(), this->fvoltmin_size(), output);
  }

  // repeated float fVoltDc = 3;
  if (this->fvoltdc_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fvoltdc_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->fvoltdc().data(), this->fvoltdc_size(), output);
  }

  // repeated uint32 bVoltOverLoad = 4;
  if (this->bvoltoverload_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bvoltoverload_cached_byte_size_);
  }
  for (int i = 0; i < this->bvoltoverload_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->bvoltoverload(i), output);
  }

  // repeated uint32 nTemp = 5;
  if (this->ntemp_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_ntemp_cached_byte_size_);
  }
  for (int i = 0; i < this->ntemp_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->ntemp(i), output);
  }

  // uint32 nVoltOverHot = 6;
  if (this->nvoltoverhot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->nvoltoverhot(), output);
  }

  // uint32 bDCOverHot = 7;
  if (this->bdcoverhot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->bdcoverhot(), output);
  }

  // uint32 voltwarining = 8;
  if (this->voltwarining() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->voltwarining(), output);
  }

  // uint32 misswarining = 9;
  if (this->misswarining() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->misswarining(), output);
  }

  // @@protoc_insertion_point(serialize_end:DeviceInnerPara.AmplifierVolt)
}

::google::protobuf::uint8* AmplifierVolt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceInnerPara.AmplifierVolt)
  // repeated float fVoltMax = 1;
  if (this->fvoltmax_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fvoltmax_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fvoltmax_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fvoltmax(i), target);
  }

  // repeated float fVoltMin = 2;
  if (this->fvoltmin_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fvoltmin_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fvoltmin_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fvoltmin(i), target);
  }

  // repeated float fVoltDc = 3;
  if (this->fvoltdc_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fvoltdc_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fvoltdc_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fvoltdc(i), target);
  }

  // repeated uint32 bVoltOverLoad = 4;
  if (this->bvoltoverload_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _bvoltoverload_cached_byte_size_, target);
  }
  for (int i = 0; i < this->bvoltoverload_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->bvoltoverload(i), target);
  }

  // repeated uint32 nTemp = 5;
  if (this->ntemp_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _ntemp_cached_byte_size_, target);
  }
  for (int i = 0; i < this->ntemp_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->ntemp(i), target);
  }

  // uint32 nVoltOverHot = 6;
  if (this->nvoltoverhot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->nvoltoverhot(), target);
  }

  // uint32 bDCOverHot = 7;
  if (this->bdcoverhot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->bdcoverhot(), target);
  }

  // uint32 voltwarining = 8;
  if (this->voltwarining() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->voltwarining(), target);
  }

  // uint32 misswarining = 9;
  if (this->misswarining() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->misswarining(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DeviceInnerPara.AmplifierVolt)
  return target;
}

size_t AmplifierVolt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceInnerPara.AmplifierVolt)
  size_t total_size = 0;

  // repeated float fVoltMax = 1;
  {
    unsigned int count = this->fvoltmax_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fvoltmax_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float fVoltMin = 2;
  {
    unsigned int count = this->fvoltmin_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fvoltmin_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float fVoltDc = 3;
  {
    unsigned int count = this->fvoltdc_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fvoltdc_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 bVoltOverLoad = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->bvoltoverload_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bvoltoverload_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 nTemp = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->ntemp_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ntemp_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 nVoltOverHot = 6;
  if (this->nvoltoverhot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nvoltoverhot());
  }

  // uint32 bDCOverHot = 7;
  if (this->bdcoverhot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bdcoverhot());
  }

  // uint32 voltwarining = 8;
  if (this->voltwarining() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->voltwarining());
  }

  // uint32 misswarining = 9;
  if (this->misswarining() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->misswarining());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AmplifierVolt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceInnerPara.AmplifierVolt)
  GOOGLE_DCHECK_NE(&from, this);
  const AmplifierVolt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AmplifierVolt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceInnerPara.AmplifierVolt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceInnerPara.AmplifierVolt)
    MergeFrom(*source);
  }
}

void AmplifierVolt::MergeFrom(const AmplifierVolt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceInnerPara.AmplifierVolt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fvoltmax_.MergeFrom(from.fvoltmax_);
  fvoltmin_.MergeFrom(from.fvoltmin_);
  fvoltdc_.MergeFrom(from.fvoltdc_);
  bvoltoverload_.MergeFrom(from.bvoltoverload_);
  ntemp_.MergeFrom(from.ntemp_);
  if (from.nvoltoverhot() != 0) {
    set_nvoltoverhot(from.nvoltoverhot());
  }
  if (from.bdcoverhot() != 0) {
    set_bdcoverhot(from.bdcoverhot());
  }
  if (from.voltwarining() != 0) {
    set_voltwarining(from.voltwarining());
  }
  if (from.misswarining() != 0) {
    set_misswarining(from.misswarining());
  }
}

void AmplifierVolt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceInnerPara.AmplifierVolt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AmplifierVolt::CopyFrom(const AmplifierVolt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceInnerPara.AmplifierVolt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AmplifierVolt::IsInitialized() const {
  return true;
}

void AmplifierVolt::Swap(AmplifierVolt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AmplifierVolt::InternalSwap(AmplifierVolt* other) {
  fvoltmax_.UnsafeArenaSwap(&other->fvoltmax_);
  fvoltmin_.UnsafeArenaSwap(&other->fvoltmin_);
  fvoltdc_.UnsafeArenaSwap(&other->fvoltdc_);
  bvoltoverload_.UnsafeArenaSwap(&other->bvoltoverload_);
  ntemp_.UnsafeArenaSwap(&other->ntemp_);
  std::swap(nvoltoverhot_, other->nvoltoverhot_);
  std::swap(bdcoverhot_, other->bdcoverhot_);
  std::swap(voltwarining_, other->voltwarining_);
  std::swap(misswarining_, other->misswarining_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AmplifierVolt::GetMetadata() const {
  protobuf_DeviceInnerPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DeviceInnerPara_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AmplifierVolt

// repeated float fVoltMax = 1;
int AmplifierVolt::fvoltmax_size() const {
  return fvoltmax_.size();
}
void AmplifierVolt::clear_fvoltmax() {
  fvoltmax_.Clear();
}
float AmplifierVolt::fvoltmax(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.fVoltMax)
  return fvoltmax_.Get(index);
}
void AmplifierVolt::set_fvoltmax(int index, float value) {
  fvoltmax_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.fVoltMax)
}
void AmplifierVolt::add_fvoltmax(float value) {
  fvoltmax_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.AmplifierVolt.fVoltMax)
}
const ::google::protobuf::RepeatedField< float >&
AmplifierVolt::fvoltmax() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.AmplifierVolt.fVoltMax)
  return fvoltmax_;
}
::google::protobuf::RepeatedField< float >*
AmplifierVolt::mutable_fvoltmax() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.AmplifierVolt.fVoltMax)
  return &fvoltmax_;
}

// repeated float fVoltMin = 2;
int AmplifierVolt::fvoltmin_size() const {
  return fvoltmin_.size();
}
void AmplifierVolt::clear_fvoltmin() {
  fvoltmin_.Clear();
}
float AmplifierVolt::fvoltmin(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.fVoltMin)
  return fvoltmin_.Get(index);
}
void AmplifierVolt::set_fvoltmin(int index, float value) {
  fvoltmin_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.fVoltMin)
}
void AmplifierVolt::add_fvoltmin(float value) {
  fvoltmin_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.AmplifierVolt.fVoltMin)
}
const ::google::protobuf::RepeatedField< float >&
AmplifierVolt::fvoltmin() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.AmplifierVolt.fVoltMin)
  return fvoltmin_;
}
::google::protobuf::RepeatedField< float >*
AmplifierVolt::mutable_fvoltmin() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.AmplifierVolt.fVoltMin)
  return &fvoltmin_;
}

// repeated float fVoltDc = 3;
int AmplifierVolt::fvoltdc_size() const {
  return fvoltdc_.size();
}
void AmplifierVolt::clear_fvoltdc() {
  fvoltdc_.Clear();
}
float AmplifierVolt::fvoltdc(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.fVoltDc)
  return fvoltdc_.Get(index);
}
void AmplifierVolt::set_fvoltdc(int index, float value) {
  fvoltdc_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.fVoltDc)
}
void AmplifierVolt::add_fvoltdc(float value) {
  fvoltdc_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.AmplifierVolt.fVoltDc)
}
const ::google::protobuf::RepeatedField< float >&
AmplifierVolt::fvoltdc() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.AmplifierVolt.fVoltDc)
  return fvoltdc_;
}
::google::protobuf::RepeatedField< float >*
AmplifierVolt::mutable_fvoltdc() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.AmplifierVolt.fVoltDc)
  return &fvoltdc_;
}

// repeated uint32 bVoltOverLoad = 4;
int AmplifierVolt::bvoltoverload_size() const {
  return bvoltoverload_.size();
}
void AmplifierVolt::clear_bvoltoverload() {
  bvoltoverload_.Clear();
}
::google::protobuf::uint32 AmplifierVolt::bvoltoverload(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.bVoltOverLoad)
  return bvoltoverload_.Get(index);
}
void AmplifierVolt::set_bvoltoverload(int index, ::google::protobuf::uint32 value) {
  bvoltoverload_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.bVoltOverLoad)
}
void AmplifierVolt::add_bvoltoverload(::google::protobuf::uint32 value) {
  bvoltoverload_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.AmplifierVolt.bVoltOverLoad)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AmplifierVolt::bvoltoverload() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.AmplifierVolt.bVoltOverLoad)
  return bvoltoverload_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AmplifierVolt::mutable_bvoltoverload() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.AmplifierVolt.bVoltOverLoad)
  return &bvoltoverload_;
}

// repeated uint32 nTemp = 5;
int AmplifierVolt::ntemp_size() const {
  return ntemp_.size();
}
void AmplifierVolt::clear_ntemp() {
  ntemp_.Clear();
}
::google::protobuf::uint32 AmplifierVolt::ntemp(int index) const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.nTemp)
  return ntemp_.Get(index);
}
void AmplifierVolt::set_ntemp(int index, ::google::protobuf::uint32 value) {
  ntemp_.Set(index, value);
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.nTemp)
}
void AmplifierVolt::add_ntemp(::google::protobuf::uint32 value) {
  ntemp_.Add(value);
  // @@protoc_insertion_point(field_add:DeviceInnerPara.AmplifierVolt.nTemp)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AmplifierVolt::ntemp() const {
  // @@protoc_insertion_point(field_list:DeviceInnerPara.AmplifierVolt.nTemp)
  return ntemp_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AmplifierVolt::mutable_ntemp() {
  // @@protoc_insertion_point(field_mutable_list:DeviceInnerPara.AmplifierVolt.nTemp)
  return &ntemp_;
}

// uint32 nVoltOverHot = 6;
void AmplifierVolt::clear_nvoltoverhot() {
  nvoltoverhot_ = 0u;
}
::google::protobuf::uint32 AmplifierVolt::nvoltoverhot() const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.nVoltOverHot)
  return nvoltoverhot_;
}
void AmplifierVolt::set_nvoltoverhot(::google::protobuf::uint32 value) {
  
  nvoltoverhot_ = value;
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.nVoltOverHot)
}

// uint32 bDCOverHot = 7;
void AmplifierVolt::clear_bdcoverhot() {
  bdcoverhot_ = 0u;
}
::google::protobuf::uint32 AmplifierVolt::bdcoverhot() const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.bDCOverHot)
  return bdcoverhot_;
}
void AmplifierVolt::set_bdcoverhot(::google::protobuf::uint32 value) {
  
  bdcoverhot_ = value;
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.bDCOverHot)
}

// uint32 voltwarining = 8;
void AmplifierVolt::clear_voltwarining() {
  voltwarining_ = 0u;
}
::google::protobuf::uint32 AmplifierVolt::voltwarining() const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.voltwarining)
  return voltwarining_;
}
void AmplifierVolt::set_voltwarining(::google::protobuf::uint32 value) {
  
  voltwarining_ = value;
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.voltwarining)
}

// uint32 misswarining = 9;
void AmplifierVolt::clear_misswarining() {
  misswarining_ = 0u;
}
::google::protobuf::uint32 AmplifierVolt::misswarining() const {
  // @@protoc_insertion_point(field_get:DeviceInnerPara.AmplifierVolt.misswarining)
  return misswarining_;
}
void AmplifierVolt::set_misswarining(::google::protobuf::uint32 value) {
  
  misswarining_ = value;
  // @@protoc_insertion_point(field_set:DeviceInnerPara.AmplifierVolt.misswarining)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DeviceInnerPara

// @@protoc_insertion_point(global_scope)
