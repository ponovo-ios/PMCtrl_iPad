// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: deviceinfogroup.proto

#ifndef PROTOBUF_deviceinfogroup_2eproto__INCLUDED
#define PROTOBUF_deviceinfogroup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace deviceinfogroup {
class info;
class infoDefaultTypeInternal;
extern infoDefaultTypeInternal _info_default_instance_;
class setinfo;
class setinfoDefaultTypeInternal;
extern setinfoDefaultTypeInternal _setinfo_default_instance_;
}  // namespace deviceinfogroup

namespace deviceinfogroup {

namespace protobuf_deviceinfogroup_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_deviceinfogroup_2eproto

// ===================================================================

class info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceinfogroup.info) */ {
 public:
  info();
  virtual ~info();

  info(const info& from);

  inline info& operator=(const info& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const info& default_instance();

  static inline const info* internal_default_instance() {
    return reinterpret_cast<const info*>(
               &_info_default_instance_);
  }

  void Swap(info* other);

  // implements Message ----------------------------------------------

  inline info* New() const PROTOBUF_FINAL { return New(NULL); }

  info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const info& from);
  void MergeFrom(const info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strip = 1;
  void clear_strip();
  static const int kStripFieldNumber = 1;
  const ::std::string& strip() const;
  void set_strip(const ::std::string& value);
  #if LANG_CXX11
  void set_strip(::std::string&& value);
  #endif
  void set_strip(const char* value);
  void set_strip(const char* value, size_t size);
  ::std::string* mutable_strip();
  ::std::string* release_strip();
  void set_allocated_strip(::std::string* strip);

  // uint32 ndevicenum = 2;
  void clear_ndevicenum();
  static const int kNdevicenumFieldNumber = 2;
  ::google::protobuf::uint32 ndevicenum() const;
  void set_ndevicenum(::google::protobuf::uint32 value);

  // uint32 nvoltchanelnum = 4;
  void clear_nvoltchanelnum();
  static const int kNvoltchanelnumFieldNumber = 4;
  ::google::protobuf::uint32 nvoltchanelnum() const;
  void set_nvoltchanelnum(::google::protobuf::uint32 value);

  // uint32 ncurrentchanelnum = 5;
  void clear_ncurrentchanelnum();
  static const int kNcurrentchanelnumFieldNumber = 5;
  ::google::protobuf::uint32 ncurrentchanelnum() const;
  void set_ncurrentchanelnum(::google::protobuf::uint32 value);

  // bool bhasanalog = 3;
  void clear_bhasanalog();
  static const int kBhasanalogFieldNumber = 3;
  bool bhasanalog() const;
  void set_bhasanalog(bool value);

  // bool bhasdigital = 8;
  void clear_bhasdigital();
  static const int kBhasdigitalFieldNumber = 8;
  bool bhasdigital() const;
  void set_bhasdigital(bool value);

  // float fvoltmax = 6;
  void clear_fvoltmax();
  static const int kFvoltmaxFieldNumber = 6;
  float fvoltmax() const;
  void set_fvoltmax(float value);

  // float fcurmax = 7;
  void clear_fcurmax();
  static const int kFcurmaxFieldNumber = 7;
  float fcurmax() const;
  void set_fcurmax(float value);

  // @@protoc_insertion_point(class_scope:deviceinfogroup.info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strip_;
  ::google::protobuf::uint32 ndevicenum_;
  ::google::protobuf::uint32 nvoltchanelnum_;
  ::google::protobuf::uint32 ncurrentchanelnum_;
  bool bhasanalog_;
  bool bhasdigital_;
  float fvoltmax_;
  float fcurmax_;
  mutable int _cached_size_;
  friend struct  protobuf_deviceinfogroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class setinfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:deviceinfogroup.setinfo) */ {
 public:
  setinfo();
  virtual ~setinfo();

  setinfo(const setinfo& from);

  inline setinfo& operator=(const setinfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const setinfo& default_instance();

  static inline const setinfo* internal_default_instance() {
    return reinterpret_cast<const setinfo*>(
               &_setinfo_default_instance_);
  }

  void Swap(setinfo* other);

  // implements Message ----------------------------------------------

  inline setinfo* New() const PROTOBUF_FINAL { return New(NULL); }

  setinfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const setinfo& from);
  void MergeFrom(const setinfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(setinfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strip = 1;
  void clear_strip();
  static const int kStripFieldNumber = 1;
  const ::std::string& strip() const;
  void set_strip(const ::std::string& value);
  #if LANG_CXX11
  void set_strip(::std::string&& value);
  #endif
  void set_strip(const char* value);
  void set_strip(const char* value, size_t size);
  ::std::string* mutable_strip();
  ::std::string* release_strip();
  void set_allocated_strip(::std::string* strip);

  // @@protoc_insertion_point(class_scope:deviceinfogroup.setinfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strip_;
  mutable int _cached_size_;
  friend struct  protobuf_deviceinfogroup_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// info

// string strip = 1;
inline void info::clear_strip() {
  strip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& info::strip() const {
  // @@protoc_insertion_point(field_get:deviceinfogroup.info.strip)
  return strip_.GetNoArena();
}
inline void info::set_strip(const ::std::string& value) {
  
  strip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceinfogroup.info.strip)
}
#if LANG_CXX11
inline void info::set_strip(::std::string&& value) {
  
  strip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:deviceinfogroup.info.strip)
}
#endif
inline void info::set_strip(const char* value) {
  
  strip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceinfogroup.info.strip)
}
inline void info::set_strip(const char* value, size_t size) {
  
  strip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceinfogroup.info.strip)
}
inline ::std::string* info::mutable_strip() {
  
  // @@protoc_insertion_point(field_mutable:deviceinfogroup.info.strip)
  return strip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* info::release_strip() {
  // @@protoc_insertion_point(field_release:deviceinfogroup.info.strip)
  
  return strip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void info::set_allocated_strip(::std::string* strip) {
  if (strip != NULL) {
    
  } else {
    
  }
  strip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strip);
  // @@protoc_insertion_point(field_set_allocated:deviceinfogroup.info.strip)
}

// uint32 ndevicenum = 2;
inline void info::clear_ndevicenum() {
  ndevicenum_ = 0u;
}
inline ::google::protobuf::uint32 info::ndevicenum() const {
  // @@protoc_insertion_point(field_get:deviceinfogroup.info.ndevicenum)
  return ndevicenum_;
}
inline void info::set_ndevicenum(::google::protobuf::uint32 value) {
  
  ndevicenum_ = value;
  // @@protoc_insertion_point(field_set:deviceinfogroup.info.ndevicenum)
}

// bool bhasanalog = 3;
inline void info::clear_bhasanalog() {
  bhasanalog_ = false;
}
inline bool info::bhasanalog() const {
  // @@protoc_insertion_point(field_get:deviceinfogroup.info.bhasanalog)
  return bhasanalog_;
}
inline void info::set_bhasanalog(bool value) {
  
  bhasanalog_ = value;
  // @@protoc_insertion_point(field_set:deviceinfogroup.info.bhasanalog)
}

// uint32 nvoltchanelnum = 4;
inline void info::clear_nvoltchanelnum() {
  nvoltchanelnum_ = 0u;
}
inline ::google::protobuf::uint32 info::nvoltchanelnum() const {
  // @@protoc_insertion_point(field_get:deviceinfogroup.info.nvoltchanelnum)
  return nvoltchanelnum_;
}
inline void info::set_nvoltchanelnum(::google::protobuf::uint32 value) {
  
  nvoltchanelnum_ = value;
  // @@protoc_insertion_point(field_set:deviceinfogroup.info.nvoltchanelnum)
}

// uint32 ncurrentchanelnum = 5;
inline void info::clear_ncurrentchanelnum() {
  ncurrentchanelnum_ = 0u;
}
inline ::google::protobuf::uint32 info::ncurrentchanelnum() const {
  // @@protoc_insertion_point(field_get:deviceinfogroup.info.ncurrentchanelnum)
  return ncurrentchanelnum_;
}
inline void info::set_ncurrentchanelnum(::google::protobuf::uint32 value) {
  
  ncurrentchanelnum_ = value;
  // @@protoc_insertion_point(field_set:deviceinfogroup.info.ncurrentchanelnum)
}

// float fvoltmax = 6;
inline void info::clear_fvoltmax() {
  fvoltmax_ = 0;
}
inline float info::fvoltmax() const {
  // @@protoc_insertion_point(field_get:deviceinfogroup.info.fvoltmax)
  return fvoltmax_;
}
inline void info::set_fvoltmax(float value) {
  
  fvoltmax_ = value;
  // @@protoc_insertion_point(field_set:deviceinfogroup.info.fvoltmax)
}

// float fcurmax = 7;
inline void info::clear_fcurmax() {
  fcurmax_ = 0;
}
inline float info::fcurmax() const {
  // @@protoc_insertion_point(field_get:deviceinfogroup.info.fcurmax)
  return fcurmax_;
}
inline void info::set_fcurmax(float value) {
  
  fcurmax_ = value;
  // @@protoc_insertion_point(field_set:deviceinfogroup.info.fcurmax)
}

// bool bhasdigital = 8;
inline void info::clear_bhasdigital() {
  bhasdigital_ = false;
}
inline bool info::bhasdigital() const {
  // @@protoc_insertion_point(field_get:deviceinfogroup.info.bhasdigital)
  return bhasdigital_;
}
inline void info::set_bhasdigital(bool value) {
  
  bhasdigital_ = value;
  // @@protoc_insertion_point(field_set:deviceinfogroup.info.bhasdigital)
}

// -------------------------------------------------------------------

// setinfo

// string strip = 1;
inline void setinfo::clear_strip() {
  strip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& setinfo::strip() const {
  // @@protoc_insertion_point(field_get:deviceinfogroup.setinfo.strip)
  return strip_.GetNoArena();
}
inline void setinfo::set_strip(const ::std::string& value) {
  
  strip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:deviceinfogroup.setinfo.strip)
}
#if LANG_CXX11
inline void setinfo::set_strip(::std::string&& value) {
  
  strip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:deviceinfogroup.setinfo.strip)
}
#endif
inline void setinfo::set_strip(const char* value) {
  
  strip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:deviceinfogroup.setinfo.strip)
}
inline void setinfo::set_strip(const char* value, size_t size) {
  
  strip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:deviceinfogroup.setinfo.strip)
}
inline ::std::string* setinfo::mutable_strip() {
  
  // @@protoc_insertion_point(field_mutable:deviceinfogroup.setinfo.strip)
  return strip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* setinfo::release_strip() {
  // @@protoc_insertion_point(field_release:deviceinfogroup.setinfo.strip)
  
  return strip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void setinfo::set_allocated_strip(::std::string* strip) {
  if (strip != NULL) {
    
  } else {
    
  }
  strip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strip);
  // @@protoc_insertion_point(field_set_allocated:deviceinfogroup.setinfo.strip)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace deviceinfogroup

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_deviceinfogroup_2eproto__INCLUDED
