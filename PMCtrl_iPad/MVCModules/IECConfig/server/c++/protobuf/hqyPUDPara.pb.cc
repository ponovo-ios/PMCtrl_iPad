// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hqyPUDPara.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hqyPUDPara.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace hqyPudPara {
class chanelparaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<chanelpara> {
} _chanelpara_default_instance_;
class acanalogparaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<acanalogpara> {
} _acanalogpara_default_instance_;
class acdigitalparaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<acdigitalpara> {
} _acdigitalpara_default_instance_;
class acparaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<acpara> {
} _acpara_default_instance_;
class manualparaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<manualpara> {
} _manualpara_default_instance_;
class TestItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TestItem> {
} _TestItem_default_instance_;
class stateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<state> {
} _state_default_instance_;
class statesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<states> {
} _states_default_instance_;
class StateResultItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StateResultItem> {
} _StateResultItem_default_instance_;
class stateResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<stateResult> {
} _stateResult_default_instance_;

namespace protobuf_hqyPUDPara_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chanelpara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chanelpara, famptitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chanelpara, fphase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(chanelpara, ffre_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acanalogpara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acanalogpara, analogcurrentchanelvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acanalogpara, analogvoltchangelvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acanalogpara, fvoltdc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acanalogpara, fcurrentdc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acdigitalpara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acdigitalpara, analogcurrentchanelvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acdigitalpara, analogvoltchangelvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acpara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acpara, oacanlogpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acpara, oacdigitalpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(acpara, nbinaryout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manualpara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manualpara, oacpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manualpara, sendzeroafterstop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manualpara, ndelaytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(manualpara, nisstopbichanged_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem, otesttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem, omanual_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestItem, ostatepara_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(state, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(state, nindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(state, oacpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(state, ntrigertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(state, ntrigerlogic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(state, ntirgertime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(state, sgpstime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(state, nsgpstime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(state, nbivalide_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(states, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(states, ostates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(states, nisloop_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateResultItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateResultItem, nindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateResultItem, secondtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateResultItem, nstime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateResultItem, oactivetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateResultItem, nbinstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateResultItem, ncurrentstateindex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stateResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(stateResult, oitem_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(chanelpara)},
  { 7, -1, sizeof(acanalogpara)},
  { 15, -1, sizeof(acdigitalpara)},
  { 21, -1, sizeof(acpara)},
  { 28, -1, sizeof(manualpara)},
  { 36, -1, sizeof(TestItem)},
  { 43, -1, sizeof(state)},
  { 55, -1, sizeof(states)},
  { 61, -1, sizeof(StateResultItem)},
  { 71, -1, sizeof(stateResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_chanelpara_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_acanalogpara_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_acdigitalpara_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_acpara_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_manualpara_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_state_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_states_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StateResultItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_stateResult_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "hqyPUDPara.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace

void TableStruct::Shutdown() {
  _chanelpara_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _acanalogpara_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _acdigitalpara_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _acpara_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _manualpara_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _TestItem_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _state_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _states_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _StateResultItem_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _stateResult_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _chanelpara_default_instance_.DefaultConstruct();
  _acanalogpara_default_instance_.DefaultConstruct();
  _acdigitalpara_default_instance_.DefaultConstruct();
  _acpara_default_instance_.DefaultConstruct();
  _manualpara_default_instance_.DefaultConstruct();
  _TestItem_default_instance_.DefaultConstruct();
  _state_default_instance_.DefaultConstruct();
  _states_default_instance_.DefaultConstruct();
  _StateResultItem_default_instance_.DefaultConstruct();
  _stateResult_default_instance_.DefaultConstruct();
  _acpara_default_instance_.get_mutable()->oacanlogpara_ = const_cast< ::hqyPudPara::acanalogpara*>(
      ::hqyPudPara::acanalogpara::internal_default_instance());
  _acpara_default_instance_.get_mutable()->oacdigitalpara_ = const_cast< ::hqyPudPara::acdigitalpara*>(
      ::hqyPudPara::acdigitalpara::internal_default_instance());
  _manualpara_default_instance_.get_mutable()->oacpara_ = const_cast< ::hqyPudPara::acpara*>(
      ::hqyPudPara::acpara::internal_default_instance());
  _TestItem_default_instance_.get_mutable()->omanual_ = const_cast< ::hqyPudPara::manualpara*>(
      ::hqyPudPara::manualpara::internal_default_instance());
  _TestItem_default_instance_.get_mutable()->ostatepara_ = const_cast< ::hqyPudPara::states*>(
      ::hqyPudPara::states::internal_default_instance());
  _state_default_instance_.get_mutable()->oacpara_ = const_cast< ::hqyPudPara::acpara*>(
      ::hqyPudPara::acpara::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020hqyPUDPara.proto\022\nhqyPudPara\">\n\nchanel"
      "para\022\022\n\nfamptitude\030\001 \001(\002\022\016\n\006fphase\030\002 \001(\002"
      "\022\014\n\004ffre\030\003 \001(\002\"\245\001\n\014acanalogpara\0228\n\030analo"
      "gcurrentchanelvalue\030\001 \003(\0132\026.hqyPudPara.c"
      "hanelpara\0226\n\026analogvoltchangelvalue\030\002 \003("
      "\0132\026.hqyPudPara.chanelpara\022\017\n\007fVoltDC\030\003 \003"
      "(\002\022\022\n\nfCurrentDC\030\004 \003(\002\"\201\001\n\racdigitalpara"
      "\0228\n\030analogcurrentchanelvalue\030\001 \003(\0132\026.hqy"
      "PudPara.chanelpara\0226\n\026analogvoltchangelv"
      "alue\030\002 \003(\0132\026.hqyPudPara.chanelpara\"\177\n\006ac"
      "para\022.\n\014oacanlogpara\030\001 \001(\0132\030.hqyPudPara."
      "acanalogpara\0221\n\016oacdigitalpara\030\002 \001(\0132\031.h"
      "qyPudPara.acdigitalpara\022\022\n\nnbinaryout\030\003 "
      "\001(\r\"z\n\nmanualpara\022#\n\007oacpara\030\001 \001(\0132\022.hqy"
      "PudPara.acpara\022\031\n\021sendzeroafterstop\030\002 \001("
      "\010\022\022\n\nndelaytime\030\003 \001(\r\022\030\n\020nIsStopBiChange"
      "d\030\004 \001(\r\"\205\001\n\010TestItem\022(\n\totesttype\030\001 \001(\0162"
      "\025.hqyPudPara.para_type\022\'\n\007omanual\030\002 \001(\0132"
      "\026.hqyPudPara.manualpara\022&\n\nostatepara\030\003 "
      "\001(\0132\022.hqyPudPara.states\"\264\001\n\005state\022\016\n\006nIn"
      "dex\030\001 \001(\r\022#\n\007oacpara\030\002 \001(\0132\022.hqyPudPara."
      "acpara\022\023\n\013nTrigerType\030\003 \001(\r\022\024\n\014nTrigerLo"
      "gic\030\004 \001(\r\022\023\n\013nTirgerTime\030\005 \001(\r\022\020\n\010sGpsti"
      "me\030\006 \001(\r\022\021\n\tnsGpsTime\030\007 \001(\r\022\021\n\tnBiValide"
      "\030\010 \001(\r\"=\n\006states\022\"\n\007ostates\030\001 \003(\0132\021.hqyP"
      "udPara.state\022\017\n\007nisloop\030\002 \001(\r\"\211\001\n\017StateR"
      "esultItem\022\016\n\006nindex\030\001 \001(\r\022\022\n\nsecondtime\030"
      "\002 \001(\r\022\016\n\006nstime\030\003 \001(\r\022\023\n\013oactivetype\030\004 \001"
      "(\r\022\021\n\tnBinstate\030\005 \001(\r\022\032\n\022ncurrentstateIn"
      "dex\030\006 \001(\r\"9\n\013stateResult\022*\n\005oitem\030\001 \003(\0132"
      "\033.hqyPudPara.StateResultItem*\322\001\n\tpara_ty"
      "pe\022\017\n\013manual_type\020\000\022\016\n\nstate_type\020\001\022\014\n\010i"
      "ec_type\020\002\022\017\n\013differ_type\020\003\022\021\n\rdistance_t"
      "ype\020\004\022\026\n\022searchzborder_type\020\005\022\022\n\016cbopera"
      "te_type\020\006\022\016\n\nrelay_type\020\007\022\r\n\tharm_type\020\010"
      "\022\021\n\rgradient_type\020\t\022\024\n\020overCurrent_type\020"
      "\nb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1449);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hqyPUDPara.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_hqyPUDPara_2eproto

const ::google::protobuf::EnumDescriptor* para_type_descriptor() {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_enum_descriptors[0];
}
bool para_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int chanelpara::kFamptitudeFieldNumber;
const int chanelpara::kFphaseFieldNumber;
const int chanelpara::kFfreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

chanelpara::chanelpara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyPUDPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyPudPara.chanelpara)
}
chanelpara::chanelpara(const chanelpara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&famptitude_, &from.famptitude_,
    reinterpret_cast<char*>(&ffre_) -
    reinterpret_cast<char*>(&famptitude_) + sizeof(ffre_));
  // @@protoc_insertion_point(copy_constructor:hqyPudPara.chanelpara)
}

void chanelpara::SharedCtor() {
  ::memset(&famptitude_, 0, reinterpret_cast<char*>(&ffre_) -
    reinterpret_cast<char*>(&famptitude_) + sizeof(ffre_));
  _cached_size_ = 0;
}

chanelpara::~chanelpara() {
  // @@protoc_insertion_point(destructor:hqyPudPara.chanelpara)
  SharedDtor();
}

void chanelpara::SharedDtor() {
}

void chanelpara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* chanelpara::descriptor() {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[0].descriptor;
}

const chanelpara& chanelpara::default_instance() {
  protobuf_hqyPUDPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

chanelpara* chanelpara::New(::google::protobuf::Arena* arena) const {
  chanelpara* n = new chanelpara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void chanelpara::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyPudPara.chanelpara)
  ::memset(&famptitude_, 0, reinterpret_cast<char*>(&ffre_) -
    reinterpret_cast<char*>(&famptitude_) + sizeof(ffre_));
}

bool chanelpara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyPudPara.chanelpara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float famptitude = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &famptitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fphase = 2;
      case 2: {
        if (tag == 21u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fphase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ffre = 3;
      case 3: {
        if (tag == 29u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ffre_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyPudPara.chanelpara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyPudPara.chanelpara)
  return false;
#undef DO_
}

void chanelpara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyPudPara.chanelpara)
  // float famptitude = 1;
  if (this->famptitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->famptitude(), output);
  }

  // float fphase = 2;
  if (this->fphase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->fphase(), output);
  }

  // float ffre = 3;
  if (this->ffre() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ffre(), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyPudPara.chanelpara)
}

::google::protobuf::uint8* chanelpara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyPudPara.chanelpara)
  // float famptitude = 1;
  if (this->famptitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->famptitude(), target);
  }

  // float fphase = 2;
  if (this->fphase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->fphase(), target);
  }

  // float ffre = 3;
  if (this->ffre() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ffre(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyPudPara.chanelpara)
  return target;
}

size_t chanelpara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyPudPara.chanelpara)
  size_t total_size = 0;

  // float famptitude = 1;
  if (this->famptitude() != 0) {
    total_size += 1 + 4;
  }

  // float fphase = 2;
  if (this->fphase() != 0) {
    total_size += 1 + 4;
  }

  // float ffre = 3;
  if (this->ffre() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void chanelpara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyPudPara.chanelpara)
  GOOGLE_DCHECK_NE(&from, this);
  const chanelpara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const chanelpara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyPudPara.chanelpara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyPudPara.chanelpara)
    MergeFrom(*source);
  }
}

void chanelpara::MergeFrom(const chanelpara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyPudPara.chanelpara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.famptitude() != 0) {
    set_famptitude(from.famptitude());
  }
  if (from.fphase() != 0) {
    set_fphase(from.fphase());
  }
  if (from.ffre() != 0) {
    set_ffre(from.ffre());
  }
}

void chanelpara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyPudPara.chanelpara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void chanelpara::CopyFrom(const chanelpara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyPudPara.chanelpara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool chanelpara::IsInitialized() const {
  return true;
}

void chanelpara::Swap(chanelpara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void chanelpara::InternalSwap(chanelpara* other) {
  std::swap(famptitude_, other->famptitude_);
  std::swap(fphase_, other->fphase_);
  std::swap(ffre_, other->ffre_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata chanelpara::GetMetadata() const {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// chanelpara

// float famptitude = 1;
void chanelpara::clear_famptitude() {
  famptitude_ = 0;
}
float chanelpara::famptitude() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.chanelpara.famptitude)
  return famptitude_;
}
void chanelpara::set_famptitude(float value) {
  
  famptitude_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.chanelpara.famptitude)
}

// float fphase = 2;
void chanelpara::clear_fphase() {
  fphase_ = 0;
}
float chanelpara::fphase() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.chanelpara.fphase)
  return fphase_;
}
void chanelpara::set_fphase(float value) {
  
  fphase_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.chanelpara.fphase)
}

// float ffre = 3;
void chanelpara::clear_ffre() {
  ffre_ = 0;
}
float chanelpara::ffre() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.chanelpara.ffre)
  return ffre_;
}
void chanelpara::set_ffre(float value) {
  
  ffre_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.chanelpara.ffre)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int acanalogpara::kAnalogcurrentchanelvalueFieldNumber;
const int acanalogpara::kAnalogvoltchangelvalueFieldNumber;
const int acanalogpara::kFVoltDCFieldNumber;
const int acanalogpara::kFCurrentDCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

acanalogpara::acanalogpara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyPUDPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyPudPara.acanalogpara)
}
acanalogpara::acanalogpara(const acanalogpara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      analogcurrentchanelvalue_(from.analogcurrentchanelvalue_),
      analogvoltchangelvalue_(from.analogvoltchangelvalue_),
      fvoltdc_(from.fvoltdc_),
      fcurrentdc_(from.fcurrentdc_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hqyPudPara.acanalogpara)
}

void acanalogpara::SharedCtor() {
  _cached_size_ = 0;
}

acanalogpara::~acanalogpara() {
  // @@protoc_insertion_point(destructor:hqyPudPara.acanalogpara)
  SharedDtor();
}

void acanalogpara::SharedDtor() {
}

void acanalogpara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* acanalogpara::descriptor() {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[1].descriptor;
}

const acanalogpara& acanalogpara::default_instance() {
  protobuf_hqyPUDPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

acanalogpara* acanalogpara::New(::google::protobuf::Arena* arena) const {
  acanalogpara* n = new acanalogpara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void acanalogpara::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyPudPara.acanalogpara)
  analogcurrentchanelvalue_.Clear();
  analogvoltchangelvalue_.Clear();
  fvoltdc_.Clear();
  fcurrentdc_.Clear();
}

bool acanalogpara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyPudPara.acanalogpara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hqyPudPara.chanelpara analogcurrentchanelvalue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_analogcurrentchanelvalue()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .hqyPudPara.chanelpara analogvoltchangelvalue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_analogvoltchangelvalue()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated float fVoltDC = 3;
      case 3: {
        if (tag == 26u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fvoltdc())));
        } else if (tag == 29u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_fvoltdc())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float fCurrentDC = 4;
      case 4: {
        if (tag == 34u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fcurrentdc())));
        } else if (tag == 37u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_fcurrentdc())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyPudPara.acanalogpara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyPudPara.acanalogpara)
  return false;
#undef DO_
}

void acanalogpara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyPudPara.acanalogpara)
  // repeated .hqyPudPara.chanelpara analogcurrentchanelvalue = 1;
  for (unsigned int i = 0, n = this->analogcurrentchanelvalue_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->analogcurrentchanelvalue(i), output);
  }

  // repeated .hqyPudPara.chanelpara analogvoltchangelvalue = 2;
  for (unsigned int i = 0, n = this->analogvoltchangelvalue_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->analogvoltchangelvalue(i), output);
  }

  // repeated float fVoltDC = 3;
  if (this->fvoltdc_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fvoltdc_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->fvoltdc().data(), this->fvoltdc_size(), output);
  }

  // repeated float fCurrentDC = 4;
  if (this->fcurrentdc_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_fcurrentdc_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->fcurrentdc().data(), this->fcurrentdc_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyPudPara.acanalogpara)
}

::google::protobuf::uint8* acanalogpara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyPudPara.acanalogpara)
  // repeated .hqyPudPara.chanelpara analogcurrentchanelvalue = 1;
  for (unsigned int i = 0, n = this->analogcurrentchanelvalue_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->analogcurrentchanelvalue(i), false, target);
  }

  // repeated .hqyPudPara.chanelpara analogvoltchangelvalue = 2;
  for (unsigned int i = 0, n = this->analogvoltchangelvalue_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->analogvoltchangelvalue(i), false, target);
  }

  // repeated float fVoltDC = 3;
  if (this->fvoltdc_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fvoltdc_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fvoltdc_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fvoltdc(i), target);
  }

  // repeated float fCurrentDC = 4;
  if (this->fcurrentdc_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _fcurrentdc_cached_byte_size_, target);
  }
  for (int i = 0; i < this->fcurrentdc_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->fcurrentdc(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyPudPara.acanalogpara)
  return target;
}

size_t acanalogpara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyPudPara.acanalogpara)
  size_t total_size = 0;

  // repeated .hqyPudPara.chanelpara analogcurrentchanelvalue = 1;
  {
    unsigned int count = this->analogcurrentchanelvalue_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->analogcurrentchanelvalue(i));
    }
  }

  // repeated .hqyPudPara.chanelpara analogvoltchangelvalue = 2;
  {
    unsigned int count = this->analogvoltchangelvalue_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->analogvoltchangelvalue(i));
    }
  }

  // repeated float fVoltDC = 3;
  {
    unsigned int count = this->fvoltdc_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fvoltdc_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float fCurrentDC = 4;
  {
    unsigned int count = this->fcurrentdc_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fcurrentdc_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void acanalogpara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyPudPara.acanalogpara)
  GOOGLE_DCHECK_NE(&from, this);
  const acanalogpara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const acanalogpara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyPudPara.acanalogpara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyPudPara.acanalogpara)
    MergeFrom(*source);
  }
}

void acanalogpara::MergeFrom(const acanalogpara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyPudPara.acanalogpara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  analogcurrentchanelvalue_.MergeFrom(from.analogcurrentchanelvalue_);
  analogvoltchangelvalue_.MergeFrom(from.analogvoltchangelvalue_);
  fvoltdc_.MergeFrom(from.fvoltdc_);
  fcurrentdc_.MergeFrom(from.fcurrentdc_);
}

void acanalogpara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyPudPara.acanalogpara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void acanalogpara::CopyFrom(const acanalogpara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyPudPara.acanalogpara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool acanalogpara::IsInitialized() const {
  return true;
}

void acanalogpara::Swap(acanalogpara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void acanalogpara::InternalSwap(acanalogpara* other) {
  analogcurrentchanelvalue_.UnsafeArenaSwap(&other->analogcurrentchanelvalue_);
  analogvoltchangelvalue_.UnsafeArenaSwap(&other->analogvoltchangelvalue_);
  fvoltdc_.UnsafeArenaSwap(&other->fvoltdc_);
  fcurrentdc_.UnsafeArenaSwap(&other->fcurrentdc_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata acanalogpara::GetMetadata() const {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// acanalogpara

// repeated .hqyPudPara.chanelpara analogcurrentchanelvalue = 1;
int acanalogpara::analogcurrentchanelvalue_size() const {
  return analogcurrentchanelvalue_.size();
}
void acanalogpara::clear_analogcurrentchanelvalue() {
  analogcurrentchanelvalue_.Clear();
}
const ::hqyPudPara::chanelpara& acanalogpara::analogcurrentchanelvalue(int index) const {
  // @@protoc_insertion_point(field_get:hqyPudPara.acanalogpara.analogcurrentchanelvalue)
  return analogcurrentchanelvalue_.Get(index);
}
::hqyPudPara::chanelpara* acanalogpara::mutable_analogcurrentchanelvalue(int index) {
  // @@protoc_insertion_point(field_mutable:hqyPudPara.acanalogpara.analogcurrentchanelvalue)
  return analogcurrentchanelvalue_.Mutable(index);
}
::hqyPudPara::chanelpara* acanalogpara::add_analogcurrentchanelvalue() {
  // @@protoc_insertion_point(field_add:hqyPudPara.acanalogpara.analogcurrentchanelvalue)
  return analogcurrentchanelvalue_.Add();
}
::google::protobuf::RepeatedPtrField< ::hqyPudPara::chanelpara >*
acanalogpara::mutable_analogcurrentchanelvalue() {
  // @@protoc_insertion_point(field_mutable_list:hqyPudPara.acanalogpara.analogcurrentchanelvalue)
  return &analogcurrentchanelvalue_;
}
const ::google::protobuf::RepeatedPtrField< ::hqyPudPara::chanelpara >&
acanalogpara::analogcurrentchanelvalue() const {
  // @@protoc_insertion_point(field_list:hqyPudPara.acanalogpara.analogcurrentchanelvalue)
  return analogcurrentchanelvalue_;
}

// repeated .hqyPudPara.chanelpara analogvoltchangelvalue = 2;
int acanalogpara::analogvoltchangelvalue_size() const {
  return analogvoltchangelvalue_.size();
}
void acanalogpara::clear_analogvoltchangelvalue() {
  analogvoltchangelvalue_.Clear();
}
const ::hqyPudPara::chanelpara& acanalogpara::analogvoltchangelvalue(int index) const {
  // @@protoc_insertion_point(field_get:hqyPudPara.acanalogpara.analogvoltchangelvalue)
  return analogvoltchangelvalue_.Get(index);
}
::hqyPudPara::chanelpara* acanalogpara::mutable_analogvoltchangelvalue(int index) {
  // @@protoc_insertion_point(field_mutable:hqyPudPara.acanalogpara.analogvoltchangelvalue)
  return analogvoltchangelvalue_.Mutable(index);
}
::hqyPudPara::chanelpara* acanalogpara::add_analogvoltchangelvalue() {
  // @@protoc_insertion_point(field_add:hqyPudPara.acanalogpara.analogvoltchangelvalue)
  return analogvoltchangelvalue_.Add();
}
::google::protobuf::RepeatedPtrField< ::hqyPudPara::chanelpara >*
acanalogpara::mutable_analogvoltchangelvalue() {
  // @@protoc_insertion_point(field_mutable_list:hqyPudPara.acanalogpara.analogvoltchangelvalue)
  return &analogvoltchangelvalue_;
}
const ::google::protobuf::RepeatedPtrField< ::hqyPudPara::chanelpara >&
acanalogpara::analogvoltchangelvalue() const {
  // @@protoc_insertion_point(field_list:hqyPudPara.acanalogpara.analogvoltchangelvalue)
  return analogvoltchangelvalue_;
}

// repeated float fVoltDC = 3;
int acanalogpara::fvoltdc_size() const {
  return fvoltdc_.size();
}
void acanalogpara::clear_fvoltdc() {
  fvoltdc_.Clear();
}
float acanalogpara::fvoltdc(int index) const {
  // @@protoc_insertion_point(field_get:hqyPudPara.acanalogpara.fVoltDC)
  return fvoltdc_.Get(index);
}
void acanalogpara::set_fvoltdc(int index, float value) {
  fvoltdc_.Set(index, value);
  // @@protoc_insertion_point(field_set:hqyPudPara.acanalogpara.fVoltDC)
}
void acanalogpara::add_fvoltdc(float value) {
  fvoltdc_.Add(value);
  // @@protoc_insertion_point(field_add:hqyPudPara.acanalogpara.fVoltDC)
}
const ::google::protobuf::RepeatedField< float >&
acanalogpara::fvoltdc() const {
  // @@protoc_insertion_point(field_list:hqyPudPara.acanalogpara.fVoltDC)
  return fvoltdc_;
}
::google::protobuf::RepeatedField< float >*
acanalogpara::mutable_fvoltdc() {
  // @@protoc_insertion_point(field_mutable_list:hqyPudPara.acanalogpara.fVoltDC)
  return &fvoltdc_;
}

// repeated float fCurrentDC = 4;
int acanalogpara::fcurrentdc_size() const {
  return fcurrentdc_.size();
}
void acanalogpara::clear_fcurrentdc() {
  fcurrentdc_.Clear();
}
float acanalogpara::fcurrentdc(int index) const {
  // @@protoc_insertion_point(field_get:hqyPudPara.acanalogpara.fCurrentDC)
  return fcurrentdc_.Get(index);
}
void acanalogpara::set_fcurrentdc(int index, float value) {
  fcurrentdc_.Set(index, value);
  // @@protoc_insertion_point(field_set:hqyPudPara.acanalogpara.fCurrentDC)
}
void acanalogpara::add_fcurrentdc(float value) {
  fcurrentdc_.Add(value);
  // @@protoc_insertion_point(field_add:hqyPudPara.acanalogpara.fCurrentDC)
}
const ::google::protobuf::RepeatedField< float >&
acanalogpara::fcurrentdc() const {
  // @@protoc_insertion_point(field_list:hqyPudPara.acanalogpara.fCurrentDC)
  return fcurrentdc_;
}
::google::protobuf::RepeatedField< float >*
acanalogpara::mutable_fcurrentdc() {
  // @@protoc_insertion_point(field_mutable_list:hqyPudPara.acanalogpara.fCurrentDC)
  return &fcurrentdc_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int acdigitalpara::kAnalogcurrentchanelvalueFieldNumber;
const int acdigitalpara::kAnalogvoltchangelvalueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

acdigitalpara::acdigitalpara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyPUDPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyPudPara.acdigitalpara)
}
acdigitalpara::acdigitalpara(const acdigitalpara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      analogcurrentchanelvalue_(from.analogcurrentchanelvalue_),
      analogvoltchangelvalue_(from.analogvoltchangelvalue_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hqyPudPara.acdigitalpara)
}

void acdigitalpara::SharedCtor() {
  _cached_size_ = 0;
}

acdigitalpara::~acdigitalpara() {
  // @@protoc_insertion_point(destructor:hqyPudPara.acdigitalpara)
  SharedDtor();
}

void acdigitalpara::SharedDtor() {
}

void acdigitalpara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* acdigitalpara::descriptor() {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[2].descriptor;
}

const acdigitalpara& acdigitalpara::default_instance() {
  protobuf_hqyPUDPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

acdigitalpara* acdigitalpara::New(::google::protobuf::Arena* arena) const {
  acdigitalpara* n = new acdigitalpara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void acdigitalpara::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyPudPara.acdigitalpara)
  analogcurrentchanelvalue_.Clear();
  analogvoltchangelvalue_.Clear();
}

bool acdigitalpara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyPudPara.acdigitalpara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hqyPudPara.chanelpara analogcurrentchanelvalue = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_analogcurrentchanelvalue()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .hqyPudPara.chanelpara analogvoltchangelvalue = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_analogvoltchangelvalue()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyPudPara.acdigitalpara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyPudPara.acdigitalpara)
  return false;
#undef DO_
}

void acdigitalpara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyPudPara.acdigitalpara)
  // repeated .hqyPudPara.chanelpara analogcurrentchanelvalue = 1;
  for (unsigned int i = 0, n = this->analogcurrentchanelvalue_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->analogcurrentchanelvalue(i), output);
  }

  // repeated .hqyPudPara.chanelpara analogvoltchangelvalue = 2;
  for (unsigned int i = 0, n = this->analogvoltchangelvalue_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->analogvoltchangelvalue(i), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyPudPara.acdigitalpara)
}

::google::protobuf::uint8* acdigitalpara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyPudPara.acdigitalpara)
  // repeated .hqyPudPara.chanelpara analogcurrentchanelvalue = 1;
  for (unsigned int i = 0, n = this->analogcurrentchanelvalue_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->analogcurrentchanelvalue(i), false, target);
  }

  // repeated .hqyPudPara.chanelpara analogvoltchangelvalue = 2;
  for (unsigned int i = 0, n = this->analogvoltchangelvalue_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->analogvoltchangelvalue(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyPudPara.acdigitalpara)
  return target;
}

size_t acdigitalpara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyPudPara.acdigitalpara)
  size_t total_size = 0;

  // repeated .hqyPudPara.chanelpara analogcurrentchanelvalue = 1;
  {
    unsigned int count = this->analogcurrentchanelvalue_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->analogcurrentchanelvalue(i));
    }
  }

  // repeated .hqyPudPara.chanelpara analogvoltchangelvalue = 2;
  {
    unsigned int count = this->analogvoltchangelvalue_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->analogvoltchangelvalue(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void acdigitalpara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyPudPara.acdigitalpara)
  GOOGLE_DCHECK_NE(&from, this);
  const acdigitalpara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const acdigitalpara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyPudPara.acdigitalpara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyPudPara.acdigitalpara)
    MergeFrom(*source);
  }
}

void acdigitalpara::MergeFrom(const acdigitalpara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyPudPara.acdigitalpara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  analogcurrentchanelvalue_.MergeFrom(from.analogcurrentchanelvalue_);
  analogvoltchangelvalue_.MergeFrom(from.analogvoltchangelvalue_);
}

void acdigitalpara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyPudPara.acdigitalpara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void acdigitalpara::CopyFrom(const acdigitalpara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyPudPara.acdigitalpara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool acdigitalpara::IsInitialized() const {
  return true;
}

void acdigitalpara::Swap(acdigitalpara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void acdigitalpara::InternalSwap(acdigitalpara* other) {
  analogcurrentchanelvalue_.UnsafeArenaSwap(&other->analogcurrentchanelvalue_);
  analogvoltchangelvalue_.UnsafeArenaSwap(&other->analogvoltchangelvalue_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata acdigitalpara::GetMetadata() const {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// acdigitalpara

// repeated .hqyPudPara.chanelpara analogcurrentchanelvalue = 1;
int acdigitalpara::analogcurrentchanelvalue_size() const {
  return analogcurrentchanelvalue_.size();
}
void acdigitalpara::clear_analogcurrentchanelvalue() {
  analogcurrentchanelvalue_.Clear();
}
const ::hqyPudPara::chanelpara& acdigitalpara::analogcurrentchanelvalue(int index) const {
  // @@protoc_insertion_point(field_get:hqyPudPara.acdigitalpara.analogcurrentchanelvalue)
  return analogcurrentchanelvalue_.Get(index);
}
::hqyPudPara::chanelpara* acdigitalpara::mutable_analogcurrentchanelvalue(int index) {
  // @@protoc_insertion_point(field_mutable:hqyPudPara.acdigitalpara.analogcurrentchanelvalue)
  return analogcurrentchanelvalue_.Mutable(index);
}
::hqyPudPara::chanelpara* acdigitalpara::add_analogcurrentchanelvalue() {
  // @@protoc_insertion_point(field_add:hqyPudPara.acdigitalpara.analogcurrentchanelvalue)
  return analogcurrentchanelvalue_.Add();
}
::google::protobuf::RepeatedPtrField< ::hqyPudPara::chanelpara >*
acdigitalpara::mutable_analogcurrentchanelvalue() {
  // @@protoc_insertion_point(field_mutable_list:hqyPudPara.acdigitalpara.analogcurrentchanelvalue)
  return &analogcurrentchanelvalue_;
}
const ::google::protobuf::RepeatedPtrField< ::hqyPudPara::chanelpara >&
acdigitalpara::analogcurrentchanelvalue() const {
  // @@protoc_insertion_point(field_list:hqyPudPara.acdigitalpara.analogcurrentchanelvalue)
  return analogcurrentchanelvalue_;
}

// repeated .hqyPudPara.chanelpara analogvoltchangelvalue = 2;
int acdigitalpara::analogvoltchangelvalue_size() const {
  return analogvoltchangelvalue_.size();
}
void acdigitalpara::clear_analogvoltchangelvalue() {
  analogvoltchangelvalue_.Clear();
}
const ::hqyPudPara::chanelpara& acdigitalpara::analogvoltchangelvalue(int index) const {
  // @@protoc_insertion_point(field_get:hqyPudPara.acdigitalpara.analogvoltchangelvalue)
  return analogvoltchangelvalue_.Get(index);
}
::hqyPudPara::chanelpara* acdigitalpara::mutable_analogvoltchangelvalue(int index) {
  // @@protoc_insertion_point(field_mutable:hqyPudPara.acdigitalpara.analogvoltchangelvalue)
  return analogvoltchangelvalue_.Mutable(index);
}
::hqyPudPara::chanelpara* acdigitalpara::add_analogvoltchangelvalue() {
  // @@protoc_insertion_point(field_add:hqyPudPara.acdigitalpara.analogvoltchangelvalue)
  return analogvoltchangelvalue_.Add();
}
::google::protobuf::RepeatedPtrField< ::hqyPudPara::chanelpara >*
acdigitalpara::mutable_analogvoltchangelvalue() {
  // @@protoc_insertion_point(field_mutable_list:hqyPudPara.acdigitalpara.analogvoltchangelvalue)
  return &analogvoltchangelvalue_;
}
const ::google::protobuf::RepeatedPtrField< ::hqyPudPara::chanelpara >&
acdigitalpara::analogvoltchangelvalue() const {
  // @@protoc_insertion_point(field_list:hqyPudPara.acdigitalpara.analogvoltchangelvalue)
  return analogvoltchangelvalue_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int acpara::kOacanlogparaFieldNumber;
const int acpara::kOacdigitalparaFieldNumber;
const int acpara::kNbinaryoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

acpara::acpara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyPUDPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyPudPara.acpara)
}
acpara::acpara(const acpara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oacanlogpara()) {
    oacanlogpara_ = new ::hqyPudPara::acanalogpara(*from.oacanlogpara_);
  } else {
    oacanlogpara_ = NULL;
  }
  if (from.has_oacdigitalpara()) {
    oacdigitalpara_ = new ::hqyPudPara::acdigitalpara(*from.oacdigitalpara_);
  } else {
    oacdigitalpara_ = NULL;
  }
  nbinaryout_ = from.nbinaryout_;
  // @@protoc_insertion_point(copy_constructor:hqyPudPara.acpara)
}

void acpara::SharedCtor() {
  ::memset(&oacanlogpara_, 0, reinterpret_cast<char*>(&nbinaryout_) -
    reinterpret_cast<char*>(&oacanlogpara_) + sizeof(nbinaryout_));
  _cached_size_ = 0;
}

acpara::~acpara() {
  // @@protoc_insertion_point(destructor:hqyPudPara.acpara)
  SharedDtor();
}

void acpara::SharedDtor() {
  if (this != internal_default_instance()) {
    delete oacanlogpara_;
  }
  if (this != internal_default_instance()) {
    delete oacdigitalpara_;
  }
}

void acpara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* acpara::descriptor() {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[3].descriptor;
}

const acpara& acpara::default_instance() {
  protobuf_hqyPUDPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

acpara* acpara::New(::google::protobuf::Arena* arena) const {
  acpara* n = new acpara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void acpara::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyPudPara.acpara)
  if (GetArenaNoVirtual() == NULL && oacanlogpara_ != NULL) {
    delete oacanlogpara_;
  }
  oacanlogpara_ = NULL;
  if (GetArenaNoVirtual() == NULL && oacdigitalpara_ != NULL) {
    delete oacdigitalpara_;
  }
  oacdigitalpara_ = NULL;
  nbinaryout_ = 0u;
}

bool acpara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyPudPara.acpara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .hqyPudPara.acanalogpara oacanlogpara = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oacanlogpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .hqyPudPara.acdigitalpara oacdigitalpara = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oacdigitalpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nbinaryout = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nbinaryout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyPudPara.acpara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyPudPara.acpara)
  return false;
#undef DO_
}

void acpara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyPudPara.acpara)
  // .hqyPudPara.acanalogpara oacanlogpara = 1;
  if (this->has_oacanlogpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->oacanlogpara_, output);
  }

  // .hqyPudPara.acdigitalpara oacdigitalpara = 2;
  if (this->has_oacdigitalpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->oacdigitalpara_, output);
  }

  // uint32 nbinaryout = 3;
  if (this->nbinaryout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nbinaryout(), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyPudPara.acpara)
}

::google::protobuf::uint8* acpara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyPudPara.acpara)
  // .hqyPudPara.acanalogpara oacanlogpara = 1;
  if (this->has_oacanlogpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->oacanlogpara_, false, target);
  }

  // .hqyPudPara.acdigitalpara oacdigitalpara = 2;
  if (this->has_oacdigitalpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->oacdigitalpara_, false, target);
  }

  // uint32 nbinaryout = 3;
  if (this->nbinaryout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->nbinaryout(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyPudPara.acpara)
  return target;
}

size_t acpara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyPudPara.acpara)
  size_t total_size = 0;

  // .hqyPudPara.acanalogpara oacanlogpara = 1;
  if (this->has_oacanlogpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oacanlogpara_);
  }

  // .hqyPudPara.acdigitalpara oacdigitalpara = 2;
  if (this->has_oacdigitalpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oacdigitalpara_);
  }

  // uint32 nbinaryout = 3;
  if (this->nbinaryout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nbinaryout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void acpara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyPudPara.acpara)
  GOOGLE_DCHECK_NE(&from, this);
  const acpara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const acpara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyPudPara.acpara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyPudPara.acpara)
    MergeFrom(*source);
  }
}

void acpara::MergeFrom(const acpara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyPudPara.acpara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oacanlogpara()) {
    mutable_oacanlogpara()->::hqyPudPara::acanalogpara::MergeFrom(from.oacanlogpara());
  }
  if (from.has_oacdigitalpara()) {
    mutable_oacdigitalpara()->::hqyPudPara::acdigitalpara::MergeFrom(from.oacdigitalpara());
  }
  if (from.nbinaryout() != 0) {
    set_nbinaryout(from.nbinaryout());
  }
}

void acpara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyPudPara.acpara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void acpara::CopyFrom(const acpara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyPudPara.acpara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool acpara::IsInitialized() const {
  return true;
}

void acpara::Swap(acpara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void acpara::InternalSwap(acpara* other) {
  std::swap(oacanlogpara_, other->oacanlogpara_);
  std::swap(oacdigitalpara_, other->oacdigitalpara_);
  std::swap(nbinaryout_, other->nbinaryout_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata acpara::GetMetadata() const {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// acpara

// .hqyPudPara.acanalogpara oacanlogpara = 1;
bool acpara::has_oacanlogpara() const {
  return this != internal_default_instance() && oacanlogpara_ != NULL;
}
void acpara::clear_oacanlogpara() {
  if (GetArenaNoVirtual() == NULL && oacanlogpara_ != NULL) delete oacanlogpara_;
  oacanlogpara_ = NULL;
}
const ::hqyPudPara::acanalogpara& acpara::oacanlogpara() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.acpara.oacanlogpara)
  return oacanlogpara_ != NULL ? *oacanlogpara_
                         : *::hqyPudPara::acanalogpara::internal_default_instance();
}
::hqyPudPara::acanalogpara* acpara::mutable_oacanlogpara() {
  
  if (oacanlogpara_ == NULL) {
    oacanlogpara_ = new ::hqyPudPara::acanalogpara;
  }
  // @@protoc_insertion_point(field_mutable:hqyPudPara.acpara.oacanlogpara)
  return oacanlogpara_;
}
::hqyPudPara::acanalogpara* acpara::release_oacanlogpara() {
  // @@protoc_insertion_point(field_release:hqyPudPara.acpara.oacanlogpara)
  
  ::hqyPudPara::acanalogpara* temp = oacanlogpara_;
  oacanlogpara_ = NULL;
  return temp;
}
void acpara::set_allocated_oacanlogpara(::hqyPudPara::acanalogpara* oacanlogpara) {
  delete oacanlogpara_;
  oacanlogpara_ = oacanlogpara;
  if (oacanlogpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyPudPara.acpara.oacanlogpara)
}

// .hqyPudPara.acdigitalpara oacdigitalpara = 2;
bool acpara::has_oacdigitalpara() const {
  return this != internal_default_instance() && oacdigitalpara_ != NULL;
}
void acpara::clear_oacdigitalpara() {
  if (GetArenaNoVirtual() == NULL && oacdigitalpara_ != NULL) delete oacdigitalpara_;
  oacdigitalpara_ = NULL;
}
const ::hqyPudPara::acdigitalpara& acpara::oacdigitalpara() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.acpara.oacdigitalpara)
  return oacdigitalpara_ != NULL ? *oacdigitalpara_
                         : *::hqyPudPara::acdigitalpara::internal_default_instance();
}
::hqyPudPara::acdigitalpara* acpara::mutable_oacdigitalpara() {
  
  if (oacdigitalpara_ == NULL) {
    oacdigitalpara_ = new ::hqyPudPara::acdigitalpara;
  }
  // @@protoc_insertion_point(field_mutable:hqyPudPara.acpara.oacdigitalpara)
  return oacdigitalpara_;
}
::hqyPudPara::acdigitalpara* acpara::release_oacdigitalpara() {
  // @@protoc_insertion_point(field_release:hqyPudPara.acpara.oacdigitalpara)
  
  ::hqyPudPara::acdigitalpara* temp = oacdigitalpara_;
  oacdigitalpara_ = NULL;
  return temp;
}
void acpara::set_allocated_oacdigitalpara(::hqyPudPara::acdigitalpara* oacdigitalpara) {
  delete oacdigitalpara_;
  oacdigitalpara_ = oacdigitalpara;
  if (oacdigitalpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyPudPara.acpara.oacdigitalpara)
}

// uint32 nbinaryout = 3;
void acpara::clear_nbinaryout() {
  nbinaryout_ = 0u;
}
::google::protobuf::uint32 acpara::nbinaryout() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.acpara.nbinaryout)
  return nbinaryout_;
}
void acpara::set_nbinaryout(::google::protobuf::uint32 value) {
  
  nbinaryout_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.acpara.nbinaryout)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int manualpara::kOacparaFieldNumber;
const int manualpara::kSendzeroafterstopFieldNumber;
const int manualpara::kNdelaytimeFieldNumber;
const int manualpara::kNIsStopBiChangedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

manualpara::manualpara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyPUDPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyPudPara.manualpara)
}
manualpara::manualpara(const manualpara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oacpara()) {
    oacpara_ = new ::hqyPudPara::acpara(*from.oacpara_);
  } else {
    oacpara_ = NULL;
  }
  ::memcpy(&sendzeroafterstop_, &from.sendzeroafterstop_,
    reinterpret_cast<char*>(&nisstopbichanged_) -
    reinterpret_cast<char*>(&sendzeroafterstop_) + sizeof(nisstopbichanged_));
  // @@protoc_insertion_point(copy_constructor:hqyPudPara.manualpara)
}

void manualpara::SharedCtor() {
  ::memset(&oacpara_, 0, reinterpret_cast<char*>(&nisstopbichanged_) -
    reinterpret_cast<char*>(&oacpara_) + sizeof(nisstopbichanged_));
  _cached_size_ = 0;
}

manualpara::~manualpara() {
  // @@protoc_insertion_point(destructor:hqyPudPara.manualpara)
  SharedDtor();
}

void manualpara::SharedDtor() {
  if (this != internal_default_instance()) {
    delete oacpara_;
  }
}

void manualpara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* manualpara::descriptor() {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[4].descriptor;
}

const manualpara& manualpara::default_instance() {
  protobuf_hqyPUDPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

manualpara* manualpara::New(::google::protobuf::Arena* arena) const {
  manualpara* n = new manualpara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void manualpara::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyPudPara.manualpara)
  if (GetArenaNoVirtual() == NULL && oacpara_ != NULL) {
    delete oacpara_;
  }
  oacpara_ = NULL;
  ::memset(&sendzeroafterstop_, 0, reinterpret_cast<char*>(&nisstopbichanged_) -
    reinterpret_cast<char*>(&sendzeroafterstop_) + sizeof(nisstopbichanged_));
}

bool manualpara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyPudPara.manualpara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .hqyPudPara.acpara oacpara = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oacpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sendzeroafterstop = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sendzeroafterstop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ndelaytime = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ndelaytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nIsStopBiChanged = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nisstopbichanged_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyPudPara.manualpara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyPudPara.manualpara)
  return false;
#undef DO_
}

void manualpara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyPudPara.manualpara)
  // .hqyPudPara.acpara oacpara = 1;
  if (this->has_oacpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->oacpara_, output);
  }

  // bool sendzeroafterstop = 2;
  if (this->sendzeroafterstop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->sendzeroafterstop(), output);
  }

  // uint32 ndelaytime = 3;
  if (this->ndelaytime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ndelaytime(), output);
  }

  // uint32 nIsStopBiChanged = 4;
  if (this->nisstopbichanged() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nisstopbichanged(), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyPudPara.manualpara)
}

::google::protobuf::uint8* manualpara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyPudPara.manualpara)
  // .hqyPudPara.acpara oacpara = 1;
  if (this->has_oacpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->oacpara_, false, target);
  }

  // bool sendzeroafterstop = 2;
  if (this->sendzeroafterstop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->sendzeroafterstop(), target);
  }

  // uint32 ndelaytime = 3;
  if (this->ndelaytime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ndelaytime(), target);
  }

  // uint32 nIsStopBiChanged = 4;
  if (this->nisstopbichanged() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->nisstopbichanged(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyPudPara.manualpara)
  return target;
}

size_t manualpara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyPudPara.manualpara)
  size_t total_size = 0;

  // .hqyPudPara.acpara oacpara = 1;
  if (this->has_oacpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oacpara_);
  }

  // bool sendzeroafterstop = 2;
  if (this->sendzeroafterstop() != 0) {
    total_size += 1 + 1;
  }

  // uint32 ndelaytime = 3;
  if (this->ndelaytime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ndelaytime());
  }

  // uint32 nIsStopBiChanged = 4;
  if (this->nisstopbichanged() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nisstopbichanged());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void manualpara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyPudPara.manualpara)
  GOOGLE_DCHECK_NE(&from, this);
  const manualpara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const manualpara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyPudPara.manualpara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyPudPara.manualpara)
    MergeFrom(*source);
  }
}

void manualpara::MergeFrom(const manualpara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyPudPara.manualpara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oacpara()) {
    mutable_oacpara()->::hqyPudPara::acpara::MergeFrom(from.oacpara());
  }
  if (from.sendzeroafterstop() != 0) {
    set_sendzeroafterstop(from.sendzeroafterstop());
  }
  if (from.ndelaytime() != 0) {
    set_ndelaytime(from.ndelaytime());
  }
  if (from.nisstopbichanged() != 0) {
    set_nisstopbichanged(from.nisstopbichanged());
  }
}

void manualpara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyPudPara.manualpara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void manualpara::CopyFrom(const manualpara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyPudPara.manualpara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool manualpara::IsInitialized() const {
  return true;
}

void manualpara::Swap(manualpara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void manualpara::InternalSwap(manualpara* other) {
  std::swap(oacpara_, other->oacpara_);
  std::swap(sendzeroafterstop_, other->sendzeroafterstop_);
  std::swap(ndelaytime_, other->ndelaytime_);
  std::swap(nisstopbichanged_, other->nisstopbichanged_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata manualpara::GetMetadata() const {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// manualpara

// .hqyPudPara.acpara oacpara = 1;
bool manualpara::has_oacpara() const {
  return this != internal_default_instance() && oacpara_ != NULL;
}
void manualpara::clear_oacpara() {
  if (GetArenaNoVirtual() == NULL && oacpara_ != NULL) delete oacpara_;
  oacpara_ = NULL;
}
const ::hqyPudPara::acpara& manualpara::oacpara() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.manualpara.oacpara)
  return oacpara_ != NULL ? *oacpara_
                         : *::hqyPudPara::acpara::internal_default_instance();
}
::hqyPudPara::acpara* manualpara::mutable_oacpara() {
  
  if (oacpara_ == NULL) {
    oacpara_ = new ::hqyPudPara::acpara;
  }
  // @@protoc_insertion_point(field_mutable:hqyPudPara.manualpara.oacpara)
  return oacpara_;
}
::hqyPudPara::acpara* manualpara::release_oacpara() {
  // @@protoc_insertion_point(field_release:hqyPudPara.manualpara.oacpara)
  
  ::hqyPudPara::acpara* temp = oacpara_;
  oacpara_ = NULL;
  return temp;
}
void manualpara::set_allocated_oacpara(::hqyPudPara::acpara* oacpara) {
  delete oacpara_;
  oacpara_ = oacpara;
  if (oacpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyPudPara.manualpara.oacpara)
}

// bool sendzeroafterstop = 2;
void manualpara::clear_sendzeroafterstop() {
  sendzeroafterstop_ = false;
}
bool manualpara::sendzeroafterstop() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.manualpara.sendzeroafterstop)
  return sendzeroafterstop_;
}
void manualpara::set_sendzeroafterstop(bool value) {
  
  sendzeroafterstop_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.manualpara.sendzeroafterstop)
}

// uint32 ndelaytime = 3;
void manualpara::clear_ndelaytime() {
  ndelaytime_ = 0u;
}
::google::protobuf::uint32 manualpara::ndelaytime() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.manualpara.ndelaytime)
  return ndelaytime_;
}
void manualpara::set_ndelaytime(::google::protobuf::uint32 value) {
  
  ndelaytime_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.manualpara.ndelaytime)
}

// uint32 nIsStopBiChanged = 4;
void manualpara::clear_nisstopbichanged() {
  nisstopbichanged_ = 0u;
}
::google::protobuf::uint32 manualpara::nisstopbichanged() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.manualpara.nIsStopBiChanged)
  return nisstopbichanged_;
}
void manualpara::set_nisstopbichanged(::google::protobuf::uint32 value) {
  
  nisstopbichanged_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.manualpara.nIsStopBiChanged)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestItem::kOtesttypeFieldNumber;
const int TestItem::kOmanualFieldNumber;
const int TestItem::kOstateparaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestItem::TestItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyPUDPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyPudPara.TestItem)
}
TestItem::TestItem(const TestItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_omanual()) {
    omanual_ = new ::hqyPudPara::manualpara(*from.omanual_);
  } else {
    omanual_ = NULL;
  }
  if (from.has_ostatepara()) {
    ostatepara_ = new ::hqyPudPara::states(*from.ostatepara_);
  } else {
    ostatepara_ = NULL;
  }
  otesttype_ = from.otesttype_;
  // @@protoc_insertion_point(copy_constructor:hqyPudPara.TestItem)
}

void TestItem::SharedCtor() {
  ::memset(&omanual_, 0, reinterpret_cast<char*>(&otesttype_) -
    reinterpret_cast<char*>(&omanual_) + sizeof(otesttype_));
  _cached_size_ = 0;
}

TestItem::~TestItem() {
  // @@protoc_insertion_point(destructor:hqyPudPara.TestItem)
  SharedDtor();
}

void TestItem::SharedDtor() {
  if (this != internal_default_instance()) {
    delete omanual_;
  }
  if (this != internal_default_instance()) {
    delete ostatepara_;
  }
}

void TestItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestItem::descriptor() {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[5].descriptor;
}

const TestItem& TestItem::default_instance() {
  protobuf_hqyPUDPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestItem* TestItem::New(::google::protobuf::Arena* arena) const {
  TestItem* n = new TestItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestItem::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyPudPara.TestItem)
  if (GetArenaNoVirtual() == NULL && omanual_ != NULL) {
    delete omanual_;
  }
  omanual_ = NULL;
  if (GetArenaNoVirtual() == NULL && ostatepara_ != NULL) {
    delete ostatepara_;
  }
  ostatepara_ = NULL;
  otesttype_ = 0;
}

bool TestItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyPudPara.TestItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .hqyPudPara.para_type otesttype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_otesttype(static_cast< ::hqyPudPara::para_type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .hqyPudPara.manualpara omanual = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_omanual()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .hqyPudPara.states ostatepara = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ostatepara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyPudPara.TestItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyPudPara.TestItem)
  return false;
#undef DO_
}

void TestItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyPudPara.TestItem)
  // .hqyPudPara.para_type otesttype = 1;
  if (this->otesttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->otesttype(), output);
  }

  // .hqyPudPara.manualpara omanual = 2;
  if (this->has_omanual()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->omanual_, output);
  }

  // .hqyPudPara.states ostatepara = 3;
  if (this->has_ostatepara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ostatepara_, output);
  }

  // @@protoc_insertion_point(serialize_end:hqyPudPara.TestItem)
}

::google::protobuf::uint8* TestItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyPudPara.TestItem)
  // .hqyPudPara.para_type otesttype = 1;
  if (this->otesttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->otesttype(), target);
  }

  // .hqyPudPara.manualpara omanual = 2;
  if (this->has_omanual()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->omanual_, false, target);
  }

  // .hqyPudPara.states ostatepara = 3;
  if (this->has_ostatepara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ostatepara_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyPudPara.TestItem)
  return target;
}

size_t TestItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyPudPara.TestItem)
  size_t total_size = 0;

  // .hqyPudPara.manualpara omanual = 2;
  if (this->has_omanual()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->omanual_);
  }

  // .hqyPudPara.states ostatepara = 3;
  if (this->has_ostatepara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ostatepara_);
  }

  // .hqyPudPara.para_type otesttype = 1;
  if (this->otesttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->otesttype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyPudPara.TestItem)
  GOOGLE_DCHECK_NE(&from, this);
  const TestItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyPudPara.TestItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyPudPara.TestItem)
    MergeFrom(*source);
  }
}

void TestItem::MergeFrom(const TestItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyPudPara.TestItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_omanual()) {
    mutable_omanual()->::hqyPudPara::manualpara::MergeFrom(from.omanual());
  }
  if (from.has_ostatepara()) {
    mutable_ostatepara()->::hqyPudPara::states::MergeFrom(from.ostatepara());
  }
  if (from.otesttype() != 0) {
    set_otesttype(from.otesttype());
  }
}

void TestItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyPudPara.TestItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestItem::CopyFrom(const TestItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyPudPara.TestItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestItem::IsInitialized() const {
  return true;
}

void TestItem::Swap(TestItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestItem::InternalSwap(TestItem* other) {
  std::swap(omanual_, other->omanual_);
  std::swap(ostatepara_, other->ostatepara_);
  std::swap(otesttype_, other->otesttype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestItem::GetMetadata() const {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestItem

// .hqyPudPara.para_type otesttype = 1;
void TestItem::clear_otesttype() {
  otesttype_ = 0;
}
::hqyPudPara::para_type TestItem::otesttype() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.TestItem.otesttype)
  return static_cast< ::hqyPudPara::para_type >(otesttype_);
}
void TestItem::set_otesttype(::hqyPudPara::para_type value) {
  
  otesttype_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.TestItem.otesttype)
}

// .hqyPudPara.manualpara omanual = 2;
bool TestItem::has_omanual() const {
  return this != internal_default_instance() && omanual_ != NULL;
}
void TestItem::clear_omanual() {
  if (GetArenaNoVirtual() == NULL && omanual_ != NULL) delete omanual_;
  omanual_ = NULL;
}
const ::hqyPudPara::manualpara& TestItem::omanual() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.TestItem.omanual)
  return omanual_ != NULL ? *omanual_
                         : *::hqyPudPara::manualpara::internal_default_instance();
}
::hqyPudPara::manualpara* TestItem::mutable_omanual() {
  
  if (omanual_ == NULL) {
    omanual_ = new ::hqyPudPara::manualpara;
  }
  // @@protoc_insertion_point(field_mutable:hqyPudPara.TestItem.omanual)
  return omanual_;
}
::hqyPudPara::manualpara* TestItem::release_omanual() {
  // @@protoc_insertion_point(field_release:hqyPudPara.TestItem.omanual)
  
  ::hqyPudPara::manualpara* temp = omanual_;
  omanual_ = NULL;
  return temp;
}
void TestItem::set_allocated_omanual(::hqyPudPara::manualpara* omanual) {
  delete omanual_;
  omanual_ = omanual;
  if (omanual) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyPudPara.TestItem.omanual)
}

// .hqyPudPara.states ostatepara = 3;
bool TestItem::has_ostatepara() const {
  return this != internal_default_instance() && ostatepara_ != NULL;
}
void TestItem::clear_ostatepara() {
  if (GetArenaNoVirtual() == NULL && ostatepara_ != NULL) delete ostatepara_;
  ostatepara_ = NULL;
}
const ::hqyPudPara::states& TestItem::ostatepara() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.TestItem.ostatepara)
  return ostatepara_ != NULL ? *ostatepara_
                         : *::hqyPudPara::states::internal_default_instance();
}
::hqyPudPara::states* TestItem::mutable_ostatepara() {
  
  if (ostatepara_ == NULL) {
    ostatepara_ = new ::hqyPudPara::states;
  }
  // @@protoc_insertion_point(field_mutable:hqyPudPara.TestItem.ostatepara)
  return ostatepara_;
}
::hqyPudPara::states* TestItem::release_ostatepara() {
  // @@protoc_insertion_point(field_release:hqyPudPara.TestItem.ostatepara)
  
  ::hqyPudPara::states* temp = ostatepara_;
  ostatepara_ = NULL;
  return temp;
}
void TestItem::set_allocated_ostatepara(::hqyPudPara::states* ostatepara) {
  delete ostatepara_;
  ostatepara_ = ostatepara;
  if (ostatepara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyPudPara.TestItem.ostatepara)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int state::kNIndexFieldNumber;
const int state::kOacparaFieldNumber;
const int state::kNTrigerTypeFieldNumber;
const int state::kNTrigerLogicFieldNumber;
const int state::kNTirgerTimeFieldNumber;
const int state::kSGpstimeFieldNumber;
const int state::kNsGpsTimeFieldNumber;
const int state::kNBiValideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

state::state()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyPUDPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyPudPara.state)
}
state::state(const state& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oacpara()) {
    oacpara_ = new ::hqyPudPara::acpara(*from.oacpara_);
  } else {
    oacpara_ = NULL;
  }
  ::memcpy(&nindex_, &from.nindex_,
    reinterpret_cast<char*>(&nbivalide_) -
    reinterpret_cast<char*>(&nindex_) + sizeof(nbivalide_));
  // @@protoc_insertion_point(copy_constructor:hqyPudPara.state)
}

void state::SharedCtor() {
  ::memset(&oacpara_, 0, reinterpret_cast<char*>(&nbivalide_) -
    reinterpret_cast<char*>(&oacpara_) + sizeof(nbivalide_));
  _cached_size_ = 0;
}

state::~state() {
  // @@protoc_insertion_point(destructor:hqyPudPara.state)
  SharedDtor();
}

void state::SharedDtor() {
  if (this != internal_default_instance()) {
    delete oacpara_;
  }
}

void state::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* state::descriptor() {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[6].descriptor;
}

const state& state::default_instance() {
  protobuf_hqyPUDPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

state* state::New(::google::protobuf::Arena* arena) const {
  state* n = new state;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void state::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyPudPara.state)
  if (GetArenaNoVirtual() == NULL && oacpara_ != NULL) {
    delete oacpara_;
  }
  oacpara_ = NULL;
  ::memset(&nindex_, 0, reinterpret_cast<char*>(&nbivalide_) -
    reinterpret_cast<char*>(&nindex_) + sizeof(nbivalide_));
}

bool state::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyPudPara.state)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 nIndex = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .hqyPudPara.acpara oacpara = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oacpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nTrigerType = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntrigertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nTrigerLogic = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntrigerlogic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nTirgerTime = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntirgertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sGpstime = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sgpstime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nsGpsTime = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nsgpstime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nBiValide = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nbivalide_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyPudPara.state)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyPudPara.state)
  return false;
#undef DO_
}

void state::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyPudPara.state)
  // uint32 nIndex = 1;
  if (this->nindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nindex(), output);
  }

  // .hqyPudPara.acpara oacpara = 2;
  if (this->has_oacpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->oacpara_, output);
  }

  // uint32 nTrigerType = 3;
  if (this->ntrigertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ntrigertype(), output);
  }

  // uint32 nTrigerLogic = 4;
  if (this->ntrigerlogic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ntrigerlogic(), output);
  }

  // uint32 nTirgerTime = 5;
  if (this->ntirgertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ntirgertime(), output);
  }

  // uint32 sGpstime = 6;
  if (this->sgpstime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->sgpstime(), output);
  }

  // uint32 nsGpsTime = 7;
  if (this->nsgpstime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->nsgpstime(), output);
  }

  // uint32 nBiValide = 8;
  if (this->nbivalide() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->nbivalide(), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyPudPara.state)
}

::google::protobuf::uint8* state::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyPudPara.state)
  // uint32 nIndex = 1;
  if (this->nindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nindex(), target);
  }

  // .hqyPudPara.acpara oacpara = 2;
  if (this->has_oacpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->oacpara_, false, target);
  }

  // uint32 nTrigerType = 3;
  if (this->ntrigertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ntrigertype(), target);
  }

  // uint32 nTrigerLogic = 4;
  if (this->ntrigerlogic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ntrigerlogic(), target);
  }

  // uint32 nTirgerTime = 5;
  if (this->ntirgertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ntirgertime(), target);
  }

  // uint32 sGpstime = 6;
  if (this->sgpstime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->sgpstime(), target);
  }

  // uint32 nsGpsTime = 7;
  if (this->nsgpstime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->nsgpstime(), target);
  }

  // uint32 nBiValide = 8;
  if (this->nbivalide() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->nbivalide(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyPudPara.state)
  return target;
}

size_t state::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyPudPara.state)
  size_t total_size = 0;

  // .hqyPudPara.acpara oacpara = 2;
  if (this->has_oacpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oacpara_);
  }

  // uint32 nIndex = 1;
  if (this->nindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nindex());
  }

  // uint32 nTrigerType = 3;
  if (this->ntrigertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntrigertype());
  }

  // uint32 nTrigerLogic = 4;
  if (this->ntrigerlogic() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntrigerlogic());
  }

  // uint32 nTirgerTime = 5;
  if (this->ntirgertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntirgertime());
  }

  // uint32 sGpstime = 6;
  if (this->sgpstime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sgpstime());
  }

  // uint32 nsGpsTime = 7;
  if (this->nsgpstime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nsgpstime());
  }

  // uint32 nBiValide = 8;
  if (this->nbivalide() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nbivalide());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void state::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyPudPara.state)
  GOOGLE_DCHECK_NE(&from, this);
  const state* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const state>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyPudPara.state)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyPudPara.state)
    MergeFrom(*source);
  }
}

void state::MergeFrom(const state& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyPudPara.state)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_oacpara()) {
    mutable_oacpara()->::hqyPudPara::acpara::MergeFrom(from.oacpara());
  }
  if (from.nindex() != 0) {
    set_nindex(from.nindex());
  }
  if (from.ntrigertype() != 0) {
    set_ntrigertype(from.ntrigertype());
  }
  if (from.ntrigerlogic() != 0) {
    set_ntrigerlogic(from.ntrigerlogic());
  }
  if (from.ntirgertime() != 0) {
    set_ntirgertime(from.ntirgertime());
  }
  if (from.sgpstime() != 0) {
    set_sgpstime(from.sgpstime());
  }
  if (from.nsgpstime() != 0) {
    set_nsgpstime(from.nsgpstime());
  }
  if (from.nbivalide() != 0) {
    set_nbivalide(from.nbivalide());
  }
}

void state::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyPudPara.state)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void state::CopyFrom(const state& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyPudPara.state)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool state::IsInitialized() const {
  return true;
}

void state::Swap(state* other) {
  if (other == this) return;
  InternalSwap(other);
}
void state::InternalSwap(state* other) {
  std::swap(oacpara_, other->oacpara_);
  std::swap(nindex_, other->nindex_);
  std::swap(ntrigertype_, other->ntrigertype_);
  std::swap(ntrigerlogic_, other->ntrigerlogic_);
  std::swap(ntirgertime_, other->ntirgertime_);
  std::swap(sgpstime_, other->sgpstime_);
  std::swap(nsgpstime_, other->nsgpstime_);
  std::swap(nbivalide_, other->nbivalide_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata state::GetMetadata() const {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// state

// uint32 nIndex = 1;
void state::clear_nindex() {
  nindex_ = 0u;
}
::google::protobuf::uint32 state::nindex() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.state.nIndex)
  return nindex_;
}
void state::set_nindex(::google::protobuf::uint32 value) {
  
  nindex_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.state.nIndex)
}

// .hqyPudPara.acpara oacpara = 2;
bool state::has_oacpara() const {
  return this != internal_default_instance() && oacpara_ != NULL;
}
void state::clear_oacpara() {
  if (GetArenaNoVirtual() == NULL && oacpara_ != NULL) delete oacpara_;
  oacpara_ = NULL;
}
const ::hqyPudPara::acpara& state::oacpara() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.state.oacpara)
  return oacpara_ != NULL ? *oacpara_
                         : *::hqyPudPara::acpara::internal_default_instance();
}
::hqyPudPara::acpara* state::mutable_oacpara() {
  
  if (oacpara_ == NULL) {
    oacpara_ = new ::hqyPudPara::acpara;
  }
  // @@protoc_insertion_point(field_mutable:hqyPudPara.state.oacpara)
  return oacpara_;
}
::hqyPudPara::acpara* state::release_oacpara() {
  // @@protoc_insertion_point(field_release:hqyPudPara.state.oacpara)
  
  ::hqyPudPara::acpara* temp = oacpara_;
  oacpara_ = NULL;
  return temp;
}
void state::set_allocated_oacpara(::hqyPudPara::acpara* oacpara) {
  delete oacpara_;
  oacpara_ = oacpara;
  if (oacpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyPudPara.state.oacpara)
}

// uint32 nTrigerType = 3;
void state::clear_ntrigertype() {
  ntrigertype_ = 0u;
}
::google::protobuf::uint32 state::ntrigertype() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.state.nTrigerType)
  return ntrigertype_;
}
void state::set_ntrigertype(::google::protobuf::uint32 value) {
  
  ntrigertype_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.state.nTrigerType)
}

// uint32 nTrigerLogic = 4;
void state::clear_ntrigerlogic() {
  ntrigerlogic_ = 0u;
}
::google::protobuf::uint32 state::ntrigerlogic() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.state.nTrigerLogic)
  return ntrigerlogic_;
}
void state::set_ntrigerlogic(::google::protobuf::uint32 value) {
  
  ntrigerlogic_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.state.nTrigerLogic)
}

// uint32 nTirgerTime = 5;
void state::clear_ntirgertime() {
  ntirgertime_ = 0u;
}
::google::protobuf::uint32 state::ntirgertime() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.state.nTirgerTime)
  return ntirgertime_;
}
void state::set_ntirgertime(::google::protobuf::uint32 value) {
  
  ntirgertime_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.state.nTirgerTime)
}

// uint32 sGpstime = 6;
void state::clear_sgpstime() {
  sgpstime_ = 0u;
}
::google::protobuf::uint32 state::sgpstime() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.state.sGpstime)
  return sgpstime_;
}
void state::set_sgpstime(::google::protobuf::uint32 value) {
  
  sgpstime_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.state.sGpstime)
}

// uint32 nsGpsTime = 7;
void state::clear_nsgpstime() {
  nsgpstime_ = 0u;
}
::google::protobuf::uint32 state::nsgpstime() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.state.nsGpsTime)
  return nsgpstime_;
}
void state::set_nsgpstime(::google::protobuf::uint32 value) {
  
  nsgpstime_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.state.nsGpsTime)
}

// uint32 nBiValide = 8;
void state::clear_nbivalide() {
  nbivalide_ = 0u;
}
::google::protobuf::uint32 state::nbivalide() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.state.nBiValide)
  return nbivalide_;
}
void state::set_nbivalide(::google::protobuf::uint32 value) {
  
  nbivalide_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.state.nBiValide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int states::kOstatesFieldNumber;
const int states::kNisloopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

states::states()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyPUDPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyPudPara.states)
}
states::states(const states& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ostates_(from.ostates_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nisloop_ = from.nisloop_;
  // @@protoc_insertion_point(copy_constructor:hqyPudPara.states)
}

void states::SharedCtor() {
  nisloop_ = 0u;
  _cached_size_ = 0;
}

states::~states() {
  // @@protoc_insertion_point(destructor:hqyPudPara.states)
  SharedDtor();
}

void states::SharedDtor() {
}

void states::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* states::descriptor() {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[7].descriptor;
}

const states& states::default_instance() {
  protobuf_hqyPUDPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

states* states::New(::google::protobuf::Arena* arena) const {
  states* n = new states;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void states::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyPudPara.states)
  ostates_.Clear();
  nisloop_ = 0u;
}

bool states::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyPudPara.states)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hqyPudPara.state ostates = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ostates()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // uint32 nisloop = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nisloop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyPudPara.states)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyPudPara.states)
  return false;
#undef DO_
}

void states::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyPudPara.states)
  // repeated .hqyPudPara.state ostates = 1;
  for (unsigned int i = 0, n = this->ostates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ostates(i), output);
  }

  // uint32 nisloop = 2;
  if (this->nisloop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nisloop(), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyPudPara.states)
}

::google::protobuf::uint8* states::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyPudPara.states)
  // repeated .hqyPudPara.state ostates = 1;
  for (unsigned int i = 0, n = this->ostates_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ostates(i), false, target);
  }

  // uint32 nisloop = 2;
  if (this->nisloop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->nisloop(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyPudPara.states)
  return target;
}

size_t states::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyPudPara.states)
  size_t total_size = 0;

  // repeated .hqyPudPara.state ostates = 1;
  {
    unsigned int count = this->ostates_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ostates(i));
    }
  }

  // uint32 nisloop = 2;
  if (this->nisloop() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nisloop());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void states::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyPudPara.states)
  GOOGLE_DCHECK_NE(&from, this);
  const states* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const states>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyPudPara.states)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyPudPara.states)
    MergeFrom(*source);
  }
}

void states::MergeFrom(const states& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyPudPara.states)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ostates_.MergeFrom(from.ostates_);
  if (from.nisloop() != 0) {
    set_nisloop(from.nisloop());
  }
}

void states::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyPudPara.states)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void states::CopyFrom(const states& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyPudPara.states)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool states::IsInitialized() const {
  return true;
}

void states::Swap(states* other) {
  if (other == this) return;
  InternalSwap(other);
}
void states::InternalSwap(states* other) {
  ostates_.UnsafeArenaSwap(&other->ostates_);
  std::swap(nisloop_, other->nisloop_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata states::GetMetadata() const {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// states

// repeated .hqyPudPara.state ostates = 1;
int states::ostates_size() const {
  return ostates_.size();
}
void states::clear_ostates() {
  ostates_.Clear();
}
const ::hqyPudPara::state& states::ostates(int index) const {
  // @@protoc_insertion_point(field_get:hqyPudPara.states.ostates)
  return ostates_.Get(index);
}
::hqyPudPara::state* states::mutable_ostates(int index) {
  // @@protoc_insertion_point(field_mutable:hqyPudPara.states.ostates)
  return ostates_.Mutable(index);
}
::hqyPudPara::state* states::add_ostates() {
  // @@protoc_insertion_point(field_add:hqyPudPara.states.ostates)
  return ostates_.Add();
}
::google::protobuf::RepeatedPtrField< ::hqyPudPara::state >*
states::mutable_ostates() {
  // @@protoc_insertion_point(field_mutable_list:hqyPudPara.states.ostates)
  return &ostates_;
}
const ::google::protobuf::RepeatedPtrField< ::hqyPudPara::state >&
states::ostates() const {
  // @@protoc_insertion_point(field_list:hqyPudPara.states.ostates)
  return ostates_;
}

// uint32 nisloop = 2;
void states::clear_nisloop() {
  nisloop_ = 0u;
}
::google::protobuf::uint32 states::nisloop() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.states.nisloop)
  return nisloop_;
}
void states::set_nisloop(::google::protobuf::uint32 value) {
  
  nisloop_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.states.nisloop)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateResultItem::kNindexFieldNumber;
const int StateResultItem::kSecondtimeFieldNumber;
const int StateResultItem::kNstimeFieldNumber;
const int StateResultItem::kOactivetypeFieldNumber;
const int StateResultItem::kNBinstateFieldNumber;
const int StateResultItem::kNcurrentstateIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateResultItem::StateResultItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyPUDPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyPudPara.StateResultItem)
}
StateResultItem::StateResultItem(const StateResultItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nindex_, &from.nindex_,
    reinterpret_cast<char*>(&ncurrentstateindex_) -
    reinterpret_cast<char*>(&nindex_) + sizeof(ncurrentstateindex_));
  // @@protoc_insertion_point(copy_constructor:hqyPudPara.StateResultItem)
}

void StateResultItem::SharedCtor() {
  ::memset(&nindex_, 0, reinterpret_cast<char*>(&ncurrentstateindex_) -
    reinterpret_cast<char*>(&nindex_) + sizeof(ncurrentstateindex_));
  _cached_size_ = 0;
}

StateResultItem::~StateResultItem() {
  // @@protoc_insertion_point(destructor:hqyPudPara.StateResultItem)
  SharedDtor();
}

void StateResultItem::SharedDtor() {
}

void StateResultItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateResultItem::descriptor() {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[8].descriptor;
}

const StateResultItem& StateResultItem::default_instance() {
  protobuf_hqyPUDPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

StateResultItem* StateResultItem::New(::google::protobuf::Arena* arena) const {
  StateResultItem* n = new StateResultItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StateResultItem::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyPudPara.StateResultItem)
  ::memset(&nindex_, 0, reinterpret_cast<char*>(&ncurrentstateindex_) -
    reinterpret_cast<char*>(&nindex_) + sizeof(ncurrentstateindex_));
}

bool StateResultItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyPudPara.StateResultItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 nindex = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 secondtime = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &secondtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nstime = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nstime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 oactivetype = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oactivetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nBinstate = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nbinstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ncurrentstateIndex = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ncurrentstateindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyPudPara.StateResultItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyPudPara.StateResultItem)
  return false;
#undef DO_
}

void StateResultItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyPudPara.StateResultItem)
  // uint32 nindex = 1;
  if (this->nindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nindex(), output);
  }

  // uint32 secondtime = 2;
  if (this->secondtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->secondtime(), output);
  }

  // uint32 nstime = 3;
  if (this->nstime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nstime(), output);
  }

  // uint32 oactivetype = 4;
  if (this->oactivetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->oactivetype(), output);
  }

  // uint32 nBinstate = 5;
  if (this->nbinstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->nbinstate(), output);
  }

  // uint32 ncurrentstateIndex = 6;
  if (this->ncurrentstateindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ncurrentstateindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyPudPara.StateResultItem)
}

::google::protobuf::uint8* StateResultItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyPudPara.StateResultItem)
  // uint32 nindex = 1;
  if (this->nindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nindex(), target);
  }

  // uint32 secondtime = 2;
  if (this->secondtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->secondtime(), target);
  }

  // uint32 nstime = 3;
  if (this->nstime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->nstime(), target);
  }

  // uint32 oactivetype = 4;
  if (this->oactivetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->oactivetype(), target);
  }

  // uint32 nBinstate = 5;
  if (this->nbinstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->nbinstate(), target);
  }

  // uint32 ncurrentstateIndex = 6;
  if (this->ncurrentstateindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ncurrentstateindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyPudPara.StateResultItem)
  return target;
}

size_t StateResultItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyPudPara.StateResultItem)
  size_t total_size = 0;

  // uint32 nindex = 1;
  if (this->nindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nindex());
  }

  // uint32 secondtime = 2;
  if (this->secondtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->secondtime());
  }

  // uint32 nstime = 3;
  if (this->nstime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nstime());
  }

  // uint32 oactivetype = 4;
  if (this->oactivetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->oactivetype());
  }

  // uint32 nBinstate = 5;
  if (this->nbinstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nbinstate());
  }

  // uint32 ncurrentstateIndex = 6;
  if (this->ncurrentstateindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ncurrentstateindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateResultItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyPudPara.StateResultItem)
  GOOGLE_DCHECK_NE(&from, this);
  const StateResultItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateResultItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyPudPara.StateResultItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyPudPara.StateResultItem)
    MergeFrom(*source);
  }
}

void StateResultItem::MergeFrom(const StateResultItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyPudPara.StateResultItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.nindex() != 0) {
    set_nindex(from.nindex());
  }
  if (from.secondtime() != 0) {
    set_secondtime(from.secondtime());
  }
  if (from.nstime() != 0) {
    set_nstime(from.nstime());
  }
  if (from.oactivetype() != 0) {
    set_oactivetype(from.oactivetype());
  }
  if (from.nbinstate() != 0) {
    set_nbinstate(from.nbinstate());
  }
  if (from.ncurrentstateindex() != 0) {
    set_ncurrentstateindex(from.ncurrentstateindex());
  }
}

void StateResultItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyPudPara.StateResultItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateResultItem::CopyFrom(const StateResultItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyPudPara.StateResultItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateResultItem::IsInitialized() const {
  return true;
}

void StateResultItem::Swap(StateResultItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateResultItem::InternalSwap(StateResultItem* other) {
  std::swap(nindex_, other->nindex_);
  std::swap(secondtime_, other->secondtime_);
  std::swap(nstime_, other->nstime_);
  std::swap(oactivetype_, other->oactivetype_);
  std::swap(nbinstate_, other->nbinstate_);
  std::swap(ncurrentstateindex_, other->ncurrentstateindex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateResultItem::GetMetadata() const {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StateResultItem

// uint32 nindex = 1;
void StateResultItem::clear_nindex() {
  nindex_ = 0u;
}
::google::protobuf::uint32 StateResultItem::nindex() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.StateResultItem.nindex)
  return nindex_;
}
void StateResultItem::set_nindex(::google::protobuf::uint32 value) {
  
  nindex_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.StateResultItem.nindex)
}

// uint32 secondtime = 2;
void StateResultItem::clear_secondtime() {
  secondtime_ = 0u;
}
::google::protobuf::uint32 StateResultItem::secondtime() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.StateResultItem.secondtime)
  return secondtime_;
}
void StateResultItem::set_secondtime(::google::protobuf::uint32 value) {
  
  secondtime_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.StateResultItem.secondtime)
}

// uint32 nstime = 3;
void StateResultItem::clear_nstime() {
  nstime_ = 0u;
}
::google::protobuf::uint32 StateResultItem::nstime() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.StateResultItem.nstime)
  return nstime_;
}
void StateResultItem::set_nstime(::google::protobuf::uint32 value) {
  
  nstime_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.StateResultItem.nstime)
}

// uint32 oactivetype = 4;
void StateResultItem::clear_oactivetype() {
  oactivetype_ = 0u;
}
::google::protobuf::uint32 StateResultItem::oactivetype() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.StateResultItem.oactivetype)
  return oactivetype_;
}
void StateResultItem::set_oactivetype(::google::protobuf::uint32 value) {
  
  oactivetype_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.StateResultItem.oactivetype)
}

// uint32 nBinstate = 5;
void StateResultItem::clear_nbinstate() {
  nbinstate_ = 0u;
}
::google::protobuf::uint32 StateResultItem::nbinstate() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.StateResultItem.nBinstate)
  return nbinstate_;
}
void StateResultItem::set_nbinstate(::google::protobuf::uint32 value) {
  
  nbinstate_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.StateResultItem.nBinstate)
}

// uint32 ncurrentstateIndex = 6;
void StateResultItem::clear_ncurrentstateindex() {
  ncurrentstateindex_ = 0u;
}
::google::protobuf::uint32 StateResultItem::ncurrentstateindex() const {
  // @@protoc_insertion_point(field_get:hqyPudPara.StateResultItem.ncurrentstateIndex)
  return ncurrentstateindex_;
}
void StateResultItem::set_ncurrentstateindex(::google::protobuf::uint32 value) {
  
  ncurrentstateindex_ = value;
  // @@protoc_insertion_point(field_set:hqyPudPara.StateResultItem.ncurrentstateIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int stateResult::kOitemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

stateResult::stateResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyPUDPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyPudPara.stateResult)
}
stateResult::stateResult(const stateResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      oitem_(from.oitem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hqyPudPara.stateResult)
}

void stateResult::SharedCtor() {
  _cached_size_ = 0;
}

stateResult::~stateResult() {
  // @@protoc_insertion_point(destructor:hqyPudPara.stateResult)
  SharedDtor();
}

void stateResult::SharedDtor() {
}

void stateResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* stateResult::descriptor() {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[9].descriptor;
}

const stateResult& stateResult::default_instance() {
  protobuf_hqyPUDPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

stateResult* stateResult::New(::google::protobuf::Arena* arena) const {
  stateResult* n = new stateResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void stateResult::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyPudPara.stateResult)
  oitem_.Clear();
}

bool stateResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyPudPara.stateResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hqyPudPara.StateResultItem oitem = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_oitem()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyPudPara.stateResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyPudPara.stateResult)
  return false;
#undef DO_
}

void stateResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyPudPara.stateResult)
  // repeated .hqyPudPara.StateResultItem oitem = 1;
  for (unsigned int i = 0, n = this->oitem_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->oitem(i), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyPudPara.stateResult)
}

::google::protobuf::uint8* stateResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyPudPara.stateResult)
  // repeated .hqyPudPara.StateResultItem oitem = 1;
  for (unsigned int i = 0, n = this->oitem_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->oitem(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyPudPara.stateResult)
  return target;
}

size_t stateResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyPudPara.stateResult)
  size_t total_size = 0;

  // repeated .hqyPudPara.StateResultItem oitem = 1;
  {
    unsigned int count = this->oitem_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oitem(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void stateResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyPudPara.stateResult)
  GOOGLE_DCHECK_NE(&from, this);
  const stateResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const stateResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyPudPara.stateResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyPudPara.stateResult)
    MergeFrom(*source);
  }
}

void stateResult::MergeFrom(const stateResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyPudPara.stateResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oitem_.MergeFrom(from.oitem_);
}

void stateResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyPudPara.stateResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stateResult::CopyFrom(const stateResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyPudPara.stateResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stateResult::IsInitialized() const {
  return true;
}

void stateResult::Swap(stateResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void stateResult::InternalSwap(stateResult* other) {
  oitem_.UnsafeArenaSwap(&other->oitem_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata stateResult::GetMetadata() const {
  protobuf_hqyPUDPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyPUDPara_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// stateResult

// repeated .hqyPudPara.StateResultItem oitem = 1;
int stateResult::oitem_size() const {
  return oitem_.size();
}
void stateResult::clear_oitem() {
  oitem_.Clear();
}
const ::hqyPudPara::StateResultItem& stateResult::oitem(int index) const {
  // @@protoc_insertion_point(field_get:hqyPudPara.stateResult.oitem)
  return oitem_.Get(index);
}
::hqyPudPara::StateResultItem* stateResult::mutable_oitem(int index) {
  // @@protoc_insertion_point(field_mutable:hqyPudPara.stateResult.oitem)
  return oitem_.Mutable(index);
}
::hqyPudPara::StateResultItem* stateResult::add_oitem() {
  // @@protoc_insertion_point(field_add:hqyPudPara.stateResult.oitem)
  return oitem_.Add();
}
::google::protobuf::RepeatedPtrField< ::hqyPudPara::StateResultItem >*
stateResult::mutable_oitem() {
  // @@protoc_insertion_point(field_mutable_list:hqyPudPara.stateResult.oitem)
  return &oitem_;
}
const ::google::protobuf::RepeatedPtrField< ::hqyPudPara::StateResultItem >&
stateResult::oitem() const {
  // @@protoc_insertion_point(field_list:hqyPudPara.stateResult.oitem)
  return oitem_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace hqyPudPara

// @@protoc_insertion_point(global_scope)
