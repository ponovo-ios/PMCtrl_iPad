// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structdata.proto

#ifndef PROTOBUF_structdata_2eproto__INCLUDED
#define PROTOBUF_structdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace structdata {
class channelpara;
class channelparaDefaultTypeInternal;
extern channelparaDefaultTypeInternal _channelpara_default_instance_;
class channels;
class channelsDefaultTypeInternal;
extern channelsDefaultTypeInternal _channels_default_instance_;
class data;
class dataDefaultTypeInternal;
extern dataDefaultTypeInternal _data_default_instance_;
}  // namespace structdata

namespace structdata {

namespace protobuf_structdata_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_structdata_2eproto

// ===================================================================

class channelpara : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:structdata.channelpara) */ {
 public:
  channelpara();
  virtual ~channelpara();

  channelpara(const channelpara& from);

  inline channelpara& operator=(const channelpara& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const channelpara& default_instance();

  static inline const channelpara* internal_default_instance() {
    return reinterpret_cast<const channelpara*>(
               &_channelpara_default_instance_);
  }

  void Swap(channelpara* other);

  // implements Message ----------------------------------------------

  inline channelpara* New() const PROTOBUF_FINAL { return New(NULL); }

  channelpara* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const channelpara& from);
  void MergeFrom(const channelpara& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(channelpara* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float famptitude = 1;
  void clear_famptitude();
  static const int kFamptitudeFieldNumber = 1;
  float famptitude() const;
  void set_famptitude(float value);

  // float fphase = 2;
  void clear_fphase();
  static const int kFphaseFieldNumber = 2;
  float fphase() const;
  void set_fphase(float value);

  // float ffre = 3;
  void clear_ffre();
  static const int kFfreFieldNumber = 3;
  float ffre() const;
  void set_ffre(float value);

  // @@protoc_insertion_point(class_scope:structdata.channelpara)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float famptitude_;
  float fphase_;
  float ffre_;
  mutable int _cached_size_;
  friend struct  protobuf_structdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class channels : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:structdata.channels) */ {
 public:
  channels();
  virtual ~channels();

  channels(const channels& from);

  inline channels& operator=(const channels& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const channels& default_instance();

  static inline const channels* internal_default_instance() {
    return reinterpret_cast<const channels*>(
               &_channels_default_instance_);
  }

  void Swap(channels* other);

  // implements Message ----------------------------------------------

  inline channels* New() const PROTOBUF_FINAL { return New(NULL); }

  channels* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const channels& from);
  void MergeFrom(const channels& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(channels* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .structdata.channelpara channelvalue = 1;
  int channelvalue_size() const;
  void clear_channelvalue();
  static const int kChannelvalueFieldNumber = 1;
  const ::structdata::channelpara& channelvalue(int index) const;
  ::structdata::channelpara* mutable_channelvalue(int index);
  ::structdata::channelpara* add_channelvalue();
  ::google::protobuf::RepeatedPtrField< ::structdata::channelpara >*
      mutable_channelvalue();
  const ::google::protobuf::RepeatedPtrField< ::structdata::channelpara >&
      channelvalue() const;

  // uint32 nCount = 2;
  void clear_ncount();
  static const int kNCountFieldNumber = 2;
  ::google::protobuf::uint32 ncount() const;
  void set_ncount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:structdata.channels)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::structdata::channelpara > channelvalue_;
  ::google::protobuf::uint32 ncount_;
  mutable int _cached_size_;
  friend struct  protobuf_structdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:structdata.data) */ {
 public:
  data();
  virtual ~data();

  data(const data& from);

  inline data& operator=(const data& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const data& default_instance();

  static inline const data* internal_default_instance() {
    return reinterpret_cast<const data*>(
               &_data_default_instance_);
  }

  void Swap(data* other);

  // implements Message ----------------------------------------------

  inline data* New() const PROTOBUF_FINAL { return New(NULL); }

  data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const data& from);
  void MergeFrom(const data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .structdata.channels channel = 1;
  int channel_size() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::structdata::channels& channel(int index) const;
  ::structdata::channels* mutable_channel(int index);
  ::structdata::channels* add_channel();
  ::google::protobuf::RepeatedPtrField< ::structdata::channels >*
      mutable_channel();
  const ::google::protobuf::RepeatedPtrField< ::structdata::channels >&
      channel() const;

  // @@protoc_insertion_point(class_scope:structdata.data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::structdata::channels > channel_;
  mutable int _cached_size_;
  friend struct  protobuf_structdata_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// channelpara

// float famptitude = 1;
inline void channelpara::clear_famptitude() {
  famptitude_ = 0;
}
inline float channelpara::famptitude() const {
  // @@protoc_insertion_point(field_get:structdata.channelpara.famptitude)
  return famptitude_;
}
inline void channelpara::set_famptitude(float value) {
  
  famptitude_ = value;
  // @@protoc_insertion_point(field_set:structdata.channelpara.famptitude)
}

// float fphase = 2;
inline void channelpara::clear_fphase() {
  fphase_ = 0;
}
inline float channelpara::fphase() const {
  // @@protoc_insertion_point(field_get:structdata.channelpara.fphase)
  return fphase_;
}
inline void channelpara::set_fphase(float value) {
  
  fphase_ = value;
  // @@protoc_insertion_point(field_set:structdata.channelpara.fphase)
}

// float ffre = 3;
inline void channelpara::clear_ffre() {
  ffre_ = 0;
}
inline float channelpara::ffre() const {
  // @@protoc_insertion_point(field_get:structdata.channelpara.ffre)
  return ffre_;
}
inline void channelpara::set_ffre(float value) {
  
  ffre_ = value;
  // @@protoc_insertion_point(field_set:structdata.channelpara.ffre)
}

// -------------------------------------------------------------------

// channels

// repeated .structdata.channelpara channelvalue = 1;
inline int channels::channelvalue_size() const {
  return channelvalue_.size();
}
inline void channels::clear_channelvalue() {
  channelvalue_.Clear();
}
inline const ::structdata::channelpara& channels::channelvalue(int index) const {
  // @@protoc_insertion_point(field_get:structdata.channels.channelvalue)
  return channelvalue_.Get(index);
}
inline ::structdata::channelpara* channels::mutable_channelvalue(int index) {
  // @@protoc_insertion_point(field_mutable:structdata.channels.channelvalue)
  return channelvalue_.Mutable(index);
}
inline ::structdata::channelpara* channels::add_channelvalue() {
  // @@protoc_insertion_point(field_add:structdata.channels.channelvalue)
  return channelvalue_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::structdata::channelpara >*
channels::mutable_channelvalue() {
  // @@protoc_insertion_point(field_mutable_list:structdata.channels.channelvalue)
  return &channelvalue_;
}
inline const ::google::protobuf::RepeatedPtrField< ::structdata::channelpara >&
channels::channelvalue() const {
  // @@protoc_insertion_point(field_list:structdata.channels.channelvalue)
  return channelvalue_;
}

// uint32 nCount = 2;
inline void channels::clear_ncount() {
  ncount_ = 0u;
}
inline ::google::protobuf::uint32 channels::ncount() const {
  // @@protoc_insertion_point(field_get:structdata.channels.nCount)
  return ncount_;
}
inline void channels::set_ncount(::google::protobuf::uint32 value) {
  
  ncount_ = value;
  // @@protoc_insertion_point(field_set:structdata.channels.nCount)
}

// -------------------------------------------------------------------

// data

// repeated .structdata.channels channel = 1;
inline int data::channel_size() const {
  return channel_.size();
}
inline void data::clear_channel() {
  channel_.Clear();
}
inline const ::structdata::channels& data::channel(int index) const {
  // @@protoc_insertion_point(field_get:structdata.data.channel)
  return channel_.Get(index);
}
inline ::structdata::channels* data::mutable_channel(int index) {
  // @@protoc_insertion_point(field_mutable:structdata.data.channel)
  return channel_.Mutable(index);
}
inline ::structdata::channels* data::add_channel() {
  // @@protoc_insertion_point(field_add:structdata.data.channel)
  return channel_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::structdata::channels >*
data::mutable_channel() {
  // @@protoc_insertion_point(field_mutable_list:structdata.data.channel)
  return &channel_;
}
inline const ::google::protobuf::RepeatedPtrField< ::structdata::channels >&
data::channel() const {
  // @@protoc_insertion_point(field_list:structdata.data.channel)
  return channel_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace structdata

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_structdata_2eproto__INCLUDED
