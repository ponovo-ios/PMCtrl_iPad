// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Harm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Harm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Harm {
class HarmAnalogDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HarmAnalog> {
} _HarmAnalog_default_instance_;
class DCParaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DCPara> {
} _DCPara_default_instance_;

namespace protobuf_Harm_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmAnalog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmAnalog, oacanlogpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmAnalog, oacdigitalpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmAnalog, ogradientpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmAnalog, odigitalgradientpara_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmAnalog, ioutput_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmAnalog, oanalogdc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmAnalog, odigitaldc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmAnalog, bisauto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmAnalog, iinput_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HarmAnalog, ilogic_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DCPara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DCPara, analogvolt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DCPara, analogcurrent_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(HarmAnalog)},
  { 14, -1, sizeof(DCPara)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_HarmAnalog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DCPara_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Harm.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _HarmAnalog_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _DCPara_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::OutPutCommon::protobuf_OutPutCommon_2eproto::InitDefaults();
  _HarmAnalog_default_instance_.DefaultConstruct();
  _DCPara_default_instance_.DefaultConstruct();
  _HarmAnalog_default_instance_.get_mutable()->ogradientpara_ = const_cast< ::OutPutCommon::GradientPara*>(
      ::OutPutCommon::GradientPara::internal_default_instance());
  _HarmAnalog_default_instance_.get_mutable()->odigitalgradientpara_ = const_cast< ::OutPutCommon::GradientPara*>(
      ::OutPutCommon::GradientPara::internal_default_instance());
  _HarmAnalog_default_instance_.get_mutable()->oanalogdc_ = const_cast< ::Harm::DCPara*>(
      ::Harm::DCPara::internal_default_instance());
  _HarmAnalog_default_instance_.get_mutable()->odigitaldc_ = const_cast< ::Harm::DCPara*>(
      ::Harm::DCPara::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\nHarm.proto\022\004Harm\032\022OutPutCommon.proto\"\344"
      "\002\n\nHarmAnalog\0220\n\014oacanlogpara\030\001 \003(\0132\032.Ou"
      "tPutCommon.acanalogpara\0222\n\016oacdigitalpar"
      "a\030\002 \003(\0132\032.OutPutCommon.acanalogpara\0221\n\ro"
      "GradientPara\030\003 \001(\0132\032.OutPutCommon.Gradie"
      "ntPara\0228\n\024oDigitalGradientPara\030\004 \001(\0132\032.O"
      "utPutCommon.GradientPara\022\017\n\007iOutPut\030\005 \001("
      "\r\022\037\n\toAnalogDC\030\006 \001(\0132\014.Harm.DCPara\022 \n\noD"
      "igitalDC\030\007 \001(\0132\014.Harm.DCPara\022\017\n\007bisAuto\030"
      "\010 \001(\010\022\016\n\006iInPut\030\t \001(\r\022\016\n\006iLogic\030\n \001(\r\"3\n"
      "\006DCPara\022\022\n\nanalogvolt\030\001 \003(\r\022\025\n\ranalogCur"
      "rent\030\002 \003(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 458);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Harm.proto", &protobuf_RegisterTypes);
  ::OutPutCommon::protobuf_OutPutCommon_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Harm_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HarmAnalog::kOacanlogparaFieldNumber;
const int HarmAnalog::kOacdigitalparaFieldNumber;
const int HarmAnalog::kOGradientParaFieldNumber;
const int HarmAnalog::kODigitalGradientParaFieldNumber;
const int HarmAnalog::kIOutPutFieldNumber;
const int HarmAnalog::kOAnalogDCFieldNumber;
const int HarmAnalog::kODigitalDCFieldNumber;
const int HarmAnalog::kBisAutoFieldNumber;
const int HarmAnalog::kIInPutFieldNumber;
const int HarmAnalog::kILogicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HarmAnalog::HarmAnalog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Harm_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Harm.HarmAnalog)
}
HarmAnalog::HarmAnalog(const HarmAnalog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      oacanlogpara_(from.oacanlogpara_),
      oacdigitalpara_(from.oacdigitalpara_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ogradientpara()) {
    ogradientpara_ = new ::OutPutCommon::GradientPara(*from.ogradientpara_);
  } else {
    ogradientpara_ = NULL;
  }
  if (from.has_odigitalgradientpara()) {
    odigitalgradientpara_ = new ::OutPutCommon::GradientPara(*from.odigitalgradientpara_);
  } else {
    odigitalgradientpara_ = NULL;
  }
  if (from.has_oanalogdc()) {
    oanalogdc_ = new ::Harm::DCPara(*from.oanalogdc_);
  } else {
    oanalogdc_ = NULL;
  }
  if (from.has_odigitaldc()) {
    odigitaldc_ = new ::Harm::DCPara(*from.odigitaldc_);
  } else {
    odigitaldc_ = NULL;
  }
  ::memcpy(&ioutput_, &from.ioutput_,
    reinterpret_cast<char*>(&ilogic_) -
    reinterpret_cast<char*>(&ioutput_) + sizeof(ilogic_));
  // @@protoc_insertion_point(copy_constructor:Harm.HarmAnalog)
}

void HarmAnalog::SharedCtor() {
  ::memset(&ogradientpara_, 0, reinterpret_cast<char*>(&ilogic_) -
    reinterpret_cast<char*>(&ogradientpara_) + sizeof(ilogic_));
  _cached_size_ = 0;
}

HarmAnalog::~HarmAnalog() {
  // @@protoc_insertion_point(destructor:Harm.HarmAnalog)
  SharedDtor();
}

void HarmAnalog::SharedDtor() {
  if (this != internal_default_instance()) {
    delete ogradientpara_;
  }
  if (this != internal_default_instance()) {
    delete odigitalgradientpara_;
  }
  if (this != internal_default_instance()) {
    delete oanalogdc_;
  }
  if (this != internal_default_instance()) {
    delete odigitaldc_;
  }
}

void HarmAnalog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HarmAnalog::descriptor() {
  protobuf_Harm_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Harm_2eproto::file_level_metadata[0].descriptor;
}

const HarmAnalog& HarmAnalog::default_instance() {
  protobuf_Harm_2eproto::InitDefaults();
  return *internal_default_instance();
}

HarmAnalog* HarmAnalog::New(::google::protobuf::Arena* arena) const {
  HarmAnalog* n = new HarmAnalog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HarmAnalog::Clear() {
// @@protoc_insertion_point(message_clear_start:Harm.HarmAnalog)
  oacanlogpara_.Clear();
  oacdigitalpara_.Clear();
  if (GetArenaNoVirtual() == NULL && ogradientpara_ != NULL) {
    delete ogradientpara_;
  }
  ogradientpara_ = NULL;
  if (GetArenaNoVirtual() == NULL && odigitalgradientpara_ != NULL) {
    delete odigitalgradientpara_;
  }
  odigitalgradientpara_ = NULL;
  if (GetArenaNoVirtual() == NULL && oanalogdc_ != NULL) {
    delete oanalogdc_;
  }
  oanalogdc_ = NULL;
  if (GetArenaNoVirtual() == NULL && odigitaldc_ != NULL) {
    delete odigitaldc_;
  }
  odigitaldc_ = NULL;
  ::memset(&ioutput_, 0, reinterpret_cast<char*>(&ilogic_) -
    reinterpret_cast<char*>(&ioutput_) + sizeof(ilogic_));
}

bool HarmAnalog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Harm.HarmAnalog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .OutPutCommon.acanalogpara oacanlogpara = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_oacanlogpara()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .OutPutCommon.acanalogpara oacdigitalpara = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_oacdigitalpara()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .OutPutCommon.GradientPara oGradientPara = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ogradientpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OutPutCommon.GradientPara oDigitalGradientPara = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_odigitalgradientpara()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iOutPut = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ioutput_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Harm.DCPara oAnalogDC = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_oanalogdc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Harm.DCPara oDigitalDC = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_odigitaldc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bisAuto = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bisauto_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iInPut = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iinput_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 iLogic = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ilogic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Harm.HarmAnalog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Harm.HarmAnalog)
  return false;
#undef DO_
}

void HarmAnalog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Harm.HarmAnalog)
  // repeated .OutPutCommon.acanalogpara oacanlogpara = 1;
  for (unsigned int i = 0, n = this->oacanlogpara_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->oacanlogpara(i), output);
  }

  // repeated .OutPutCommon.acanalogpara oacdigitalpara = 2;
  for (unsigned int i = 0, n = this->oacdigitalpara_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->oacdigitalpara(i), output);
  }

  // .OutPutCommon.GradientPara oGradientPara = 3;
  if (this->has_ogradientpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ogradientpara_, output);
  }

  // .OutPutCommon.GradientPara oDigitalGradientPara = 4;
  if (this->has_odigitalgradientpara()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->odigitalgradientpara_, output);
  }

  // uint32 iOutPut = 5;
  if (this->ioutput() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ioutput(), output);
  }

  // .Harm.DCPara oAnalogDC = 6;
  if (this->has_oanalogdc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->oanalogdc_, output);
  }

  // .Harm.DCPara oDigitalDC = 7;
  if (this->has_odigitaldc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->odigitaldc_, output);
  }

  // bool bisAuto = 8;
  if (this->bisauto() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->bisauto(), output);
  }

  // uint32 iInPut = 9;
  if (this->iinput() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->iinput(), output);
  }

  // uint32 iLogic = 10;
  if (this->ilogic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->ilogic(), output);
  }

  // @@protoc_insertion_point(serialize_end:Harm.HarmAnalog)
}

::google::protobuf::uint8* HarmAnalog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Harm.HarmAnalog)
  // repeated .OutPutCommon.acanalogpara oacanlogpara = 1;
  for (unsigned int i = 0, n = this->oacanlogpara_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->oacanlogpara(i), false, target);
  }

  // repeated .OutPutCommon.acanalogpara oacdigitalpara = 2;
  for (unsigned int i = 0, n = this->oacdigitalpara_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->oacdigitalpara(i), false, target);
  }

  // .OutPutCommon.GradientPara oGradientPara = 3;
  if (this->has_ogradientpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ogradientpara_, false, target);
  }

  // .OutPutCommon.GradientPara oDigitalGradientPara = 4;
  if (this->has_odigitalgradientpara()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->odigitalgradientpara_, false, target);
  }

  // uint32 iOutPut = 5;
  if (this->ioutput() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ioutput(), target);
  }

  // .Harm.DCPara oAnalogDC = 6;
  if (this->has_oanalogdc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->oanalogdc_, false, target);
  }

  // .Harm.DCPara oDigitalDC = 7;
  if (this->has_odigitaldc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->odigitaldc_, false, target);
  }

  // bool bisAuto = 8;
  if (this->bisauto() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->bisauto(), target);
  }

  // uint32 iInPut = 9;
  if (this->iinput() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->iinput(), target);
  }

  // uint32 iLogic = 10;
  if (this->ilogic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->ilogic(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Harm.HarmAnalog)
  return target;
}

size_t HarmAnalog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Harm.HarmAnalog)
  size_t total_size = 0;

  // repeated .OutPutCommon.acanalogpara oacanlogpara = 1;
  {
    unsigned int count = this->oacanlogpara_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oacanlogpara(i));
    }
  }

  // repeated .OutPutCommon.acanalogpara oacdigitalpara = 2;
  {
    unsigned int count = this->oacdigitalpara_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->oacdigitalpara(i));
    }
  }

  // .OutPutCommon.GradientPara oGradientPara = 3;
  if (this->has_ogradientpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ogradientpara_);
  }

  // .OutPutCommon.GradientPara oDigitalGradientPara = 4;
  if (this->has_odigitalgradientpara()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->odigitalgradientpara_);
  }

  // .Harm.DCPara oAnalogDC = 6;
  if (this->has_oanalogdc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->oanalogdc_);
  }

  // .Harm.DCPara oDigitalDC = 7;
  if (this->has_odigitaldc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->odigitaldc_);
  }

  // uint32 iOutPut = 5;
  if (this->ioutput() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ioutput());
  }

  // bool bisAuto = 8;
  if (this->bisauto() != 0) {
    total_size += 1 + 1;
  }

  // uint32 iInPut = 9;
  if (this->iinput() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iinput());
  }

  // uint32 iLogic = 10;
  if (this->ilogic() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ilogic());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HarmAnalog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Harm.HarmAnalog)
  GOOGLE_DCHECK_NE(&from, this);
  const HarmAnalog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HarmAnalog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Harm.HarmAnalog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Harm.HarmAnalog)
    MergeFrom(*source);
  }
}

void HarmAnalog::MergeFrom(const HarmAnalog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Harm.HarmAnalog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oacanlogpara_.MergeFrom(from.oacanlogpara_);
  oacdigitalpara_.MergeFrom(from.oacdigitalpara_);
  if (from.has_ogradientpara()) {
    mutable_ogradientpara()->::OutPutCommon::GradientPara::MergeFrom(from.ogradientpara());
  }
  if (from.has_odigitalgradientpara()) {
    mutable_odigitalgradientpara()->::OutPutCommon::GradientPara::MergeFrom(from.odigitalgradientpara());
  }
  if (from.has_oanalogdc()) {
    mutable_oanalogdc()->::Harm::DCPara::MergeFrom(from.oanalogdc());
  }
  if (from.has_odigitaldc()) {
    mutable_odigitaldc()->::Harm::DCPara::MergeFrom(from.odigitaldc());
  }
  if (from.ioutput() != 0) {
    set_ioutput(from.ioutput());
  }
  if (from.bisauto() != 0) {
    set_bisauto(from.bisauto());
  }
  if (from.iinput() != 0) {
    set_iinput(from.iinput());
  }
  if (from.ilogic() != 0) {
    set_ilogic(from.ilogic());
  }
}

void HarmAnalog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Harm.HarmAnalog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HarmAnalog::CopyFrom(const HarmAnalog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Harm.HarmAnalog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HarmAnalog::IsInitialized() const {
  return true;
}

void HarmAnalog::Swap(HarmAnalog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HarmAnalog::InternalSwap(HarmAnalog* other) {
  oacanlogpara_.UnsafeArenaSwap(&other->oacanlogpara_);
  oacdigitalpara_.UnsafeArenaSwap(&other->oacdigitalpara_);
  std::swap(ogradientpara_, other->ogradientpara_);
  std::swap(odigitalgradientpara_, other->odigitalgradientpara_);
  std::swap(oanalogdc_, other->oanalogdc_);
  std::swap(odigitaldc_, other->odigitaldc_);
  std::swap(ioutput_, other->ioutput_);
  std::swap(bisauto_, other->bisauto_);
  std::swap(iinput_, other->iinput_);
  std::swap(ilogic_, other->ilogic_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HarmAnalog::GetMetadata() const {
  protobuf_Harm_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Harm_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HarmAnalog

// repeated .OutPutCommon.acanalogpara oacanlogpara = 1;
int HarmAnalog::oacanlogpara_size() const {
  return oacanlogpara_.size();
}
void HarmAnalog::clear_oacanlogpara() {
  oacanlogpara_.Clear();
}
const ::OutPutCommon::acanalogpara& HarmAnalog::oacanlogpara(int index) const {
  // @@protoc_insertion_point(field_get:Harm.HarmAnalog.oacanlogpara)
  return oacanlogpara_.Get(index);
}
::OutPutCommon::acanalogpara* HarmAnalog::mutable_oacanlogpara(int index) {
  // @@protoc_insertion_point(field_mutable:Harm.HarmAnalog.oacanlogpara)
  return oacanlogpara_.Mutable(index);
}
::OutPutCommon::acanalogpara* HarmAnalog::add_oacanlogpara() {
  // @@protoc_insertion_point(field_add:Harm.HarmAnalog.oacanlogpara)
  return oacanlogpara_.Add();
}
::google::protobuf::RepeatedPtrField< ::OutPutCommon::acanalogpara >*
HarmAnalog::mutable_oacanlogpara() {
  // @@protoc_insertion_point(field_mutable_list:Harm.HarmAnalog.oacanlogpara)
  return &oacanlogpara_;
}
const ::google::protobuf::RepeatedPtrField< ::OutPutCommon::acanalogpara >&
HarmAnalog::oacanlogpara() const {
  // @@protoc_insertion_point(field_list:Harm.HarmAnalog.oacanlogpara)
  return oacanlogpara_;
}

// repeated .OutPutCommon.acanalogpara oacdigitalpara = 2;
int HarmAnalog::oacdigitalpara_size() const {
  return oacdigitalpara_.size();
}
void HarmAnalog::clear_oacdigitalpara() {
  oacdigitalpara_.Clear();
}
const ::OutPutCommon::acanalogpara& HarmAnalog::oacdigitalpara(int index) const {
  // @@protoc_insertion_point(field_get:Harm.HarmAnalog.oacdigitalpara)
  return oacdigitalpara_.Get(index);
}
::OutPutCommon::acanalogpara* HarmAnalog::mutable_oacdigitalpara(int index) {
  // @@protoc_insertion_point(field_mutable:Harm.HarmAnalog.oacdigitalpara)
  return oacdigitalpara_.Mutable(index);
}
::OutPutCommon::acanalogpara* HarmAnalog::add_oacdigitalpara() {
  // @@protoc_insertion_point(field_add:Harm.HarmAnalog.oacdigitalpara)
  return oacdigitalpara_.Add();
}
::google::protobuf::RepeatedPtrField< ::OutPutCommon::acanalogpara >*
HarmAnalog::mutable_oacdigitalpara() {
  // @@protoc_insertion_point(field_mutable_list:Harm.HarmAnalog.oacdigitalpara)
  return &oacdigitalpara_;
}
const ::google::protobuf::RepeatedPtrField< ::OutPutCommon::acanalogpara >&
HarmAnalog::oacdigitalpara() const {
  // @@protoc_insertion_point(field_list:Harm.HarmAnalog.oacdigitalpara)
  return oacdigitalpara_;
}

// .OutPutCommon.GradientPara oGradientPara = 3;
bool HarmAnalog::has_ogradientpara() const {
  return this != internal_default_instance() && ogradientpara_ != NULL;
}
void HarmAnalog::clear_ogradientpara() {
  if (GetArenaNoVirtual() == NULL && ogradientpara_ != NULL) delete ogradientpara_;
  ogradientpara_ = NULL;
}
const ::OutPutCommon::GradientPara& HarmAnalog::ogradientpara() const {
  // @@protoc_insertion_point(field_get:Harm.HarmAnalog.oGradientPara)
  return ogradientpara_ != NULL ? *ogradientpara_
                         : *::OutPutCommon::GradientPara::internal_default_instance();
}
::OutPutCommon::GradientPara* HarmAnalog::mutable_ogradientpara() {
  
  if (ogradientpara_ == NULL) {
    ogradientpara_ = new ::OutPutCommon::GradientPara;
  }
  // @@protoc_insertion_point(field_mutable:Harm.HarmAnalog.oGradientPara)
  return ogradientpara_;
}
::OutPutCommon::GradientPara* HarmAnalog::release_ogradientpara() {
  // @@protoc_insertion_point(field_release:Harm.HarmAnalog.oGradientPara)
  
  ::OutPutCommon::GradientPara* temp = ogradientpara_;
  ogradientpara_ = NULL;
  return temp;
}
void HarmAnalog::set_allocated_ogradientpara(::OutPutCommon::GradientPara* ogradientpara) {
  delete ogradientpara_;
  ogradientpara_ = ogradientpara;
  if (ogradientpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Harm.HarmAnalog.oGradientPara)
}

// .OutPutCommon.GradientPara oDigitalGradientPara = 4;
bool HarmAnalog::has_odigitalgradientpara() const {
  return this != internal_default_instance() && odigitalgradientpara_ != NULL;
}
void HarmAnalog::clear_odigitalgradientpara() {
  if (GetArenaNoVirtual() == NULL && odigitalgradientpara_ != NULL) delete odigitalgradientpara_;
  odigitalgradientpara_ = NULL;
}
const ::OutPutCommon::GradientPara& HarmAnalog::odigitalgradientpara() const {
  // @@protoc_insertion_point(field_get:Harm.HarmAnalog.oDigitalGradientPara)
  return odigitalgradientpara_ != NULL ? *odigitalgradientpara_
                         : *::OutPutCommon::GradientPara::internal_default_instance();
}
::OutPutCommon::GradientPara* HarmAnalog::mutable_odigitalgradientpara() {
  
  if (odigitalgradientpara_ == NULL) {
    odigitalgradientpara_ = new ::OutPutCommon::GradientPara;
  }
  // @@protoc_insertion_point(field_mutable:Harm.HarmAnalog.oDigitalGradientPara)
  return odigitalgradientpara_;
}
::OutPutCommon::GradientPara* HarmAnalog::release_odigitalgradientpara() {
  // @@protoc_insertion_point(field_release:Harm.HarmAnalog.oDigitalGradientPara)
  
  ::OutPutCommon::GradientPara* temp = odigitalgradientpara_;
  odigitalgradientpara_ = NULL;
  return temp;
}
void HarmAnalog::set_allocated_odigitalgradientpara(::OutPutCommon::GradientPara* odigitalgradientpara) {
  delete odigitalgradientpara_;
  odigitalgradientpara_ = odigitalgradientpara;
  if (odigitalgradientpara) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Harm.HarmAnalog.oDigitalGradientPara)
}

// uint32 iOutPut = 5;
void HarmAnalog::clear_ioutput() {
  ioutput_ = 0u;
}
::google::protobuf::uint32 HarmAnalog::ioutput() const {
  // @@protoc_insertion_point(field_get:Harm.HarmAnalog.iOutPut)
  return ioutput_;
}
void HarmAnalog::set_ioutput(::google::protobuf::uint32 value) {
  
  ioutput_ = value;
  // @@protoc_insertion_point(field_set:Harm.HarmAnalog.iOutPut)
}

// .Harm.DCPara oAnalogDC = 6;
bool HarmAnalog::has_oanalogdc() const {
  return this != internal_default_instance() && oanalogdc_ != NULL;
}
void HarmAnalog::clear_oanalogdc() {
  if (GetArenaNoVirtual() == NULL && oanalogdc_ != NULL) delete oanalogdc_;
  oanalogdc_ = NULL;
}
const ::Harm::DCPara& HarmAnalog::oanalogdc() const {
  // @@protoc_insertion_point(field_get:Harm.HarmAnalog.oAnalogDC)
  return oanalogdc_ != NULL ? *oanalogdc_
                         : *::Harm::DCPara::internal_default_instance();
}
::Harm::DCPara* HarmAnalog::mutable_oanalogdc() {
  
  if (oanalogdc_ == NULL) {
    oanalogdc_ = new ::Harm::DCPara;
  }
  // @@protoc_insertion_point(field_mutable:Harm.HarmAnalog.oAnalogDC)
  return oanalogdc_;
}
::Harm::DCPara* HarmAnalog::release_oanalogdc() {
  // @@protoc_insertion_point(field_release:Harm.HarmAnalog.oAnalogDC)
  
  ::Harm::DCPara* temp = oanalogdc_;
  oanalogdc_ = NULL;
  return temp;
}
void HarmAnalog::set_allocated_oanalogdc(::Harm::DCPara* oanalogdc) {
  delete oanalogdc_;
  oanalogdc_ = oanalogdc;
  if (oanalogdc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Harm.HarmAnalog.oAnalogDC)
}

// .Harm.DCPara oDigitalDC = 7;
bool HarmAnalog::has_odigitaldc() const {
  return this != internal_default_instance() && odigitaldc_ != NULL;
}
void HarmAnalog::clear_odigitaldc() {
  if (GetArenaNoVirtual() == NULL && odigitaldc_ != NULL) delete odigitaldc_;
  odigitaldc_ = NULL;
}
const ::Harm::DCPara& HarmAnalog::odigitaldc() const {
  // @@protoc_insertion_point(field_get:Harm.HarmAnalog.oDigitalDC)
  return odigitaldc_ != NULL ? *odigitaldc_
                         : *::Harm::DCPara::internal_default_instance();
}
::Harm::DCPara* HarmAnalog::mutable_odigitaldc() {
  
  if (odigitaldc_ == NULL) {
    odigitaldc_ = new ::Harm::DCPara;
  }
  // @@protoc_insertion_point(field_mutable:Harm.HarmAnalog.oDigitalDC)
  return odigitaldc_;
}
::Harm::DCPara* HarmAnalog::release_odigitaldc() {
  // @@protoc_insertion_point(field_release:Harm.HarmAnalog.oDigitalDC)
  
  ::Harm::DCPara* temp = odigitaldc_;
  odigitaldc_ = NULL;
  return temp;
}
void HarmAnalog::set_allocated_odigitaldc(::Harm::DCPara* odigitaldc) {
  delete odigitaldc_;
  odigitaldc_ = odigitaldc;
  if (odigitaldc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Harm.HarmAnalog.oDigitalDC)
}

// bool bisAuto = 8;
void HarmAnalog::clear_bisauto() {
  bisauto_ = false;
}
bool HarmAnalog::bisauto() const {
  // @@protoc_insertion_point(field_get:Harm.HarmAnalog.bisAuto)
  return bisauto_;
}
void HarmAnalog::set_bisauto(bool value) {
  
  bisauto_ = value;
  // @@protoc_insertion_point(field_set:Harm.HarmAnalog.bisAuto)
}

// uint32 iInPut = 9;
void HarmAnalog::clear_iinput() {
  iinput_ = 0u;
}
::google::protobuf::uint32 HarmAnalog::iinput() const {
  // @@protoc_insertion_point(field_get:Harm.HarmAnalog.iInPut)
  return iinput_;
}
void HarmAnalog::set_iinput(::google::protobuf::uint32 value) {
  
  iinput_ = value;
  // @@protoc_insertion_point(field_set:Harm.HarmAnalog.iInPut)
}

// uint32 iLogic = 10;
void HarmAnalog::clear_ilogic() {
  ilogic_ = 0u;
}
::google::protobuf::uint32 HarmAnalog::ilogic() const {
  // @@protoc_insertion_point(field_get:Harm.HarmAnalog.iLogic)
  return ilogic_;
}
void HarmAnalog::set_ilogic(::google::protobuf::uint32 value) {
  
  ilogic_ = value;
  // @@protoc_insertion_point(field_set:Harm.HarmAnalog.iLogic)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DCPara::kAnalogvoltFieldNumber;
const int DCPara::kAnalogCurrentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DCPara::DCPara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Harm_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Harm.DCPara)
}
DCPara::DCPara(const DCPara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      analogvolt_(from.analogvolt_),
      analogcurrent_(from.analogcurrent_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Harm.DCPara)
}

void DCPara::SharedCtor() {
  _cached_size_ = 0;
}

DCPara::~DCPara() {
  // @@protoc_insertion_point(destructor:Harm.DCPara)
  SharedDtor();
}

void DCPara::SharedDtor() {
}

void DCPara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DCPara::descriptor() {
  protobuf_Harm_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Harm_2eproto::file_level_metadata[1].descriptor;
}

const DCPara& DCPara::default_instance() {
  protobuf_Harm_2eproto::InitDefaults();
  return *internal_default_instance();
}

DCPara* DCPara::New(::google::protobuf::Arena* arena) const {
  DCPara* n = new DCPara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DCPara::Clear() {
// @@protoc_insertion_point(message_clear_start:Harm.DCPara)
  analogvolt_.Clear();
  analogcurrent_.Clear();
}

bool DCPara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Harm.DCPara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 analogvolt = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_analogvolt())));
        } else if (tag == 8u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_analogvolt())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 analogCurrent = 2;
      case 2: {
        if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_analogcurrent())));
        } else if (tag == 16u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_analogcurrent())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Harm.DCPara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Harm.DCPara)
  return false;
#undef DO_
}

void DCPara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Harm.DCPara)
  // repeated uint32 analogvolt = 1;
  if (this->analogvolt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_analogvolt_cached_byte_size_);
  }
  for (int i = 0; i < this->analogvolt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->analogvolt(i), output);
  }

  // repeated uint32 analogCurrent = 2;
  if (this->analogcurrent_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_analogcurrent_cached_byte_size_);
  }
  for (int i = 0; i < this->analogcurrent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->analogcurrent(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Harm.DCPara)
}

::google::protobuf::uint8* DCPara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Harm.DCPara)
  // repeated uint32 analogvolt = 1;
  if (this->analogvolt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _analogvolt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->analogvolt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->analogvolt(i), target);
  }

  // repeated uint32 analogCurrent = 2;
  if (this->analogcurrent_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _analogcurrent_cached_byte_size_, target);
  }
  for (int i = 0; i < this->analogcurrent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->analogcurrent(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Harm.DCPara)
  return target;
}

size_t DCPara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Harm.DCPara)
  size_t total_size = 0;

  // repeated uint32 analogvolt = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->analogvolt_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _analogvolt_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 analogCurrent = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->analogcurrent_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _analogcurrent_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DCPara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Harm.DCPara)
  GOOGLE_DCHECK_NE(&from, this);
  const DCPara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DCPara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Harm.DCPara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Harm.DCPara)
    MergeFrom(*source);
  }
}

void DCPara::MergeFrom(const DCPara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Harm.DCPara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  analogvolt_.MergeFrom(from.analogvolt_);
  analogcurrent_.MergeFrom(from.analogcurrent_);
}

void DCPara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Harm.DCPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DCPara::CopyFrom(const DCPara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Harm.DCPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DCPara::IsInitialized() const {
  return true;
}

void DCPara::Swap(DCPara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DCPara::InternalSwap(DCPara* other) {
  analogvolt_.UnsafeArenaSwap(&other->analogvolt_);
  analogcurrent_.UnsafeArenaSwap(&other->analogcurrent_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DCPara::GetMetadata() const {
  protobuf_Harm_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Harm_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DCPara

// repeated uint32 analogvolt = 1;
int DCPara::analogvolt_size() const {
  return analogvolt_.size();
}
void DCPara::clear_analogvolt() {
  analogvolt_.Clear();
}
::google::protobuf::uint32 DCPara::analogvolt(int index) const {
  // @@protoc_insertion_point(field_get:Harm.DCPara.analogvolt)
  return analogvolt_.Get(index);
}
void DCPara::set_analogvolt(int index, ::google::protobuf::uint32 value) {
  analogvolt_.Set(index, value);
  // @@protoc_insertion_point(field_set:Harm.DCPara.analogvolt)
}
void DCPara::add_analogvolt(::google::protobuf::uint32 value) {
  analogvolt_.Add(value);
  // @@protoc_insertion_point(field_add:Harm.DCPara.analogvolt)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DCPara::analogvolt() const {
  // @@protoc_insertion_point(field_list:Harm.DCPara.analogvolt)
  return analogvolt_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DCPara::mutable_analogvolt() {
  // @@protoc_insertion_point(field_mutable_list:Harm.DCPara.analogvolt)
  return &analogvolt_;
}

// repeated uint32 analogCurrent = 2;
int DCPara::analogcurrent_size() const {
  return analogcurrent_.size();
}
void DCPara::clear_analogcurrent() {
  analogcurrent_.Clear();
}
::google::protobuf::uint32 DCPara::analogcurrent(int index) const {
  // @@protoc_insertion_point(field_get:Harm.DCPara.analogCurrent)
  return analogcurrent_.Get(index);
}
void DCPara::set_analogcurrent(int index, ::google::protobuf::uint32 value) {
  analogcurrent_.Set(index, value);
  // @@protoc_insertion_point(field_set:Harm.DCPara.analogCurrent)
}
void DCPara::add_analogcurrent(::google::protobuf::uint32 value) {
  analogcurrent_.Add(value);
  // @@protoc_insertion_point(field_add:Harm.DCPara.analogCurrent)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DCPara::analogcurrent() const {
  // @@protoc_insertion_point(field_list:Harm.DCPara.analogCurrent)
  return analogcurrent_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DCPara::mutable_analogcurrent() {
  // @@protoc_insertion_point(field_mutable_list:Harm.DCPara.analogCurrent)
  return &analogcurrent_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Harm

// @@protoc_insertion_point(global_scope)
