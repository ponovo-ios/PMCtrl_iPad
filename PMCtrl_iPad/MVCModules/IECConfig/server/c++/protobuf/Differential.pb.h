// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Differential.proto

#ifndef PROTOBUF_Differential_2eproto__INCLUDED
#define PROTOBUF_Differential_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace Differential {
class BasicResultItem;
class BasicResultItemDefaultTypeInternal;
extern BasicResultItemDefaultTypeInternal _BasicResultItem_default_instance_;
class CommonPara;
class CommonParaDefaultTypeInternal;
extern CommonParaDefaultTypeInternal _CommonPara_default_instance_;
class HarmonicRatio;
class HarmonicRatioDefaultTypeInternal;
extern HarmonicRatioDefaultTypeInternal _HarmonicRatio_default_instance_;
class HarmonicRatio_Result;
class HarmonicRatio_ResultDefaultTypeInternal;
extern HarmonicRatio_ResultDefaultTypeInternal _HarmonicRatio_Result_default_instance_;
class Items;
class ItemsDefaultTypeInternal;
extern ItemsDefaultTypeInternal _Items_default_instance_;
class ProtectSetting;
class ProtectSettingDefaultTypeInternal;
extern ProtectSettingDefaultTypeInternal _ProtectSetting_default_instance_;
class SwitchPara;
class SwitchParaDefaultTypeInternal;
extern SwitchParaDefaultTypeInternal _SwitchPara_default_instance_;
class TestItem_ActionTime;
class TestItem_ActionTimeDefaultTypeInternal;
extern TestItem_ActionTimeDefaultTypeInternal _TestItem_ActionTime_default_instance_;
class TestItem_ActionTime_Result;
class TestItem_ActionTime_ResultDefaultTypeInternal;
extern TestItem_ActionTime_ResultDefaultTypeInternal _TestItem_ActionTime_Result_default_instance_;
class TestItem_QDCurrent;
class TestItem_QDCurrentDefaultTypeInternal;
extern TestItem_QDCurrentDefaultTypeInternal _TestItem_QDCurrent_default_instance_;
class TestItem_QDCurrent_Result;
class TestItem_QDCurrent_ResultDefaultTypeInternal;
extern TestItem_QDCurrent_ResultDefaultTypeInternal _TestItem_QDCurrent_Result_default_instance_;
class TestItem_ZDRatio;
class TestItem_ZDRatioDefaultTypeInternal;
extern TestItem_ZDRatioDefaultTypeInternal _TestItem_ZDRatio_default_instance_;
class TestItem_ZDRatio_Result;
class TestItem_ZDRatio_ResultDefaultTypeInternal;
extern TestItem_ZDRatio_ResultDefaultTypeInternal _TestItem_ZDRatio_Result_default_instance_;
class chanel;
class chanelDefaultTypeInternal;
extern chanelDefaultTypeInternal _chanel_default_instance_;
class testItem;
class testItemDefaultTypeInternal;
extern testItemDefaultTypeInternal _testItem_default_instance_;
class testItem_Result;
class testItem_ResultDefaultTypeInternal;
extern testItem_ResultDefaultTypeInternal _testItem_Result_default_instance_;
}  // namespace Differential

namespace Differential {

namespace protobuf_Differential_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Differential_2eproto

enum TestItem_type {
  QDCurrent = 0,
  ZDRatio = 1,
  SDCurrent = 2,
  HarmonicRation = 3,
  ActionTime = 4,
  Other = 5,
  TestItem_type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestItem_type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestItem_type_IsValid(int value);
const TestItem_type TestItem_type_MIN = QDCurrent;
const TestItem_type TestItem_type_MAX = Other;
const int TestItem_type_ARRAYSIZE = TestItem_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestItem_type_descriptor();
inline const ::std::string& TestItem_type_Name(TestItem_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestItem_type_descriptor(), value);
}
inline bool TestItem_type_Parse(
    const ::std::string& name, TestItem_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestItem_type>(
    TestItem_type_descriptor(), name, value);
}
enum TestPhasor_type {
  APhase = 0,
  BPhase = 1,
  CPhase = 2,
  ABCPhase = 3,
  TestPhasor_type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestPhasor_type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestPhasor_type_IsValid(int value);
const TestPhasor_type TestPhasor_type_MIN = APhase;
const TestPhasor_type TestPhasor_type_MAX = ABCPhase;
const int TestPhasor_type_ARRAYSIZE = TestPhasor_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestPhasor_type_descriptor();
inline const ::std::string& TestPhasor_type_Name(TestPhasor_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestPhasor_type_descriptor(), value);
}
inline bool TestPhasor_type_Parse(
    const ::std::string& name, TestPhasor_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestPhasor_type>(
    TestPhasor_type_descriptor(), name, value);
}
enum OutPutType {
  analog_type = 0,
  digital_type = 1,
  analog_digital_type = 2,
  OutPutType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OutPutType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OutPutType_IsValid(int value);
const OutPutType OutPutType_MIN = analog_type;
const OutPutType OutPutType_MAX = analog_digital_type;
const int OutPutType_ARRAYSIZE = OutPutType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OutPutType_descriptor();
inline const ::std::string& OutPutType_Name(OutPutType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OutPutType_descriptor(), value);
}
inline bool OutPutType_Parse(
    const ::std::string& name, OutPutType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OutPutType>(
    OutPutType_descriptor(), name, value);
}
enum Kcal_Type {
  AutoCaculate = 0,
  ManualCaculate = 1,
  Kcal_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Kcal_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Kcal_Type_IsValid(int value);
const Kcal_Type Kcal_Type_MIN = AutoCaculate;
const Kcal_Type Kcal_Type_MAX = ManualCaculate;
const int Kcal_Type_ARRAYSIZE = Kcal_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Kcal_Type_descriptor();
inline const ::std::string& Kcal_Type_Name(Kcal_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Kcal_Type_descriptor(), value);
}
inline bool Kcal_Type_Parse(
    const ::std::string& name, Kcal_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Kcal_Type>(
    Kcal_Type_descriptor(), name, value);
}
enum Connection_Type {
  StarType = 0,
  TriangleType = 1,
  Connection_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Connection_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Connection_Type_IsValid(int value);
const Connection_Type Connection_Type_MIN = StarType;
const Connection_Type Connection_Type_MAX = TriangleType;
const int Connection_Type_ARRAYSIZE = Connection_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Connection_Type_descriptor();
inline const ::std::string& Connection_Type_Name(Connection_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Connection_Type_descriptor(), value);
}
inline bool Connection_Type_Parse(
    const ::std::string& name, Connection_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Connection_Type>(
    Connection_Type_descriptor(), name, value);
}
enum Correct_Type {
  NONE_TYPE = 0,
  Correct_Trigangel_Type = 1,
  Correct_Start_Type = 2,
  Correct_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Correct_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Correct_Type_IsValid(int value);
const Correct_Type Correct_Type_MIN = NONE_TYPE;
const Correct_Type Correct_Type_MAX = Correct_Start_Type;
const int Correct_Type_ARRAYSIZE = Correct_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Correct_Type_descriptor();
inline const ::std::string& Correct_Type_Name(Correct_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Correct_Type_descriptor(), value);
}
inline bool Correct_Type_Parse(
    const ::std::string& name, Correct_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Correct_Type>(
    Correct_Type_descriptor(), name, value);
}
enum TestWind_Type {
  TestWind_HightToLow = 0,
  TestWind_HightToMin = 1,
  TestWind_MinToLow = 2,
  TestWind_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TestWind_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TestWind_Type_IsValid(int value);
const TestWind_Type TestWind_Type_MIN = TestWind_HightToLow;
const TestWind_Type TestWind_Type_MAX = TestWind_MinToLow;
const int TestWind_Type_ARRAYSIZE = TestWind_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* TestWind_Type_descriptor();
inline const ::std::string& TestWind_Type_Name(TestWind_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    TestWind_Type_descriptor(), value);
}
inline bool TestWind_Type_Parse(
    const ::std::string& name, TestWind_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestWind_Type>(
    TestWind_Type_descriptor(), name, value);
}
enum Search_Type {
  Search_Type_Search_Type = 0,
  Search_Type_Single = 1,
  Search_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Search_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Search_Type_IsValid(int value);
const Search_Type Search_Type_MIN = Search_Type_Search_Type;
const Search_Type Search_Type_MAX = Search_Type_Single;
const int Search_Type_ARRAYSIZE = Search_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Search_Type_descriptor();
inline const ::std::string& Search_Type_Name(Search_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Search_Type_descriptor(), value);
}
inline bool Search_Type_Parse(
    const ::std::string& name, Search_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Search_Type>(
    Search_Type_descriptor(), name, value);
}
enum CTPolar_Type {
  TwoSide_Type = 0,
  OneSide_type = 1,
  CTPolar_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CTPolar_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CTPolar_Type_IsValid(int value);
const CTPolar_Type CTPolar_Type_MIN = TwoSide_Type;
const CTPolar_Type CTPolar_Type_MAX = OneSide_type;
const int CTPolar_Type_ARRAYSIZE = CTPolar_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* CTPolar_Type_descriptor();
inline const ::std::string& CTPolar_Type_Name(CTPolar_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    CTPolar_Type_descriptor(), value);
}
inline bool CTPolar_Type_Parse(
    const ::std::string& name, CTPolar_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CTPolar_Type>(
    CTPolar_Type_descriptor(), name, value);
}
enum SettingType {
  RealValue_type = 0,
  MarkValue_Type = 1,
  SettingType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SettingType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SettingType_IsValid(int value);
const SettingType SettingType_MIN = RealValue_type;
const SettingType SettingType_MAX = MarkValue_Type;
const int SettingType_ARRAYSIZE = SettingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SettingType_descriptor();
inline const ::std::string& SettingType_Name(SettingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SettingType_descriptor(), value);
}
inline bool SettingType_Parse(
    const ::std::string& name, SettingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SettingType>(
    SettingType_descriptor(), name, value);
}
enum BaseCurrentSelect {
  HighSideSecondaryCurrent = 0,
  SettingValue = 1,
  AllSideCurrent = 2,
  BaseCurrentSelect_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BaseCurrentSelect_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BaseCurrentSelect_IsValid(int value);
const BaseCurrentSelect BaseCurrentSelect_MIN = HighSideSecondaryCurrent;
const BaseCurrentSelect BaseCurrentSelect_MAX = AllSideCurrent;
const int BaseCurrentSelect_ARRAYSIZE = BaseCurrentSelect_MAX + 1;

const ::google::protobuf::EnumDescriptor* BaseCurrentSelect_descriptor();
inline const ::std::string& BaseCurrentSelect_Name(BaseCurrentSelect value) {
  return ::google::protobuf::internal::NameOfEnum(
    BaseCurrentSelect_descriptor(), value);
}
inline bool BaseCurrentSelect_Parse(
    const ::std::string& name, BaseCurrentSelect* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BaseCurrentSelect>(
    BaseCurrentSelect_descriptor(), name, value);
}
// ===================================================================

class chanel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.chanel) */ {
 public:
  chanel();
  virtual ~chanel();

  chanel(const chanel& from);

  inline chanel& operator=(const chanel& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chanel& default_instance();

  static inline const chanel* internal_default_instance() {
    return reinterpret_cast<const chanel*>(
               &_chanel_default_instance_);
  }

  void Swap(chanel* other);

  // implements Message ----------------------------------------------

  inline chanel* New() const PROTOBUF_FINAL { return New(NULL); }

  chanel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const chanel& from);
  void MergeFrom(const chanel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(chanel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float famptitude = 1;
  void clear_famptitude();
  static const int kFamptitudeFieldNumber = 1;
  float famptitude() const;
  void set_famptitude(float value);

  // float fphase = 2;
  void clear_fphase();
  static const int kFphaseFieldNumber = 2;
  float fphase() const;
  void set_fphase(float value);

  // @@protoc_insertion_point(class_scope:Differential.chanel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float famptitude_;
  float fphase_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BasicResultItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.BasicResultItem) */ {
 public:
  BasicResultItem();
  virtual ~BasicResultItem();

  BasicResultItem(const BasicResultItem& from);

  inline BasicResultItem& operator=(const BasicResultItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicResultItem& default_instance();

  static inline const BasicResultItem* internal_default_instance() {
    return reinterpret_cast<const BasicResultItem*>(
               &_BasicResultItem_default_instance_);
  }

  void Swap(BasicResultItem* other);

  // implements Message ----------------------------------------------

  inline BasicResultItem* New() const PROTOBUF_FINAL { return New(NULL); }

  BasicResultItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BasicResultItem& from);
  void MergeFrom(const BasicResultItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BasicResultItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.chanel Ia = 1;
  bool has_ia() const;
  void clear_ia();
  static const int kIaFieldNumber = 1;
  const ::Differential::chanel& ia() const;
  ::Differential::chanel* mutable_ia();
  ::Differential::chanel* release_ia();
  void set_allocated_ia(::Differential::chanel* ia);

  // .Differential.chanel Ib = 2;
  bool has_ib() const;
  void clear_ib();
  static const int kIbFieldNumber = 2;
  const ::Differential::chanel& ib() const;
  ::Differential::chanel* mutable_ib();
  ::Differential::chanel* release_ib();
  void set_allocated_ib(::Differential::chanel* ib);

  // .Differential.chanel Ic = 3;
  bool has_ic() const;
  void clear_ic();
  static const int kIcFieldNumber = 3;
  const ::Differential::chanel& ic() const;
  ::Differential::chanel* mutable_ic();
  ::Differential::chanel* release_ic();
  void set_allocated_ic(::Differential::chanel* ic);

  // .Differential.chanel Iap = 4;
  bool has_iap() const;
  void clear_iap();
  static const int kIapFieldNumber = 4;
  const ::Differential::chanel& iap() const;
  ::Differential::chanel* mutable_iap();
  ::Differential::chanel* release_iap();
  void set_allocated_iap(::Differential::chanel* iap);

  // .Differential.chanel Ibp = 5;
  bool has_ibp() const;
  void clear_ibp();
  static const int kIbpFieldNumber = 5;
  const ::Differential::chanel& ibp() const;
  ::Differential::chanel* mutable_ibp();
  ::Differential::chanel* release_ibp();
  void set_allocated_ibp(::Differential::chanel* ibp);

  // .Differential.chanel Icp = 6;
  bool has_icp() const;
  void clear_icp();
  static const int kIcpFieldNumber = 6;
  const ::Differential::chanel& icp() const;
  ::Differential::chanel* mutable_icp();
  ::Differential::chanel* release_icp();
  void set_allocated_icp(::Differential::chanel* icp);

  // @@protoc_insertion_point(class_scope:Differential.BasicResultItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Differential::chanel* ia_;
  ::Differential::chanel* ib_;
  ::Differential::chanel* ic_;
  ::Differential::chanel* iap_;
  ::Differential::chanel* ibp_;
  ::Differential::chanel* icp_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestItem_QDCurrent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.TestItem_QDCurrent) */ {
 public:
  TestItem_QDCurrent();
  virtual ~TestItem_QDCurrent();

  TestItem_QDCurrent(const TestItem_QDCurrent& from);

  inline TestItem_QDCurrent& operator=(const TestItem_QDCurrent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestItem_QDCurrent& default_instance();

  static inline const TestItem_QDCurrent* internal_default_instance() {
    return reinterpret_cast<const TestItem_QDCurrent*>(
               &_TestItem_QDCurrent_default_instance_);
  }

  void Swap(TestItem_QDCurrent* other);

  // implements Message ----------------------------------------------

  inline TestItem_QDCurrent* New() const PROTOBUF_FINAL { return New(NULL); }

  TestItem_QDCurrent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestItem_QDCurrent& from);
  void MergeFrom(const TestItem_QDCurrent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestItem_QDCurrent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.TestItem_type itemtype = 1;
  void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  ::Differential::TestItem_type itemtype() const;
  void set_itemtype(::Differential::TestItem_type value);

  // uint32 iIndex = 2;
  void clear_iindex();
  static const int kIIndexFieldNumber = 2;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // float Ir = 3;
  void clear_ir();
  static const int kIrFieldNumber = 3;
  float ir() const;
  void set_ir(float value);

  // float fUp = 4;
  void clear_fup();
  static const int kFUpFieldNumber = 4;
  float fup() const;
  void set_fup(float value);

  // float fDown = 5;
  void clear_fdown();
  static const int kFDownFieldNumber = 5;
  float fdown() const;
  void set_fdown(float value);

  // @@protoc_insertion_point(class_scope:Differential.TestItem_QDCurrent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int itemtype_;
  ::google::protobuf::uint32 iindex_;
  float ir_;
  float fup_;
  float fdown_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestItem_QDCurrent_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.TestItem_QDCurrent_Result) */ {
 public:
  TestItem_QDCurrent_Result();
  virtual ~TestItem_QDCurrent_Result();

  TestItem_QDCurrent_Result(const TestItem_QDCurrent_Result& from);

  inline TestItem_QDCurrent_Result& operator=(const TestItem_QDCurrent_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestItem_QDCurrent_Result& default_instance();

  static inline const TestItem_QDCurrent_Result* internal_default_instance() {
    return reinterpret_cast<const TestItem_QDCurrent_Result*>(
               &_TestItem_QDCurrent_Result_default_instance_);
  }

  void Swap(TestItem_QDCurrent_Result* other);

  // implements Message ----------------------------------------------

  inline TestItem_QDCurrent_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  TestItem_QDCurrent_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestItem_QDCurrent_Result& from);
  void MergeFrom(const TestItem_QDCurrent_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestItem_QDCurrent_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.BasicResultItem basic = 3;
  bool has_basic() const;
  void clear_basic();
  static const int kBasicFieldNumber = 3;
  const ::Differential::BasicResultItem& basic() const;
  ::Differential::BasicResultItem* mutable_basic();
  ::Differential::BasicResultItem* release_basic();
  void set_allocated_basic(::Differential::BasicResultItem* basic);

  // .Differential.TestItem_type itemtype = 1;
  void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  ::Differential::TestItem_type itemtype() const;
  void set_itemtype(::Differential::TestItem_type value);

  // uint32 iIndex = 2;
  void clear_iindex();
  static const int kIIndexFieldNumber = 2;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // float Id = 4;
  void clear_id();
  static const int kIdFieldNumber = 4;
  float id() const;
  void set_id(float value);

  // bool bEnd = 5;
  void clear_bend();
  static const int kBEndFieldNumber = 5;
  bool bend() const;
  void set_bend(bool value);

  // uint32 nibinstate = 7;
  void clear_nibinstate();
  static const int kNibinstateFieldNumber = 7;
  ::google::protobuf::uint32 nibinstate() const;
  void set_nibinstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Differential.TestItem_QDCurrent_Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Differential::BasicResultItem* basic_;
  int itemtype_;
  ::google::protobuf::uint32 iindex_;
  float id_;
  bool bend_;
  ::google::protobuf::uint32 nibinstate_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestItem_ZDRatio : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.TestItem_ZDRatio) */ {
 public:
  TestItem_ZDRatio();
  virtual ~TestItem_ZDRatio();

  TestItem_ZDRatio(const TestItem_ZDRatio& from);

  inline TestItem_ZDRatio& operator=(const TestItem_ZDRatio& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestItem_ZDRatio& default_instance();

  static inline const TestItem_ZDRatio* internal_default_instance() {
    return reinterpret_cast<const TestItem_ZDRatio*>(
               &_TestItem_ZDRatio_default_instance_);
  }

  void Swap(TestItem_ZDRatio* other);

  // implements Message ----------------------------------------------

  inline TestItem_ZDRatio* New() const PROTOBUF_FINAL { return New(NULL); }

  TestItem_ZDRatio* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestItem_ZDRatio& from);
  void MergeFrom(const TestItem_ZDRatio& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestItem_ZDRatio* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.TestItem_type itemtype = 1;
  void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  ::Differential::TestItem_type itemtype() const;
  void set_itemtype(::Differential::TestItem_type value);

  // uint32 iTypeIndex = 2;
  void clear_itypeindex();
  static const int kITypeIndexFieldNumber = 2;
  ::google::protobuf::uint32 itypeindex() const;
  void set_itypeindex(::google::protobuf::uint32 value);

  // uint32 iIndex = 3;
  void clear_iindex();
  static const int kIIndexFieldNumber = 3;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // float Ir = 4;
  void clear_ir();
  static const int kIrFieldNumber = 4;
  float ir() const;
  void set_ir(float value);

  // float fUp = 5;
  void clear_fup();
  static const int kFUpFieldNumber = 5;
  float fup() const;
  void set_fup(float value);

  // float fDown = 6;
  void clear_fdown();
  static const int kFDownFieldNumber = 6;
  float fdown() const;
  void set_fdown(float value);

  // @@protoc_insertion_point(class_scope:Differential.TestItem_ZDRatio)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int itemtype_;
  ::google::protobuf::uint32 itypeindex_;
  ::google::protobuf::uint32 iindex_;
  float ir_;
  float fup_;
  float fdown_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestItem_ZDRatio_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.TestItem_ZDRatio_Result) */ {
 public:
  TestItem_ZDRatio_Result();
  virtual ~TestItem_ZDRatio_Result();

  TestItem_ZDRatio_Result(const TestItem_ZDRatio_Result& from);

  inline TestItem_ZDRatio_Result& operator=(const TestItem_ZDRatio_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestItem_ZDRatio_Result& default_instance();

  static inline const TestItem_ZDRatio_Result* internal_default_instance() {
    return reinterpret_cast<const TestItem_ZDRatio_Result*>(
               &_TestItem_ZDRatio_Result_default_instance_);
  }

  void Swap(TestItem_ZDRatio_Result* other);

  // implements Message ----------------------------------------------

  inline TestItem_ZDRatio_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  TestItem_ZDRatio_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestItem_ZDRatio_Result& from);
  void MergeFrom(const TestItem_ZDRatio_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestItem_ZDRatio_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.BasicResultItem basic = 4;
  bool has_basic() const;
  void clear_basic();
  static const int kBasicFieldNumber = 4;
  const ::Differential::BasicResultItem& basic() const;
  ::Differential::BasicResultItem* mutable_basic();
  ::Differential::BasicResultItem* release_basic();
  void set_allocated_basic(::Differential::BasicResultItem* basic);

  // .Differential.TestItem_type itemtype = 1;
  void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  ::Differential::TestItem_type itemtype() const;
  void set_itemtype(::Differential::TestItem_type value);

  // uint32 iTypeIndex = 2;
  void clear_itypeindex();
  static const int kITypeIndexFieldNumber = 2;
  ::google::protobuf::uint32 itypeindex() const;
  void set_itypeindex(::google::protobuf::uint32 value);

  // uint32 iIndex = 3;
  void clear_iindex();
  static const int kIIndexFieldNumber = 3;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // float Id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  float id() const;
  void set_id(float value);

  // bool bEnd = 6;
  void clear_bend();
  static const int kBEndFieldNumber = 6;
  bool bend() const;
  void set_bend(bool value);

  // uint32 nibinstate = 7;
  void clear_nibinstate();
  static const int kNibinstateFieldNumber = 7;
  ::google::protobuf::uint32 nibinstate() const;
  void set_nibinstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Differential.TestItem_ZDRatio_Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Differential::BasicResultItem* basic_;
  int itemtype_;
  ::google::protobuf::uint32 itypeindex_;
  ::google::protobuf::uint32 iindex_;
  float id_;
  bool bend_;
  ::google::protobuf::uint32 nibinstate_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HarmonicRatio : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.HarmonicRatio) */ {
 public:
  HarmonicRatio();
  virtual ~HarmonicRatio();

  HarmonicRatio(const HarmonicRatio& from);

  inline HarmonicRatio& operator=(const HarmonicRatio& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HarmonicRatio& default_instance();

  static inline const HarmonicRatio* internal_default_instance() {
    return reinterpret_cast<const HarmonicRatio*>(
               &_HarmonicRatio_default_instance_);
  }

  void Swap(HarmonicRatio* other);

  // implements Message ----------------------------------------------

  inline HarmonicRatio* New() const PROTOBUF_FINAL { return New(NULL); }

  HarmonicRatio* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HarmonicRatio& from);
  void MergeFrom(const HarmonicRatio& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HarmonicRatio* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.TestItem_type itemtype = 1;
  void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  ::Differential::TestItem_type itemtype() const;
  void set_itemtype(::Differential::TestItem_type value);

  // uint32 iIndex = 2;
  void clear_iindex();
  static const int kIIndexFieldNumber = 2;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // float Id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  float id() const;
  void set_id(float value);

  // uint32 nHam = 4;
  void clear_nham();
  static const int kNHamFieldNumber = 4;
  ::google::protobuf::uint32 nham() const;
  void set_nham(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Differential.HarmonicRatio)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int itemtype_;
  ::google::protobuf::uint32 iindex_;
  float id_;
  ::google::protobuf::uint32 nham_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HarmonicRatio_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.HarmonicRatio_Result) */ {
 public:
  HarmonicRatio_Result();
  virtual ~HarmonicRatio_Result();

  HarmonicRatio_Result(const HarmonicRatio_Result& from);

  inline HarmonicRatio_Result& operator=(const HarmonicRatio_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HarmonicRatio_Result& default_instance();

  static inline const HarmonicRatio_Result* internal_default_instance() {
    return reinterpret_cast<const HarmonicRatio_Result*>(
               &_HarmonicRatio_Result_default_instance_);
  }

  void Swap(HarmonicRatio_Result* other);

  // implements Message ----------------------------------------------

  inline HarmonicRatio_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  HarmonicRatio_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HarmonicRatio_Result& from);
  void MergeFrom(const HarmonicRatio_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HarmonicRatio_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.BasicResultItem basic = 3;
  bool has_basic() const;
  void clear_basic();
  static const int kBasicFieldNumber = 3;
  const ::Differential::BasicResultItem& basic() const;
  ::Differential::BasicResultItem* mutable_basic();
  ::Differential::BasicResultItem* release_basic();
  void set_allocated_basic(::Differential::BasicResultItem* basic);

  // .Differential.TestItem_type itemtype = 1;
  void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  ::Differential::TestItem_type itemtype() const;
  void set_itemtype(::Differential::TestItem_type value);

  // uint32 iIndex = 2;
  void clear_iindex();
  static const int kIIndexFieldNumber = 2;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // float Ir = 4;
  void clear_ir();
  static const int kIrFieldNumber = 4;
  float ir() const;
  void set_ir(float value);

  // float K = 5;
  void clear_k();
  static const int kKFieldNumber = 5;
  float k() const;
  void set_k(float value);

  // bool bEnd = 6;
  void clear_bend();
  static const int kBEndFieldNumber = 6;
  bool bend() const;
  void set_bend(bool value);

  // uint32 nibinstate = 7;
  void clear_nibinstate();
  static const int kNibinstateFieldNumber = 7;
  ::google::protobuf::uint32 nibinstate() const;
  void set_nibinstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Differential.HarmonicRatio_Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Differential::BasicResultItem* basic_;
  int itemtype_;
  ::google::protobuf::uint32 iindex_;
  float ir_;
  float k_;
  bool bend_;
  ::google::protobuf::uint32 nibinstate_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestItem_ActionTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.TestItem_ActionTime) */ {
 public:
  TestItem_ActionTime();
  virtual ~TestItem_ActionTime();

  TestItem_ActionTime(const TestItem_ActionTime& from);

  inline TestItem_ActionTime& operator=(const TestItem_ActionTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestItem_ActionTime& default_instance();

  static inline const TestItem_ActionTime* internal_default_instance() {
    return reinterpret_cast<const TestItem_ActionTime*>(
               &_TestItem_ActionTime_default_instance_);
  }

  void Swap(TestItem_ActionTime* other);

  // implements Message ----------------------------------------------

  inline TestItem_ActionTime* New() const PROTOBUF_FINAL { return New(NULL); }

  TestItem_ActionTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestItem_ActionTime& from);
  void MergeFrom(const TestItem_ActionTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestItem_ActionTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.TestItem_type itemtype = 1;
  void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  ::Differential::TestItem_type itemtype() const;
  void set_itemtype(::Differential::TestItem_type value);

  // uint32 iIndex = 2;
  void clear_iindex();
  static const int kIIndexFieldNumber = 2;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // float Id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  float id() const;
  void set_id(float value);

  // float Ir = 4;
  void clear_ir();
  static const int kIrFieldNumber = 4;
  float ir() const;
  void set_ir(float value);

  // @@protoc_insertion_point(class_scope:Differential.TestItem_ActionTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int itemtype_;
  ::google::protobuf::uint32 iindex_;
  float id_;
  float ir_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestItem_ActionTime_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.TestItem_ActionTime_Result) */ {
 public:
  TestItem_ActionTime_Result();
  virtual ~TestItem_ActionTime_Result();

  TestItem_ActionTime_Result(const TestItem_ActionTime_Result& from);

  inline TestItem_ActionTime_Result& operator=(const TestItem_ActionTime_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestItem_ActionTime_Result& default_instance();

  static inline const TestItem_ActionTime_Result* internal_default_instance() {
    return reinterpret_cast<const TestItem_ActionTime_Result*>(
               &_TestItem_ActionTime_Result_default_instance_);
  }

  void Swap(TestItem_ActionTime_Result* other);

  // implements Message ----------------------------------------------

  inline TestItem_ActionTime_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  TestItem_ActionTime_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestItem_ActionTime_Result& from);
  void MergeFrom(const TestItem_ActionTime_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestItem_ActionTime_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.BasicResultItem basic = 3;
  bool has_basic() const;
  void clear_basic();
  static const int kBasicFieldNumber = 3;
  const ::Differential::BasicResultItem& basic() const;
  ::Differential::BasicResultItem* mutable_basic();
  ::Differential::BasicResultItem* release_basic();
  void set_allocated_basic(::Differential::BasicResultItem* basic);

  // .Differential.TestItem_type itemtype = 1;
  void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  ::Differential::TestItem_type itemtype() const;
  void set_itemtype(::Differential::TestItem_type value);

  // uint32 iIndex = 2;
  void clear_iindex();
  static const int kIIndexFieldNumber = 2;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // float fId = 4;
  void clear_fid();
  static const int kFIdFieldNumber = 4;
  float fid() const;
  void set_fid(float value);

  // float ftime = 5;
  void clear_ftime();
  static const int kFtimeFieldNumber = 5;
  float ftime() const;
  void set_ftime(float value);

  // bool bEnd = 6;
  void clear_bend();
  static const int kBEndFieldNumber = 6;
  bool bend() const;
  void set_bend(bool value);

  // uint32 nibinstate = 7;
  void clear_nibinstate();
  static const int kNibinstateFieldNumber = 7;
  ::google::protobuf::uint32 nibinstate() const;
  void set_nibinstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Differential.TestItem_ActionTime_Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Differential::BasicResultItem* basic_;
  int itemtype_;
  ::google::protobuf::uint32 iindex_;
  float fid_;
  float ftime_;
  bool bend_;
  ::google::protobuf::uint32 nibinstate_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class testItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.testItem) */ {
 public:
  testItem();
  virtual ~testItem();

  testItem(const testItem& from);

  inline testItem& operator=(const testItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const testItem& default_instance();

  static inline const testItem* internal_default_instance() {
    return reinterpret_cast<const testItem*>(
               &_testItem_default_instance_);
  }

  void Swap(testItem* other);

  // implements Message ----------------------------------------------

  inline testItem* New() const PROTOBUF_FINAL { return New(NULL); }

  testItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const testItem& from);
  void MergeFrom(const testItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(testItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.TestItem_QDCurrent oQdcurrent = 2;
  bool has_oqdcurrent() const;
  void clear_oqdcurrent();
  static const int kOQdcurrentFieldNumber = 2;
  const ::Differential::TestItem_QDCurrent& oqdcurrent() const;
  ::Differential::TestItem_QDCurrent* mutable_oqdcurrent();
  ::Differential::TestItem_QDCurrent* release_oqdcurrent();
  void set_allocated_oqdcurrent(::Differential::TestItem_QDCurrent* oqdcurrent);

  // .Differential.TestItem_ActionTime oActionTime = 3;
  bool has_oactiontime() const;
  void clear_oactiontime();
  static const int kOActionTimeFieldNumber = 3;
  const ::Differential::TestItem_ActionTime& oactiontime() const;
  ::Differential::TestItem_ActionTime* mutable_oactiontime();
  ::Differential::TestItem_ActionTime* release_oactiontime();
  void set_allocated_oactiontime(::Differential::TestItem_ActionTime* oactiontime);

  // .Differential.TestItem_ZDRatio oZDRatio = 4;
  bool has_ozdratio() const;
  void clear_ozdratio();
  static const int kOZDRatioFieldNumber = 4;
  const ::Differential::TestItem_ZDRatio& ozdratio() const;
  ::Differential::TestItem_ZDRatio* mutable_ozdratio();
  ::Differential::TestItem_ZDRatio* release_ozdratio();
  void set_allocated_ozdratio(::Differential::TestItem_ZDRatio* ozdratio);

  // .Differential.HarmonicRatio oHarmnonicRatio = 5;
  bool has_oharmnonicratio() const;
  void clear_oharmnonicratio();
  static const int kOHarmnonicRatioFieldNumber = 5;
  const ::Differential::HarmonicRatio& oharmnonicratio() const;
  ::Differential::HarmonicRatio* mutable_oharmnonicratio();
  ::Differential::HarmonicRatio* release_oharmnonicratio();
  void set_allocated_oharmnonicratio(::Differential::HarmonicRatio* oharmnonicratio);

  // .Differential.TestItem_type itemtype = 1;
  void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  ::Differential::TestItem_type itemtype() const;
  void set_itemtype(::Differential::TestItem_type value);

  // @@protoc_insertion_point(class_scope:Differential.testItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Differential::TestItem_QDCurrent* oqdcurrent_;
  ::Differential::TestItem_ActionTime* oactiontime_;
  ::Differential::TestItem_ZDRatio* ozdratio_;
  ::Differential::HarmonicRatio* oharmnonicratio_;
  int itemtype_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class testItem_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.testItem_Result) */ {
 public:
  testItem_Result();
  virtual ~testItem_Result();

  testItem_Result(const testItem_Result& from);

  inline testItem_Result& operator=(const testItem_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const testItem_Result& default_instance();

  static inline const testItem_Result* internal_default_instance() {
    return reinterpret_cast<const testItem_Result*>(
               &_testItem_Result_default_instance_);
  }

  void Swap(testItem_Result* other);

  // implements Message ----------------------------------------------

  inline testItem_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  testItem_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const testItem_Result& from);
  void MergeFrom(const testItem_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(testItem_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.TestItem_QDCurrent_Result oQdRes = 2;
  bool has_oqdres() const;
  void clear_oqdres();
  static const int kOQdResFieldNumber = 2;
  const ::Differential::TestItem_QDCurrent_Result& oqdres() const;
  ::Differential::TestItem_QDCurrent_Result* mutable_oqdres();
  ::Differential::TestItem_QDCurrent_Result* release_oqdres();
  void set_allocated_oqdres(::Differential::TestItem_QDCurrent_Result* oqdres);

  // .Differential.TestItem_ZDRatio_Result oZdRes = 3;
  bool has_ozdres() const;
  void clear_ozdres();
  static const int kOZdResFieldNumber = 3;
  const ::Differential::TestItem_ZDRatio_Result& ozdres() const;
  ::Differential::TestItem_ZDRatio_Result* mutable_ozdres();
  ::Differential::TestItem_ZDRatio_Result* release_ozdres();
  void set_allocated_ozdres(::Differential::TestItem_ZDRatio_Result* ozdres);

  // .Differential.HarmonicRatio_Result oHarmRes = 4;
  bool has_oharmres() const;
  void clear_oharmres();
  static const int kOHarmResFieldNumber = 4;
  const ::Differential::HarmonicRatio_Result& oharmres() const;
  ::Differential::HarmonicRatio_Result* mutable_oharmres();
  ::Differential::HarmonicRatio_Result* release_oharmres();
  void set_allocated_oharmres(::Differential::HarmonicRatio_Result* oharmres);

  // .Differential.TestItem_ActionTime_Result oActionRes = 5;
  bool has_oactionres() const;
  void clear_oactionres();
  static const int kOActionResFieldNumber = 5;
  const ::Differential::TestItem_ActionTime_Result& oactionres() const;
  ::Differential::TestItem_ActionTime_Result* mutable_oactionres();
  ::Differential::TestItem_ActionTime_Result* release_oactionres();
  void set_allocated_oactionres(::Differential::TestItem_ActionTime_Result* oactionres);

  // .Differential.TestItem_type itemtype = 1;
  void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  ::Differential::TestItem_type itemtype() const;
  void set_itemtype(::Differential::TestItem_type value);

  // @@protoc_insertion_point(class_scope:Differential.testItem_Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Differential::TestItem_QDCurrent_Result* oqdres_;
  ::Differential::TestItem_ZDRatio_Result* ozdres_;
  ::Differential::HarmonicRatio_Result* oharmres_;
  ::Differential::TestItem_ActionTime_Result* oactionres_;
  int itemtype_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Items : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.Items) */ {
 public:
  Items();
  virtual ~Items();

  Items(const Items& from);

  inline Items& operator=(const Items& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Items& default_instance();

  static inline const Items* internal_default_instance() {
    return reinterpret_cast<const Items*>(
               &_Items_default_instance_);
  }

  void Swap(Items* other);

  // implements Message ----------------------------------------------

  inline Items* New() const PROTOBUF_FINAL { return New(NULL); }

  Items* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Items& from);
  void MergeFrom(const Items& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Items* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Differential.testItem oItems = 4;
  int oitems_size() const;
  void clear_oitems();
  static const int kOItemsFieldNumber = 4;
  const ::Differential::testItem& oitems(int index) const;
  ::Differential::testItem* mutable_oitems(int index);
  ::Differential::testItem* add_oitems();
  ::google::protobuf::RepeatedPtrField< ::Differential::testItem >*
      mutable_oitems();
  const ::google::protobuf::RepeatedPtrField< ::Differential::testItem >&
      oitems() const;

  // .Differential.CommonPara oComm = 1;
  bool has_ocomm() const;
  void clear_ocomm();
  static const int kOCommFieldNumber = 1;
  const ::Differential::CommonPara& ocomm() const;
  ::Differential::CommonPara* mutable_ocomm();
  ::Differential::CommonPara* release_ocomm();
  void set_allocated_ocomm(::Differential::CommonPara* ocomm);

  // .Differential.SwitchPara oSwitch = 2;
  bool has_oswitch() const;
  void clear_oswitch();
  static const int kOSwitchFieldNumber = 2;
  const ::Differential::SwitchPara& oswitch() const;
  ::Differential::SwitchPara* mutable_oswitch();
  ::Differential::SwitchPara* release_oswitch();
  void set_allocated_oswitch(::Differential::SwitchPara* oswitch);

  // .Differential.ProtectSetting oProtectSet = 3;
  bool has_oprotectset() const;
  void clear_oprotectset();
  static const int kOProtectSetFieldNumber = 3;
  const ::Differential::ProtectSetting& oprotectset() const;
  ::Differential::ProtectSetting* mutable_oprotectset();
  ::Differential::ProtectSetting* release_oprotectset();
  void set_allocated_oprotectset(::Differential::ProtectSetting* oprotectset);

  // .Differential.OutPutType outputType = 5;
  void clear_outputtype();
  static const int kOutputTypeFieldNumber = 5;
  ::Differential::OutPutType outputtype() const;
  void set_outputtype(::Differential::OutPutType value);

  // @@protoc_insertion_point(class_scope:Differential.Items)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Differential::testItem > oitems_;
  ::Differential::CommonPara* ocomm_;
  ::Differential::SwitchPara* oswitch_;
  ::Differential::ProtectSetting* oprotectset_;
  int outputtype_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommonPara : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.CommonPara) */ {
 public:
  CommonPara();
  virtual ~CommonPara();

  CommonPara(const CommonPara& from);

  inline CommonPara& operator=(const CommonPara& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonPara& default_instance();

  static inline const CommonPara* internal_default_instance() {
    return reinterpret_cast<const CommonPara*>(
               &_CommonPara_default_instance_);
  }

  void Swap(CommonPara* other);

  // implements Message ----------------------------------------------

  inline CommonPara* New() const PROTOBUF_FINAL { return New(NULL); }

  CommonPara* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommonPara& from);
  void MergeFrom(const CommonPara& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommonPara* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float ED_V = 1;
  void clear_ed_v();
  static const int kEDVFieldNumber = 1;
  float ed_v() const;
  void set_ed_v(float value);

  // float ED_I = 2;
  void clear_ed_i();
  static const int kEDIFieldNumber = 2;
  float ed_i() const;
  void set_ed_i(float value);

  // float ED_Hz = 3;
  void clear_ed_hz();
  static const int kEDHzFieldNumber = 3;
  float ed_hz() const;
  void set_ed_hz(float value);

  // float PreTime = 4;
  void clear_pretime();
  static const int kPreTimeFieldNumber = 4;
  float pretime() const;
  void set_pretime(float value);

  // float PrefaultTime = 5;
  void clear_prefaulttime();
  static const int kPrefaultTimeFieldNumber = 5;
  float prefaulttime() const;
  void set_prefaulttime(float value);

  // float FaultTime = 6;
  void clear_faulttime();
  static const int kFaultTimeFieldNumber = 6;
  float faulttime() const;
  void set_faulttime(float value);

  // uint32 BalanceParaCacuType = 7;
  void clear_balanceparacacutype();
  static const int kBalanceParaCacuTypeFieldNumber = 7;
  ::google::protobuf::uint32 balanceparacacutype() const;
  void set_balanceparacacutype(::google::protobuf::uint32 value);

  // float SN = 8;
  void clear_sn();
  static const int kSNFieldNumber = 8;
  float sn() const;
  void set_sn(float value);

  // float Uh = 9;
  void clear_uh();
  static const int kUhFieldNumber = 9;
  float uh() const;
  void set_uh(float value);

  // float Um = 10;
  void clear_um();
  static const int kUmFieldNumber = 10;
  float um() const;
  void set_um(float value);

  // float Ul = 11;
  void clear_ul();
  static const int kUlFieldNumber = 11;
  float ul() const;
  void set_ul(float value);

  // float CTPh = 12;
  void clear_ctph();
  static const int kCTPhFieldNumber = 12;
  float ctph() const;
  void set_ctph(float value);

  // float CTPm = 13;
  void clear_ctpm();
  static const int kCTPmFieldNumber = 13;
  float ctpm() const;
  void set_ctpm(float value);

  // float CTPl = 14;
  void clear_ctpl();
  static const int kCTPlFieldNumber = 14;
  float ctpl() const;
  void set_ctpl(float value);

  // float CTSh = 15;
  void clear_ctsh();
  static const int kCTShFieldNumber = 15;
  float ctsh() const;
  void set_ctsh(float value);

  // float CTSm = 16;
  void clear_ctsm();
  static const int kCTSmFieldNumber = 16;
  float ctsm() const;
  void set_ctsm(float value);

  // float CTSl = 17;
  void clear_ctsl();
  static const int kCTSlFieldNumber = 17;
  float ctsl() const;
  void set_ctsl(float value);

  // float Kph = 18;
  void clear_kph();
  static const int kKphFieldNumber = 18;
  float kph() const;
  void set_kph(float value);

  // float Kpm = 19;
  void clear_kpm();
  static const int kKpmFieldNumber = 19;
  float kpm() const;
  void set_kpm(float value);

  // float Kpl = 20;
  void clear_kpl();
  static const int kKplFieldNumber = 20;
  float kpl() const;
  void set_kpl(float value);

  // .Differential.Connection_Type WindH = 21;
  void clear_windh();
  static const int kWindHFieldNumber = 21;
  ::Differential::Connection_Type windh() const;
  void set_windh(::Differential::Connection_Type value);

  // .Differential.Connection_Type WindM = 22;
  void clear_windm();
  static const int kWindMFieldNumber = 22;
  ::Differential::Connection_Type windm() const;
  void set_windm(::Differential::Connection_Type value);

  // .Differential.Connection_Type WindL = 23;
  void clear_windl();
  static const int kWindLFieldNumber = 23;
  ::Differential::Connection_Type windl() const;
  void set_windl(::Differential::Connection_Type value);

  // .Differential.Correct_Type AngleMode = 24;
  void clear_anglemode();
  static const int kAngleModeFieldNumber = 24;
  ::Differential::Correct_Type anglemode() const;
  void set_anglemode(::Differential::Correct_Type value);

  // .Differential.TestWind_Type WindSide = 25;
  void clear_windside();
  static const int kWindSideFieldNumber = 25;
  ::Differential::TestWind_Type windside() const;
  void set_windside(::Differential::TestWind_Type value);

  // uint32 ConnMode = 26;
  void clear_connmode();
  static const int kConnModeFieldNumber = 26;
  ::google::protobuf::uint32 connmode() const;
  void set_connmode(::google::protobuf::uint32 value);

  // uint32 JXFactor = 27;
  void clear_jxfactor();
  static const int kJXFactorFieldNumber = 27;
  ::google::protobuf::uint32 jxfactor() const;
  void set_jxfactor(::google::protobuf::uint32 value);

  // .Differential.Search_Type SerachMode = 28;
  void clear_serachmode();
  static const int kSerachModeFieldNumber = 28;
  ::Differential::Search_Type serachmode() const;
  void set_serachmode(::Differential::Search_Type value);

  // .Differential.CTPolar_Type IdEqu = 29;
  void clear_idequ();
  static const int kIdEquFieldNumber = 29;
  ::Differential::CTPolar_Type idequ() const;
  void set_idequ(::Differential::CTPolar_Type value);

  // uint32 Equation = 30;
  void clear_equation();
  static const int kEquationFieldNumber = 30;
  ::google::protobuf::uint32 equation() const;
  void set_equation(::google::protobuf::uint32 value);

  // float K1 = 31;
  void clear_k1();
  static const int kK1FieldNumber = 31;
  float k1() const;
  void set_k1(float value);

  // float K2 = 32;
  void clear_k2();
  static const int kK2FieldNumber = 32;
  float k2() const;
  void set_k2(float value);

  // .Differential.TestPhasor_type Phase_Type = 33;
  void clear_phase_type();
  static const int kPhaseTypeFieldNumber = 33;
  ::Differential::TestPhasor_type phase_type() const;
  void set_phase_type(::Differential::TestPhasor_type value);

  // float Reso = 34;
  void clear_reso();
  static const int kResoFieldNumber = 34;
  float reso() const;
  void set_reso(float value);

  // float Uz = 35;
  void clear_uz();
  static const int kUzFieldNumber = 35;
  float uz() const;
  void set_uz(float value);

  // @@protoc_insertion_point(class_scope:Differential.CommonPara)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float ed_v_;
  float ed_i_;
  float ed_hz_;
  float pretime_;
  float prefaulttime_;
  float faulttime_;
  ::google::protobuf::uint32 balanceparacacutype_;
  float sn_;
  float uh_;
  float um_;
  float ul_;
  float ctph_;
  float ctpm_;
  float ctpl_;
  float ctsh_;
  float ctsm_;
  float ctsl_;
  float kph_;
  float kpm_;
  float kpl_;
  int windh_;
  int windm_;
  int windl_;
  int anglemode_;
  int windside_;
  ::google::protobuf::uint32 connmode_;
  ::google::protobuf::uint32 jxfactor_;
  int serachmode_;
  int idequ_;
  ::google::protobuf::uint32 equation_;
  float k1_;
  float k2_;
  int phase_type_;
  float reso_;
  float uz_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProtectSetting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.ProtectSetting) */ {
 public:
  ProtectSetting();
  virtual ~ProtectSetting();

  ProtectSetting(const ProtectSetting& from);

  inline ProtectSetting& operator=(const ProtectSetting& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtectSetting& default_instance();

  static inline const ProtectSetting* internal_default_instance() {
    return reinterpret_cast<const ProtectSetting*>(
               &_ProtectSetting_default_instance_);
  }

  void Swap(ProtectSetting* other);

  // implements Message ----------------------------------------------

  inline ProtectSetting* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtectSetting* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtectSetting& from);
  void MergeFrom(const ProtectSetting& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtectSetting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Differential.SettingType Axis = 1;
  void clear_axis();
  static const int kAxisFieldNumber = 1;
  ::Differential::SettingType axis() const;
  void set_axis(::Differential::SettingType value);

  // .Differential.BaseCurrentSelect Insel = 2;
  void clear_insel();
  static const int kInselFieldNumber = 2;
  ::Differential::BaseCurrentSelect insel() const;
  void set_insel(::Differential::BaseCurrentSelect value);

  // float Inom = 3;
  void clear_inom();
  static const int kInomFieldNumber = 3;
  float inom() const;
  void set_inom(float value);

  // float Isd = 4;
  void clear_isd();
  static const int kIsdFieldNumber = 4;
  float isd() const;
  void set_isd(float value);

  // float Icdqd = 5;
  void clear_icdqd();
  static const int kIcdqdFieldNumber = 5;
  float icdqd() const;
  void set_icdqd(float value);

  // uint32 KneePoint = 6;
  void clear_kneepoint();
  static const int kKneePointFieldNumber = 6;
  ::google::protobuf::uint32 kneepoint() const;
  void set_kneepoint(::google::protobuf::uint32 value);

  // float Ip1 = 7;
  void clear_ip1();
  static const int kIp1FieldNumber = 7;
  float ip1() const;
  void set_ip1(float value);

  // float Ip2 = 8;
  void clear_ip2();
  static const int kIp2FieldNumber = 8;
  float ip2() const;
  void set_ip2(float value);

  // float Ip3 = 9;
  void clear_ip3();
  static const int kIp3FieldNumber = 9;
  float ip3() const;
  void set_ip3(float value);

  // float Kid1 = 10;
  void clear_kid1();
  static const int kKid1FieldNumber = 10;
  float kid1() const;
  void set_kid1(float value);

  // float Kid2 = 11;
  void clear_kid2();
  static const int kKid2FieldNumber = 11;
  float kid2() const;
  void set_kid2(float value);

  // float Kid3 = 12;
  void clear_kid3();
  static const int kKid3FieldNumber = 12;
  float kid3() const;
  void set_kid3(float value);

  // float Kid4 = 13;
  void clear_kid4();
  static const int kKid4FieldNumber = 13;
  float kid4() const;
  void set_kid4(float value);

  // float Kxb = 14;
  void clear_kxb();
  static const int kKxbFieldNumber = 14;
  float kxb() const;
  void set_kxb(float value);

  // float Kxb3 = 15;
  void clear_kxb3();
  static const int kKxb3FieldNumber = 15;
  float kxb3() const;
  void set_kxb3(float value);

  // float Kxb5 = 16;
  void clear_kxb5();
  static const int kKxb5FieldNumber = 16;
  float kxb5() const;
  void set_kxb5(float value);

  // @@protoc_insertion_point(class_scope:Differential.ProtectSetting)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int axis_;
  int insel_;
  float inom_;
  float isd_;
  float icdqd_;
  ::google::protobuf::uint32 kneepoint_;
  float ip1_;
  float ip2_;
  float ip3_;
  float kid1_;
  float kid2_;
  float kid3_;
  float kid4_;
  float kxb_;
  float kxb3_;
  float kxb5_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SwitchPara : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Differential.SwitchPara) */ {
 public:
  SwitchPara();
  virtual ~SwitchPara();

  SwitchPara(const SwitchPara& from);

  inline SwitchPara& operator=(const SwitchPara& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchPara& default_instance();

  static inline const SwitchPara* internal_default_instance() {
    return reinterpret_cast<const SwitchPara*>(
               &_SwitchPara_default_instance_);
  }

  void Swap(SwitchPara* other);

  // implements Message ----------------------------------------------

  inline SwitchPara* New() const PROTOBUF_FINAL { return New(NULL); }

  SwitchPara* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SwitchPara& from);
  void MergeFrom(const SwitchPara& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SwitchPara* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 iKA = 1;
  void clear_ika();
  static const int kIKAFieldNumber = 1;
  ::google::protobuf::uint32 ika() const;
  void set_ika(::google::protobuf::uint32 value);

  // uint32 iKB = 2;
  void clear_ikb();
  static const int kIKBFieldNumber = 2;
  ::google::protobuf::uint32 ikb() const;
  void set_ikb(::google::protobuf::uint32 value);

  // uint32 iKC = 3;
  void clear_ikc();
  static const int kIKCFieldNumber = 3;
  ::google::protobuf::uint32 ikc() const;
  void set_ikc(::google::protobuf::uint32 value);

  // uint32 iKD = 4;
  void clear_ikd();
  static const int kIKDFieldNumber = 4;
  ::google::protobuf::uint32 ikd() const;
  void set_ikd(::google::protobuf::uint32 value);

  // uint32 iKE = 5;
  void clear_ike();
  static const int kIKEFieldNumber = 5;
  ::google::protobuf::uint32 ike() const;
  void set_ike(::google::protobuf::uint32 value);

  // uint32 iKF = 6;
  void clear_ikf();
  static const int kIKFFieldNumber = 6;
  ::google::protobuf::uint32 ikf() const;
  void set_ikf(::google::protobuf::uint32 value);

  // uint32 iKG = 7;
  void clear_ikg();
  static const int kIKGFieldNumber = 7;
  ::google::protobuf::uint32 ikg() const;
  void set_ikg(::google::protobuf::uint32 value);

  // uint32 iKH = 8;
  void clear_ikh();
  static const int kIKHFieldNumber = 8;
  ::google::protobuf::uint32 ikh() const;
  void set_ikh(::google::protobuf::uint32 value);

  // uint32 iKI = 9;
  void clear_iki();
  static const int kIKIFieldNumber = 9;
  ::google::protobuf::uint32 iki() const;
  void set_iki(::google::protobuf::uint32 value);

  // uint32 iKJ = 10;
  void clear_ikj();
  static const int kIKJFieldNumber = 10;
  ::google::protobuf::uint32 ikj() const;
  void set_ikj(::google::protobuf::uint32 value);

  // uint32 iLogic = 11;
  void clear_ilogic();
  static const int kILogicFieldNumber = 11;
  ::google::protobuf::uint32 ilogic() const;
  void set_ilogic(::google::protobuf::uint32 value);

  // uint32 iOut1 = 12;
  void clear_iout1();
  static const int kIOut1FieldNumber = 12;
  ::google::protobuf::uint32 iout1() const;
  void set_iout1(::google::protobuf::uint32 value);

  // uint32 iOut2 = 13;
  void clear_iout2();
  static const int kIOut2FieldNumber = 13;
  ::google::protobuf::uint32 iout2() const;
  void set_iout2(::google::protobuf::uint32 value);

  // uint32 iOut3 = 14;
  void clear_iout3();
  static const int kIOut3FieldNumber = 14;
  ::google::protobuf::uint32 iout3() const;
  void set_iout3(::google::protobuf::uint32 value);

  // uint32 iOut4 = 15;
  void clear_iout4();
  static const int kIOut4FieldNumber = 15;
  ::google::protobuf::uint32 iout4() const;
  void set_iout4(::google::protobuf::uint32 value);

  // uint32 iOut5 = 16;
  void clear_iout5();
  static const int kIOut5FieldNumber = 16;
  ::google::protobuf::uint32 iout5() const;
  void set_iout5(::google::protobuf::uint32 value);

  // uint32 iOut6 = 17;
  void clear_iout6();
  static const int kIOut6FieldNumber = 17;
  ::google::protobuf::uint32 iout6() const;
  void set_iout6(::google::protobuf::uint32 value);

  // uint32 iOut7 = 18;
  void clear_iout7();
  static const int kIOut7FieldNumber = 18;
  ::google::protobuf::uint32 iout7() const;
  void set_iout7(::google::protobuf::uint32 value);

  // uint32 iOut8 = 19;
  void clear_iout8();
  static const int kIOut8FieldNumber = 19;
  ::google::protobuf::uint32 iout8() const;
  void set_iout8(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Differential.SwitchPara)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ika_;
  ::google::protobuf::uint32 ikb_;
  ::google::protobuf::uint32 ikc_;
  ::google::protobuf::uint32 ikd_;
  ::google::protobuf::uint32 ike_;
  ::google::protobuf::uint32 ikf_;
  ::google::protobuf::uint32 ikg_;
  ::google::protobuf::uint32 ikh_;
  ::google::protobuf::uint32 iki_;
  ::google::protobuf::uint32 ikj_;
  ::google::protobuf::uint32 ilogic_;
  ::google::protobuf::uint32 iout1_;
  ::google::protobuf::uint32 iout2_;
  ::google::protobuf::uint32 iout3_;
  ::google::protobuf::uint32 iout4_;
  ::google::protobuf::uint32 iout5_;
  ::google::protobuf::uint32 iout6_;
  ::google::protobuf::uint32 iout7_;
  ::google::protobuf::uint32 iout8_;
  mutable int _cached_size_;
  friend struct  protobuf_Differential_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// chanel

// float famptitude = 1;
inline void chanel::clear_famptitude() {
  famptitude_ = 0;
}
inline float chanel::famptitude() const {
  // @@protoc_insertion_point(field_get:Differential.chanel.famptitude)
  return famptitude_;
}
inline void chanel::set_famptitude(float value) {
  
  famptitude_ = value;
  // @@protoc_insertion_point(field_set:Differential.chanel.famptitude)
}

// float fphase = 2;
inline void chanel::clear_fphase() {
  fphase_ = 0;
}
inline float chanel::fphase() const {
  // @@protoc_insertion_point(field_get:Differential.chanel.fphase)
  return fphase_;
}
inline void chanel::set_fphase(float value) {
  
  fphase_ = value;
  // @@protoc_insertion_point(field_set:Differential.chanel.fphase)
}

// -------------------------------------------------------------------

// BasicResultItem

// .Differential.chanel Ia = 1;
inline bool BasicResultItem::has_ia() const {
  return this != internal_default_instance() && ia_ != NULL;
}
inline void BasicResultItem::clear_ia() {
  if (GetArenaNoVirtual() == NULL && ia_ != NULL) delete ia_;
  ia_ = NULL;
}
inline const ::Differential::chanel& BasicResultItem::ia() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Ia)
  return ia_ != NULL ? *ia_
                         : *::Differential::chanel::internal_default_instance();
}
inline ::Differential::chanel* BasicResultItem::mutable_ia() {
  
  if (ia_ == NULL) {
    ia_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Ia)
  return ia_;
}
inline ::Differential::chanel* BasicResultItem::release_ia() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Ia)
  
  ::Differential::chanel* temp = ia_;
  ia_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_ia(::Differential::chanel* ia) {
  delete ia_;
  ia_ = ia;
  if (ia) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Ia)
}

// .Differential.chanel Ib = 2;
inline bool BasicResultItem::has_ib() const {
  return this != internal_default_instance() && ib_ != NULL;
}
inline void BasicResultItem::clear_ib() {
  if (GetArenaNoVirtual() == NULL && ib_ != NULL) delete ib_;
  ib_ = NULL;
}
inline const ::Differential::chanel& BasicResultItem::ib() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Ib)
  return ib_ != NULL ? *ib_
                         : *::Differential::chanel::internal_default_instance();
}
inline ::Differential::chanel* BasicResultItem::mutable_ib() {
  
  if (ib_ == NULL) {
    ib_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Ib)
  return ib_;
}
inline ::Differential::chanel* BasicResultItem::release_ib() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Ib)
  
  ::Differential::chanel* temp = ib_;
  ib_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_ib(::Differential::chanel* ib) {
  delete ib_;
  ib_ = ib;
  if (ib) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Ib)
}

// .Differential.chanel Ic = 3;
inline bool BasicResultItem::has_ic() const {
  return this != internal_default_instance() && ic_ != NULL;
}
inline void BasicResultItem::clear_ic() {
  if (GetArenaNoVirtual() == NULL && ic_ != NULL) delete ic_;
  ic_ = NULL;
}
inline const ::Differential::chanel& BasicResultItem::ic() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Ic)
  return ic_ != NULL ? *ic_
                         : *::Differential::chanel::internal_default_instance();
}
inline ::Differential::chanel* BasicResultItem::mutable_ic() {
  
  if (ic_ == NULL) {
    ic_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Ic)
  return ic_;
}
inline ::Differential::chanel* BasicResultItem::release_ic() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Ic)
  
  ::Differential::chanel* temp = ic_;
  ic_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_ic(::Differential::chanel* ic) {
  delete ic_;
  ic_ = ic;
  if (ic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Ic)
}

// .Differential.chanel Iap = 4;
inline bool BasicResultItem::has_iap() const {
  return this != internal_default_instance() && iap_ != NULL;
}
inline void BasicResultItem::clear_iap() {
  if (GetArenaNoVirtual() == NULL && iap_ != NULL) delete iap_;
  iap_ = NULL;
}
inline const ::Differential::chanel& BasicResultItem::iap() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Iap)
  return iap_ != NULL ? *iap_
                         : *::Differential::chanel::internal_default_instance();
}
inline ::Differential::chanel* BasicResultItem::mutable_iap() {
  
  if (iap_ == NULL) {
    iap_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Iap)
  return iap_;
}
inline ::Differential::chanel* BasicResultItem::release_iap() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Iap)
  
  ::Differential::chanel* temp = iap_;
  iap_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_iap(::Differential::chanel* iap) {
  delete iap_;
  iap_ = iap;
  if (iap) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Iap)
}

// .Differential.chanel Ibp = 5;
inline bool BasicResultItem::has_ibp() const {
  return this != internal_default_instance() && ibp_ != NULL;
}
inline void BasicResultItem::clear_ibp() {
  if (GetArenaNoVirtual() == NULL && ibp_ != NULL) delete ibp_;
  ibp_ = NULL;
}
inline const ::Differential::chanel& BasicResultItem::ibp() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Ibp)
  return ibp_ != NULL ? *ibp_
                         : *::Differential::chanel::internal_default_instance();
}
inline ::Differential::chanel* BasicResultItem::mutable_ibp() {
  
  if (ibp_ == NULL) {
    ibp_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Ibp)
  return ibp_;
}
inline ::Differential::chanel* BasicResultItem::release_ibp() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Ibp)
  
  ::Differential::chanel* temp = ibp_;
  ibp_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_ibp(::Differential::chanel* ibp) {
  delete ibp_;
  ibp_ = ibp;
  if (ibp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Ibp)
}

// .Differential.chanel Icp = 6;
inline bool BasicResultItem::has_icp() const {
  return this != internal_default_instance() && icp_ != NULL;
}
inline void BasicResultItem::clear_icp() {
  if (GetArenaNoVirtual() == NULL && icp_ != NULL) delete icp_;
  icp_ = NULL;
}
inline const ::Differential::chanel& BasicResultItem::icp() const {
  // @@protoc_insertion_point(field_get:Differential.BasicResultItem.Icp)
  return icp_ != NULL ? *icp_
                         : *::Differential::chanel::internal_default_instance();
}
inline ::Differential::chanel* BasicResultItem::mutable_icp() {
  
  if (icp_ == NULL) {
    icp_ = new ::Differential::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Differential.BasicResultItem.Icp)
  return icp_;
}
inline ::Differential::chanel* BasicResultItem::release_icp() {
  // @@protoc_insertion_point(field_release:Differential.BasicResultItem.Icp)
  
  ::Differential::chanel* temp = icp_;
  icp_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_icp(::Differential::chanel* icp) {
  delete icp_;
  icp_ = icp;
  if (icp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.BasicResultItem.Icp)
}

// -------------------------------------------------------------------

// TestItem_QDCurrent

// .Differential.TestItem_type itemtype = 1;
inline void TestItem_QDCurrent::clear_itemtype() {
  itemtype_ = 0;
}
inline ::Differential::TestItem_type TestItem_QDCurrent::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
inline void TestItem_QDCurrent::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent.itemtype)
}

// uint32 iIndex = 2;
inline void TestItem_QDCurrent::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_QDCurrent::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent.iIndex)
  return iindex_;
}
inline void TestItem_QDCurrent::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent.iIndex)
}

// float Ir = 3;
inline void TestItem_QDCurrent::clear_ir() {
  ir_ = 0;
}
inline float TestItem_QDCurrent::ir() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent.Ir)
  return ir_;
}
inline void TestItem_QDCurrent::set_ir(float value) {
  
  ir_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent.Ir)
}

// float fUp = 4;
inline void TestItem_QDCurrent::clear_fup() {
  fup_ = 0;
}
inline float TestItem_QDCurrent::fup() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent.fUp)
  return fup_;
}
inline void TestItem_QDCurrent::set_fup(float value) {
  
  fup_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent.fUp)
}

// float fDown = 5;
inline void TestItem_QDCurrent::clear_fdown() {
  fdown_ = 0;
}
inline float TestItem_QDCurrent::fdown() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent.fDown)
  return fdown_;
}
inline void TestItem_QDCurrent::set_fdown(float value) {
  
  fdown_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent.fDown)
}

// -------------------------------------------------------------------

// TestItem_QDCurrent_Result

// .Differential.TestItem_type itemtype = 1;
inline void TestItem_QDCurrent_Result::clear_itemtype() {
  itemtype_ = 0;
}
inline ::Differential::TestItem_type TestItem_QDCurrent_Result::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
inline void TestItem_QDCurrent_Result::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent_Result.itemtype)
}

// uint32 iIndex = 2;
inline void TestItem_QDCurrent_Result::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_QDCurrent_Result::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.iIndex)
  return iindex_;
}
inline void TestItem_QDCurrent_Result::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent_Result.iIndex)
}

// .Differential.BasicResultItem basic = 3;
inline bool TestItem_QDCurrent_Result::has_basic() const {
  return this != internal_default_instance() && basic_ != NULL;
}
inline void TestItem_QDCurrent_Result::clear_basic() {
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) delete basic_;
  basic_ = NULL;
}
inline const ::Differential::BasicResultItem& TestItem_QDCurrent_Result::basic() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.basic)
  return basic_ != NULL ? *basic_
                         : *::Differential::BasicResultItem::internal_default_instance();
}
inline ::Differential::BasicResultItem* TestItem_QDCurrent_Result::mutable_basic() {
  
  if (basic_ == NULL) {
    basic_ = new ::Differential::BasicResultItem;
  }
  // @@protoc_insertion_point(field_mutable:Differential.TestItem_QDCurrent_Result.basic)
  return basic_;
}
inline ::Differential::BasicResultItem* TestItem_QDCurrent_Result::release_basic() {
  // @@protoc_insertion_point(field_release:Differential.TestItem_QDCurrent_Result.basic)
  
  ::Differential::BasicResultItem* temp = basic_;
  basic_ = NULL;
  return temp;
}
inline void TestItem_QDCurrent_Result::set_allocated_basic(::Differential::BasicResultItem* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.TestItem_QDCurrent_Result.basic)
}

// float Id = 4;
inline void TestItem_QDCurrent_Result::clear_id() {
  id_ = 0;
}
inline float TestItem_QDCurrent_Result::id() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.Id)
  return id_;
}
inline void TestItem_QDCurrent_Result::set_id(float value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent_Result.Id)
}

// bool bEnd = 5;
inline void TestItem_QDCurrent_Result::clear_bend() {
  bend_ = false;
}
inline bool TestItem_QDCurrent_Result::bend() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.bEnd)
  return bend_;
}
inline void TestItem_QDCurrent_Result::set_bend(bool value) {
  
  bend_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent_Result.bEnd)
}

// uint32 nibinstate = 7;
inline void TestItem_QDCurrent_Result::clear_nibinstate() {
  nibinstate_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_QDCurrent_Result::nibinstate() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_QDCurrent_Result.nibinstate)
  return nibinstate_;
}
inline void TestItem_QDCurrent_Result::set_nibinstate(::google::protobuf::uint32 value) {
  
  nibinstate_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_QDCurrent_Result.nibinstate)
}

// -------------------------------------------------------------------

// TestItem_ZDRatio

// .Differential.TestItem_type itemtype = 1;
inline void TestItem_ZDRatio::clear_itemtype() {
  itemtype_ = 0;
}
inline ::Differential::TestItem_type TestItem_ZDRatio::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
inline void TestItem_ZDRatio::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.itemtype)
}

// uint32 iTypeIndex = 2;
inline void TestItem_ZDRatio::clear_itypeindex() {
  itypeindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_ZDRatio::itypeindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.iTypeIndex)
  return itypeindex_;
}
inline void TestItem_ZDRatio::set_itypeindex(::google::protobuf::uint32 value) {
  
  itypeindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.iTypeIndex)
}

// uint32 iIndex = 3;
inline void TestItem_ZDRatio::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_ZDRatio::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.iIndex)
  return iindex_;
}
inline void TestItem_ZDRatio::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.iIndex)
}

// float Ir = 4;
inline void TestItem_ZDRatio::clear_ir() {
  ir_ = 0;
}
inline float TestItem_ZDRatio::ir() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.Ir)
  return ir_;
}
inline void TestItem_ZDRatio::set_ir(float value) {
  
  ir_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.Ir)
}

// float fUp = 5;
inline void TestItem_ZDRatio::clear_fup() {
  fup_ = 0;
}
inline float TestItem_ZDRatio::fup() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.fUp)
  return fup_;
}
inline void TestItem_ZDRatio::set_fup(float value) {
  
  fup_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.fUp)
}

// float fDown = 6;
inline void TestItem_ZDRatio::clear_fdown() {
  fdown_ = 0;
}
inline float TestItem_ZDRatio::fdown() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio.fDown)
  return fdown_;
}
inline void TestItem_ZDRatio::set_fdown(float value) {
  
  fdown_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio.fDown)
}

// -------------------------------------------------------------------

// TestItem_ZDRatio_Result

// .Differential.TestItem_type itemtype = 1;
inline void TestItem_ZDRatio_Result::clear_itemtype() {
  itemtype_ = 0;
}
inline ::Differential::TestItem_type TestItem_ZDRatio_Result::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
inline void TestItem_ZDRatio_Result::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.itemtype)
}

// uint32 iTypeIndex = 2;
inline void TestItem_ZDRatio_Result::clear_itypeindex() {
  itypeindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_ZDRatio_Result::itypeindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.iTypeIndex)
  return itypeindex_;
}
inline void TestItem_ZDRatio_Result::set_itypeindex(::google::protobuf::uint32 value) {
  
  itypeindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.iTypeIndex)
}

// uint32 iIndex = 3;
inline void TestItem_ZDRatio_Result::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_ZDRatio_Result::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.iIndex)
  return iindex_;
}
inline void TestItem_ZDRatio_Result::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.iIndex)
}

// .Differential.BasicResultItem basic = 4;
inline bool TestItem_ZDRatio_Result::has_basic() const {
  return this != internal_default_instance() && basic_ != NULL;
}
inline void TestItem_ZDRatio_Result::clear_basic() {
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) delete basic_;
  basic_ = NULL;
}
inline const ::Differential::BasicResultItem& TestItem_ZDRatio_Result::basic() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.basic)
  return basic_ != NULL ? *basic_
                         : *::Differential::BasicResultItem::internal_default_instance();
}
inline ::Differential::BasicResultItem* TestItem_ZDRatio_Result::mutable_basic() {
  
  if (basic_ == NULL) {
    basic_ = new ::Differential::BasicResultItem;
  }
  // @@protoc_insertion_point(field_mutable:Differential.TestItem_ZDRatio_Result.basic)
  return basic_;
}
inline ::Differential::BasicResultItem* TestItem_ZDRatio_Result::release_basic() {
  // @@protoc_insertion_point(field_release:Differential.TestItem_ZDRatio_Result.basic)
  
  ::Differential::BasicResultItem* temp = basic_;
  basic_ = NULL;
  return temp;
}
inline void TestItem_ZDRatio_Result::set_allocated_basic(::Differential::BasicResultItem* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.TestItem_ZDRatio_Result.basic)
}

// float Id = 5;
inline void TestItem_ZDRatio_Result::clear_id() {
  id_ = 0;
}
inline float TestItem_ZDRatio_Result::id() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.Id)
  return id_;
}
inline void TestItem_ZDRatio_Result::set_id(float value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.Id)
}

// bool bEnd = 6;
inline void TestItem_ZDRatio_Result::clear_bend() {
  bend_ = false;
}
inline bool TestItem_ZDRatio_Result::bend() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.bEnd)
  return bend_;
}
inline void TestItem_ZDRatio_Result::set_bend(bool value) {
  
  bend_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.bEnd)
}

// uint32 nibinstate = 7;
inline void TestItem_ZDRatio_Result::clear_nibinstate() {
  nibinstate_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_ZDRatio_Result::nibinstate() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ZDRatio_Result.nibinstate)
  return nibinstate_;
}
inline void TestItem_ZDRatio_Result::set_nibinstate(::google::protobuf::uint32 value) {
  
  nibinstate_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ZDRatio_Result.nibinstate)
}

// -------------------------------------------------------------------

// HarmonicRatio

// .Differential.TestItem_type itemtype = 1;
inline void HarmonicRatio::clear_itemtype() {
  itemtype_ = 0;
}
inline ::Differential::TestItem_type HarmonicRatio::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
inline void HarmonicRatio::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio.itemtype)
}

// uint32 iIndex = 2;
inline void HarmonicRatio::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 HarmonicRatio::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio.iIndex)
  return iindex_;
}
inline void HarmonicRatio::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio.iIndex)
}

// float Id = 3;
inline void HarmonicRatio::clear_id() {
  id_ = 0;
}
inline float HarmonicRatio::id() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio.Id)
  return id_;
}
inline void HarmonicRatio::set_id(float value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio.Id)
}

// uint32 nHam = 4;
inline void HarmonicRatio::clear_nham() {
  nham_ = 0u;
}
inline ::google::protobuf::uint32 HarmonicRatio::nham() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio.nHam)
  return nham_;
}
inline void HarmonicRatio::set_nham(::google::protobuf::uint32 value) {
  
  nham_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio.nHam)
}

// -------------------------------------------------------------------

// HarmonicRatio_Result

// .Differential.TestItem_type itemtype = 1;
inline void HarmonicRatio_Result::clear_itemtype() {
  itemtype_ = 0;
}
inline ::Differential::TestItem_type HarmonicRatio_Result::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
inline void HarmonicRatio_Result::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.itemtype)
}

// uint32 iIndex = 2;
inline void HarmonicRatio_Result::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 HarmonicRatio_Result::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.iIndex)
  return iindex_;
}
inline void HarmonicRatio_Result::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.iIndex)
}

// .Differential.BasicResultItem basic = 3;
inline bool HarmonicRatio_Result::has_basic() const {
  return this != internal_default_instance() && basic_ != NULL;
}
inline void HarmonicRatio_Result::clear_basic() {
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) delete basic_;
  basic_ = NULL;
}
inline const ::Differential::BasicResultItem& HarmonicRatio_Result::basic() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.basic)
  return basic_ != NULL ? *basic_
                         : *::Differential::BasicResultItem::internal_default_instance();
}
inline ::Differential::BasicResultItem* HarmonicRatio_Result::mutable_basic() {
  
  if (basic_ == NULL) {
    basic_ = new ::Differential::BasicResultItem;
  }
  // @@protoc_insertion_point(field_mutable:Differential.HarmonicRatio_Result.basic)
  return basic_;
}
inline ::Differential::BasicResultItem* HarmonicRatio_Result::release_basic() {
  // @@protoc_insertion_point(field_release:Differential.HarmonicRatio_Result.basic)
  
  ::Differential::BasicResultItem* temp = basic_;
  basic_ = NULL;
  return temp;
}
inline void HarmonicRatio_Result::set_allocated_basic(::Differential::BasicResultItem* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.HarmonicRatio_Result.basic)
}

// float Ir = 4;
inline void HarmonicRatio_Result::clear_ir() {
  ir_ = 0;
}
inline float HarmonicRatio_Result::ir() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.Ir)
  return ir_;
}
inline void HarmonicRatio_Result::set_ir(float value) {
  
  ir_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.Ir)
}

// float K = 5;
inline void HarmonicRatio_Result::clear_k() {
  k_ = 0;
}
inline float HarmonicRatio_Result::k() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.K)
  return k_;
}
inline void HarmonicRatio_Result::set_k(float value) {
  
  k_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.K)
}

// bool bEnd = 6;
inline void HarmonicRatio_Result::clear_bend() {
  bend_ = false;
}
inline bool HarmonicRatio_Result::bend() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.bEnd)
  return bend_;
}
inline void HarmonicRatio_Result::set_bend(bool value) {
  
  bend_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.bEnd)
}

// uint32 nibinstate = 7;
inline void HarmonicRatio_Result::clear_nibinstate() {
  nibinstate_ = 0u;
}
inline ::google::protobuf::uint32 HarmonicRatio_Result::nibinstate() const {
  // @@protoc_insertion_point(field_get:Differential.HarmonicRatio_Result.nibinstate)
  return nibinstate_;
}
inline void HarmonicRatio_Result::set_nibinstate(::google::protobuf::uint32 value) {
  
  nibinstate_ = value;
  // @@protoc_insertion_point(field_set:Differential.HarmonicRatio_Result.nibinstate)
}

// -------------------------------------------------------------------

// TestItem_ActionTime

// .Differential.TestItem_type itemtype = 1;
inline void TestItem_ActionTime::clear_itemtype() {
  itemtype_ = 0;
}
inline ::Differential::TestItem_type TestItem_ActionTime::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
inline void TestItem_ActionTime::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime.itemtype)
}

// uint32 iIndex = 2;
inline void TestItem_ActionTime::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_ActionTime::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime.iIndex)
  return iindex_;
}
inline void TestItem_ActionTime::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime.iIndex)
}

// float Id = 3;
inline void TestItem_ActionTime::clear_id() {
  id_ = 0;
}
inline float TestItem_ActionTime::id() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime.Id)
  return id_;
}
inline void TestItem_ActionTime::set_id(float value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime.Id)
}

// float Ir = 4;
inline void TestItem_ActionTime::clear_ir() {
  ir_ = 0;
}
inline float TestItem_ActionTime::ir() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime.Ir)
  return ir_;
}
inline void TestItem_ActionTime::set_ir(float value) {
  
  ir_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime.Ir)
}

// -------------------------------------------------------------------

// TestItem_ActionTime_Result

// .Differential.TestItem_type itemtype = 1;
inline void TestItem_ActionTime_Result::clear_itemtype() {
  itemtype_ = 0;
}
inline ::Differential::TestItem_type TestItem_ActionTime_Result::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
inline void TestItem_ActionTime_Result::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.itemtype)
}

// uint32 iIndex = 2;
inline void TestItem_ActionTime_Result::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_ActionTime_Result::iindex() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.iIndex)
  return iindex_;
}
inline void TestItem_ActionTime_Result::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.iIndex)
}

// .Differential.BasicResultItem basic = 3;
inline bool TestItem_ActionTime_Result::has_basic() const {
  return this != internal_default_instance() && basic_ != NULL;
}
inline void TestItem_ActionTime_Result::clear_basic() {
  if (GetArenaNoVirtual() == NULL && basic_ != NULL) delete basic_;
  basic_ = NULL;
}
inline const ::Differential::BasicResultItem& TestItem_ActionTime_Result::basic() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.basic)
  return basic_ != NULL ? *basic_
                         : *::Differential::BasicResultItem::internal_default_instance();
}
inline ::Differential::BasicResultItem* TestItem_ActionTime_Result::mutable_basic() {
  
  if (basic_ == NULL) {
    basic_ = new ::Differential::BasicResultItem;
  }
  // @@protoc_insertion_point(field_mutable:Differential.TestItem_ActionTime_Result.basic)
  return basic_;
}
inline ::Differential::BasicResultItem* TestItem_ActionTime_Result::release_basic() {
  // @@protoc_insertion_point(field_release:Differential.TestItem_ActionTime_Result.basic)
  
  ::Differential::BasicResultItem* temp = basic_;
  basic_ = NULL;
  return temp;
}
inline void TestItem_ActionTime_Result::set_allocated_basic(::Differential::BasicResultItem* basic) {
  delete basic_;
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.TestItem_ActionTime_Result.basic)
}

// float fId = 4;
inline void TestItem_ActionTime_Result::clear_fid() {
  fid_ = 0;
}
inline float TestItem_ActionTime_Result::fid() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.fId)
  return fid_;
}
inline void TestItem_ActionTime_Result::set_fid(float value) {
  
  fid_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.fId)
}

// float ftime = 5;
inline void TestItem_ActionTime_Result::clear_ftime() {
  ftime_ = 0;
}
inline float TestItem_ActionTime_Result::ftime() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.ftime)
  return ftime_;
}
inline void TestItem_ActionTime_Result::set_ftime(float value) {
  
  ftime_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.ftime)
}

// bool bEnd = 6;
inline void TestItem_ActionTime_Result::clear_bend() {
  bend_ = false;
}
inline bool TestItem_ActionTime_Result::bend() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.bEnd)
  return bend_;
}
inline void TestItem_ActionTime_Result::set_bend(bool value) {
  
  bend_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.bEnd)
}

// uint32 nibinstate = 7;
inline void TestItem_ActionTime_Result::clear_nibinstate() {
  nibinstate_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_ActionTime_Result::nibinstate() const {
  // @@protoc_insertion_point(field_get:Differential.TestItem_ActionTime_Result.nibinstate)
  return nibinstate_;
}
inline void TestItem_ActionTime_Result::set_nibinstate(::google::protobuf::uint32 value) {
  
  nibinstate_ = value;
  // @@protoc_insertion_point(field_set:Differential.TestItem_ActionTime_Result.nibinstate)
}

// -------------------------------------------------------------------

// testItem

// .Differential.TestItem_type itemtype = 1;
inline void testItem::clear_itemtype() {
  itemtype_ = 0;
}
inline ::Differential::TestItem_type testItem::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.testItem.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
inline void testItem::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.testItem.itemtype)
}

// .Differential.TestItem_QDCurrent oQdcurrent = 2;
inline bool testItem::has_oqdcurrent() const {
  return this != internal_default_instance() && oqdcurrent_ != NULL;
}
inline void testItem::clear_oqdcurrent() {
  if (GetArenaNoVirtual() == NULL && oqdcurrent_ != NULL) delete oqdcurrent_;
  oqdcurrent_ = NULL;
}
inline const ::Differential::TestItem_QDCurrent& testItem::oqdcurrent() const {
  // @@protoc_insertion_point(field_get:Differential.testItem.oQdcurrent)
  return oqdcurrent_ != NULL ? *oqdcurrent_
                         : *::Differential::TestItem_QDCurrent::internal_default_instance();
}
inline ::Differential::TestItem_QDCurrent* testItem::mutable_oqdcurrent() {
  
  if (oqdcurrent_ == NULL) {
    oqdcurrent_ = new ::Differential::TestItem_QDCurrent;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem.oQdcurrent)
  return oqdcurrent_;
}
inline ::Differential::TestItem_QDCurrent* testItem::release_oqdcurrent() {
  // @@protoc_insertion_point(field_release:Differential.testItem.oQdcurrent)
  
  ::Differential::TestItem_QDCurrent* temp = oqdcurrent_;
  oqdcurrent_ = NULL;
  return temp;
}
inline void testItem::set_allocated_oqdcurrent(::Differential::TestItem_QDCurrent* oqdcurrent) {
  delete oqdcurrent_;
  oqdcurrent_ = oqdcurrent;
  if (oqdcurrent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem.oQdcurrent)
}

// .Differential.TestItem_ActionTime oActionTime = 3;
inline bool testItem::has_oactiontime() const {
  return this != internal_default_instance() && oactiontime_ != NULL;
}
inline void testItem::clear_oactiontime() {
  if (GetArenaNoVirtual() == NULL && oactiontime_ != NULL) delete oactiontime_;
  oactiontime_ = NULL;
}
inline const ::Differential::TestItem_ActionTime& testItem::oactiontime() const {
  // @@protoc_insertion_point(field_get:Differential.testItem.oActionTime)
  return oactiontime_ != NULL ? *oactiontime_
                         : *::Differential::TestItem_ActionTime::internal_default_instance();
}
inline ::Differential::TestItem_ActionTime* testItem::mutable_oactiontime() {
  
  if (oactiontime_ == NULL) {
    oactiontime_ = new ::Differential::TestItem_ActionTime;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem.oActionTime)
  return oactiontime_;
}
inline ::Differential::TestItem_ActionTime* testItem::release_oactiontime() {
  // @@protoc_insertion_point(field_release:Differential.testItem.oActionTime)
  
  ::Differential::TestItem_ActionTime* temp = oactiontime_;
  oactiontime_ = NULL;
  return temp;
}
inline void testItem::set_allocated_oactiontime(::Differential::TestItem_ActionTime* oactiontime) {
  delete oactiontime_;
  oactiontime_ = oactiontime;
  if (oactiontime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem.oActionTime)
}

// .Differential.TestItem_ZDRatio oZDRatio = 4;
inline bool testItem::has_ozdratio() const {
  return this != internal_default_instance() && ozdratio_ != NULL;
}
inline void testItem::clear_ozdratio() {
  if (GetArenaNoVirtual() == NULL && ozdratio_ != NULL) delete ozdratio_;
  ozdratio_ = NULL;
}
inline const ::Differential::TestItem_ZDRatio& testItem::ozdratio() const {
  // @@protoc_insertion_point(field_get:Differential.testItem.oZDRatio)
  return ozdratio_ != NULL ? *ozdratio_
                         : *::Differential::TestItem_ZDRatio::internal_default_instance();
}
inline ::Differential::TestItem_ZDRatio* testItem::mutable_ozdratio() {
  
  if (ozdratio_ == NULL) {
    ozdratio_ = new ::Differential::TestItem_ZDRatio;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem.oZDRatio)
  return ozdratio_;
}
inline ::Differential::TestItem_ZDRatio* testItem::release_ozdratio() {
  // @@protoc_insertion_point(field_release:Differential.testItem.oZDRatio)
  
  ::Differential::TestItem_ZDRatio* temp = ozdratio_;
  ozdratio_ = NULL;
  return temp;
}
inline void testItem::set_allocated_ozdratio(::Differential::TestItem_ZDRatio* ozdratio) {
  delete ozdratio_;
  ozdratio_ = ozdratio;
  if (ozdratio) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem.oZDRatio)
}

// .Differential.HarmonicRatio oHarmnonicRatio = 5;
inline bool testItem::has_oharmnonicratio() const {
  return this != internal_default_instance() && oharmnonicratio_ != NULL;
}
inline void testItem::clear_oharmnonicratio() {
  if (GetArenaNoVirtual() == NULL && oharmnonicratio_ != NULL) delete oharmnonicratio_;
  oharmnonicratio_ = NULL;
}
inline const ::Differential::HarmonicRatio& testItem::oharmnonicratio() const {
  // @@protoc_insertion_point(field_get:Differential.testItem.oHarmnonicRatio)
  return oharmnonicratio_ != NULL ? *oharmnonicratio_
                         : *::Differential::HarmonicRatio::internal_default_instance();
}
inline ::Differential::HarmonicRatio* testItem::mutable_oharmnonicratio() {
  
  if (oharmnonicratio_ == NULL) {
    oharmnonicratio_ = new ::Differential::HarmonicRatio;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem.oHarmnonicRatio)
  return oharmnonicratio_;
}
inline ::Differential::HarmonicRatio* testItem::release_oharmnonicratio() {
  // @@protoc_insertion_point(field_release:Differential.testItem.oHarmnonicRatio)
  
  ::Differential::HarmonicRatio* temp = oharmnonicratio_;
  oharmnonicratio_ = NULL;
  return temp;
}
inline void testItem::set_allocated_oharmnonicratio(::Differential::HarmonicRatio* oharmnonicratio) {
  delete oharmnonicratio_;
  oharmnonicratio_ = oharmnonicratio;
  if (oharmnonicratio) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem.oHarmnonicRatio)
}

// -------------------------------------------------------------------

// testItem_Result

// .Differential.TestItem_type itemtype = 1;
inline void testItem_Result::clear_itemtype() {
  itemtype_ = 0;
}
inline ::Differential::TestItem_type testItem_Result::itemtype() const {
  // @@protoc_insertion_point(field_get:Differential.testItem_Result.itemtype)
  return static_cast< ::Differential::TestItem_type >(itemtype_);
}
inline void testItem_Result::set_itemtype(::Differential::TestItem_type value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.testItem_Result.itemtype)
}

// .Differential.TestItem_QDCurrent_Result oQdRes = 2;
inline bool testItem_Result::has_oqdres() const {
  return this != internal_default_instance() && oqdres_ != NULL;
}
inline void testItem_Result::clear_oqdres() {
  if (GetArenaNoVirtual() == NULL && oqdres_ != NULL) delete oqdres_;
  oqdres_ = NULL;
}
inline const ::Differential::TestItem_QDCurrent_Result& testItem_Result::oqdres() const {
  // @@protoc_insertion_point(field_get:Differential.testItem_Result.oQdRes)
  return oqdres_ != NULL ? *oqdres_
                         : *::Differential::TestItem_QDCurrent_Result::internal_default_instance();
}
inline ::Differential::TestItem_QDCurrent_Result* testItem_Result::mutable_oqdres() {
  
  if (oqdres_ == NULL) {
    oqdres_ = new ::Differential::TestItem_QDCurrent_Result;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem_Result.oQdRes)
  return oqdres_;
}
inline ::Differential::TestItem_QDCurrent_Result* testItem_Result::release_oqdres() {
  // @@protoc_insertion_point(field_release:Differential.testItem_Result.oQdRes)
  
  ::Differential::TestItem_QDCurrent_Result* temp = oqdres_;
  oqdres_ = NULL;
  return temp;
}
inline void testItem_Result::set_allocated_oqdres(::Differential::TestItem_QDCurrent_Result* oqdres) {
  delete oqdres_;
  oqdres_ = oqdres;
  if (oqdres) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem_Result.oQdRes)
}

// .Differential.TestItem_ZDRatio_Result oZdRes = 3;
inline bool testItem_Result::has_ozdres() const {
  return this != internal_default_instance() && ozdres_ != NULL;
}
inline void testItem_Result::clear_ozdres() {
  if (GetArenaNoVirtual() == NULL && ozdres_ != NULL) delete ozdres_;
  ozdres_ = NULL;
}
inline const ::Differential::TestItem_ZDRatio_Result& testItem_Result::ozdres() const {
  // @@protoc_insertion_point(field_get:Differential.testItem_Result.oZdRes)
  return ozdres_ != NULL ? *ozdres_
                         : *::Differential::TestItem_ZDRatio_Result::internal_default_instance();
}
inline ::Differential::TestItem_ZDRatio_Result* testItem_Result::mutable_ozdres() {
  
  if (ozdres_ == NULL) {
    ozdres_ = new ::Differential::TestItem_ZDRatio_Result;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem_Result.oZdRes)
  return ozdres_;
}
inline ::Differential::TestItem_ZDRatio_Result* testItem_Result::release_ozdres() {
  // @@protoc_insertion_point(field_release:Differential.testItem_Result.oZdRes)
  
  ::Differential::TestItem_ZDRatio_Result* temp = ozdres_;
  ozdres_ = NULL;
  return temp;
}
inline void testItem_Result::set_allocated_ozdres(::Differential::TestItem_ZDRatio_Result* ozdres) {
  delete ozdres_;
  ozdres_ = ozdres;
  if (ozdres) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem_Result.oZdRes)
}

// .Differential.HarmonicRatio_Result oHarmRes = 4;
inline bool testItem_Result::has_oharmres() const {
  return this != internal_default_instance() && oharmres_ != NULL;
}
inline void testItem_Result::clear_oharmres() {
  if (GetArenaNoVirtual() == NULL && oharmres_ != NULL) delete oharmres_;
  oharmres_ = NULL;
}
inline const ::Differential::HarmonicRatio_Result& testItem_Result::oharmres() const {
  // @@protoc_insertion_point(field_get:Differential.testItem_Result.oHarmRes)
  return oharmres_ != NULL ? *oharmres_
                         : *::Differential::HarmonicRatio_Result::internal_default_instance();
}
inline ::Differential::HarmonicRatio_Result* testItem_Result::mutable_oharmres() {
  
  if (oharmres_ == NULL) {
    oharmres_ = new ::Differential::HarmonicRatio_Result;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem_Result.oHarmRes)
  return oharmres_;
}
inline ::Differential::HarmonicRatio_Result* testItem_Result::release_oharmres() {
  // @@protoc_insertion_point(field_release:Differential.testItem_Result.oHarmRes)
  
  ::Differential::HarmonicRatio_Result* temp = oharmres_;
  oharmres_ = NULL;
  return temp;
}
inline void testItem_Result::set_allocated_oharmres(::Differential::HarmonicRatio_Result* oharmres) {
  delete oharmres_;
  oharmres_ = oharmres;
  if (oharmres) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem_Result.oHarmRes)
}

// .Differential.TestItem_ActionTime_Result oActionRes = 5;
inline bool testItem_Result::has_oactionres() const {
  return this != internal_default_instance() && oactionres_ != NULL;
}
inline void testItem_Result::clear_oactionres() {
  if (GetArenaNoVirtual() == NULL && oactionres_ != NULL) delete oactionres_;
  oactionres_ = NULL;
}
inline const ::Differential::TestItem_ActionTime_Result& testItem_Result::oactionres() const {
  // @@protoc_insertion_point(field_get:Differential.testItem_Result.oActionRes)
  return oactionres_ != NULL ? *oactionres_
                         : *::Differential::TestItem_ActionTime_Result::internal_default_instance();
}
inline ::Differential::TestItem_ActionTime_Result* testItem_Result::mutable_oactionres() {
  
  if (oactionres_ == NULL) {
    oactionres_ = new ::Differential::TestItem_ActionTime_Result;
  }
  // @@protoc_insertion_point(field_mutable:Differential.testItem_Result.oActionRes)
  return oactionres_;
}
inline ::Differential::TestItem_ActionTime_Result* testItem_Result::release_oactionres() {
  // @@protoc_insertion_point(field_release:Differential.testItem_Result.oActionRes)
  
  ::Differential::TestItem_ActionTime_Result* temp = oactionres_;
  oactionres_ = NULL;
  return temp;
}
inline void testItem_Result::set_allocated_oactionres(::Differential::TestItem_ActionTime_Result* oactionres) {
  delete oactionres_;
  oactionres_ = oactionres;
  if (oactionres) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.testItem_Result.oActionRes)
}

// -------------------------------------------------------------------

// Items

// .Differential.CommonPara oComm = 1;
inline bool Items::has_ocomm() const {
  return this != internal_default_instance() && ocomm_ != NULL;
}
inline void Items::clear_ocomm() {
  if (GetArenaNoVirtual() == NULL && ocomm_ != NULL) delete ocomm_;
  ocomm_ = NULL;
}
inline const ::Differential::CommonPara& Items::ocomm() const {
  // @@protoc_insertion_point(field_get:Differential.Items.oComm)
  return ocomm_ != NULL ? *ocomm_
                         : *::Differential::CommonPara::internal_default_instance();
}
inline ::Differential::CommonPara* Items::mutable_ocomm() {
  
  if (ocomm_ == NULL) {
    ocomm_ = new ::Differential::CommonPara;
  }
  // @@protoc_insertion_point(field_mutable:Differential.Items.oComm)
  return ocomm_;
}
inline ::Differential::CommonPara* Items::release_ocomm() {
  // @@protoc_insertion_point(field_release:Differential.Items.oComm)
  
  ::Differential::CommonPara* temp = ocomm_;
  ocomm_ = NULL;
  return temp;
}
inline void Items::set_allocated_ocomm(::Differential::CommonPara* ocomm) {
  delete ocomm_;
  ocomm_ = ocomm;
  if (ocomm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.Items.oComm)
}

// .Differential.SwitchPara oSwitch = 2;
inline bool Items::has_oswitch() const {
  return this != internal_default_instance() && oswitch_ != NULL;
}
inline void Items::clear_oswitch() {
  if (GetArenaNoVirtual() == NULL && oswitch_ != NULL) delete oswitch_;
  oswitch_ = NULL;
}
inline const ::Differential::SwitchPara& Items::oswitch() const {
  // @@protoc_insertion_point(field_get:Differential.Items.oSwitch)
  return oswitch_ != NULL ? *oswitch_
                         : *::Differential::SwitchPara::internal_default_instance();
}
inline ::Differential::SwitchPara* Items::mutable_oswitch() {
  
  if (oswitch_ == NULL) {
    oswitch_ = new ::Differential::SwitchPara;
  }
  // @@protoc_insertion_point(field_mutable:Differential.Items.oSwitch)
  return oswitch_;
}
inline ::Differential::SwitchPara* Items::release_oswitch() {
  // @@protoc_insertion_point(field_release:Differential.Items.oSwitch)
  
  ::Differential::SwitchPara* temp = oswitch_;
  oswitch_ = NULL;
  return temp;
}
inline void Items::set_allocated_oswitch(::Differential::SwitchPara* oswitch) {
  delete oswitch_;
  oswitch_ = oswitch;
  if (oswitch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.Items.oSwitch)
}

// .Differential.ProtectSetting oProtectSet = 3;
inline bool Items::has_oprotectset() const {
  return this != internal_default_instance() && oprotectset_ != NULL;
}
inline void Items::clear_oprotectset() {
  if (GetArenaNoVirtual() == NULL && oprotectset_ != NULL) delete oprotectset_;
  oprotectset_ = NULL;
}
inline const ::Differential::ProtectSetting& Items::oprotectset() const {
  // @@protoc_insertion_point(field_get:Differential.Items.oProtectSet)
  return oprotectset_ != NULL ? *oprotectset_
                         : *::Differential::ProtectSetting::internal_default_instance();
}
inline ::Differential::ProtectSetting* Items::mutable_oprotectset() {
  
  if (oprotectset_ == NULL) {
    oprotectset_ = new ::Differential::ProtectSetting;
  }
  // @@protoc_insertion_point(field_mutable:Differential.Items.oProtectSet)
  return oprotectset_;
}
inline ::Differential::ProtectSetting* Items::release_oprotectset() {
  // @@protoc_insertion_point(field_release:Differential.Items.oProtectSet)
  
  ::Differential::ProtectSetting* temp = oprotectset_;
  oprotectset_ = NULL;
  return temp;
}
inline void Items::set_allocated_oprotectset(::Differential::ProtectSetting* oprotectset) {
  delete oprotectset_;
  oprotectset_ = oprotectset;
  if (oprotectset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Differential.Items.oProtectSet)
}

// repeated .Differential.testItem oItems = 4;
inline int Items::oitems_size() const {
  return oitems_.size();
}
inline void Items::clear_oitems() {
  oitems_.Clear();
}
inline const ::Differential::testItem& Items::oitems(int index) const {
  // @@protoc_insertion_point(field_get:Differential.Items.oItems)
  return oitems_.Get(index);
}
inline ::Differential::testItem* Items::mutable_oitems(int index) {
  // @@protoc_insertion_point(field_mutable:Differential.Items.oItems)
  return oitems_.Mutable(index);
}
inline ::Differential::testItem* Items::add_oitems() {
  // @@protoc_insertion_point(field_add:Differential.Items.oItems)
  return oitems_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Differential::testItem >*
Items::mutable_oitems() {
  // @@protoc_insertion_point(field_mutable_list:Differential.Items.oItems)
  return &oitems_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Differential::testItem >&
Items::oitems() const {
  // @@protoc_insertion_point(field_list:Differential.Items.oItems)
  return oitems_;
}

// .Differential.OutPutType outputType = 5;
inline void Items::clear_outputtype() {
  outputtype_ = 0;
}
inline ::Differential::OutPutType Items::outputtype() const {
  // @@protoc_insertion_point(field_get:Differential.Items.outputType)
  return static_cast< ::Differential::OutPutType >(outputtype_);
}
inline void Items::set_outputtype(::Differential::OutPutType value) {
  
  outputtype_ = value;
  // @@protoc_insertion_point(field_set:Differential.Items.outputType)
}

// -------------------------------------------------------------------

// CommonPara

// float ED_V = 1;
inline void CommonPara::clear_ed_v() {
  ed_v_ = 0;
}
inline float CommonPara::ed_v() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.ED_V)
  return ed_v_;
}
inline void CommonPara::set_ed_v(float value) {
  
  ed_v_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.ED_V)
}

// float ED_I = 2;
inline void CommonPara::clear_ed_i() {
  ed_i_ = 0;
}
inline float CommonPara::ed_i() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.ED_I)
  return ed_i_;
}
inline void CommonPara::set_ed_i(float value) {
  
  ed_i_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.ED_I)
}

// float ED_Hz = 3;
inline void CommonPara::clear_ed_hz() {
  ed_hz_ = 0;
}
inline float CommonPara::ed_hz() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.ED_Hz)
  return ed_hz_;
}
inline void CommonPara::set_ed_hz(float value) {
  
  ed_hz_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.ED_Hz)
}

// float PreTime = 4;
inline void CommonPara::clear_pretime() {
  pretime_ = 0;
}
inline float CommonPara::pretime() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.PreTime)
  return pretime_;
}
inline void CommonPara::set_pretime(float value) {
  
  pretime_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.PreTime)
}

// float PrefaultTime = 5;
inline void CommonPara::clear_prefaulttime() {
  prefaulttime_ = 0;
}
inline float CommonPara::prefaulttime() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.PrefaultTime)
  return prefaulttime_;
}
inline void CommonPara::set_prefaulttime(float value) {
  
  prefaulttime_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.PrefaultTime)
}

// float FaultTime = 6;
inline void CommonPara::clear_faulttime() {
  faulttime_ = 0;
}
inline float CommonPara::faulttime() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.FaultTime)
  return faulttime_;
}
inline void CommonPara::set_faulttime(float value) {
  
  faulttime_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.FaultTime)
}

// uint32 BalanceParaCacuType = 7;
inline void CommonPara::clear_balanceparacacutype() {
  balanceparacacutype_ = 0u;
}
inline ::google::protobuf::uint32 CommonPara::balanceparacacutype() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.BalanceParaCacuType)
  return balanceparacacutype_;
}
inline void CommonPara::set_balanceparacacutype(::google::protobuf::uint32 value) {
  
  balanceparacacutype_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.BalanceParaCacuType)
}

// float SN = 8;
inline void CommonPara::clear_sn() {
  sn_ = 0;
}
inline float CommonPara::sn() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.SN)
  return sn_;
}
inline void CommonPara::set_sn(float value) {
  
  sn_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.SN)
}

// float Uh = 9;
inline void CommonPara::clear_uh() {
  uh_ = 0;
}
inline float CommonPara::uh() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Uh)
  return uh_;
}
inline void CommonPara::set_uh(float value) {
  
  uh_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Uh)
}

// float Um = 10;
inline void CommonPara::clear_um() {
  um_ = 0;
}
inline float CommonPara::um() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Um)
  return um_;
}
inline void CommonPara::set_um(float value) {
  
  um_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Um)
}

// float Ul = 11;
inline void CommonPara::clear_ul() {
  ul_ = 0;
}
inline float CommonPara::ul() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Ul)
  return ul_;
}
inline void CommonPara::set_ul(float value) {
  
  ul_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Ul)
}

// float CTPh = 12;
inline void CommonPara::clear_ctph() {
  ctph_ = 0;
}
inline float CommonPara::ctph() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTPh)
  return ctph_;
}
inline void CommonPara::set_ctph(float value) {
  
  ctph_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTPh)
}

// float CTPm = 13;
inline void CommonPara::clear_ctpm() {
  ctpm_ = 0;
}
inline float CommonPara::ctpm() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTPm)
  return ctpm_;
}
inline void CommonPara::set_ctpm(float value) {
  
  ctpm_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTPm)
}

// float CTPl = 14;
inline void CommonPara::clear_ctpl() {
  ctpl_ = 0;
}
inline float CommonPara::ctpl() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTPl)
  return ctpl_;
}
inline void CommonPara::set_ctpl(float value) {
  
  ctpl_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTPl)
}

// float CTSh = 15;
inline void CommonPara::clear_ctsh() {
  ctsh_ = 0;
}
inline float CommonPara::ctsh() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTSh)
  return ctsh_;
}
inline void CommonPara::set_ctsh(float value) {
  
  ctsh_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTSh)
}

// float CTSm = 16;
inline void CommonPara::clear_ctsm() {
  ctsm_ = 0;
}
inline float CommonPara::ctsm() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTSm)
  return ctsm_;
}
inline void CommonPara::set_ctsm(float value) {
  
  ctsm_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTSm)
}

// float CTSl = 17;
inline void CommonPara::clear_ctsl() {
  ctsl_ = 0;
}
inline float CommonPara::ctsl() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.CTSl)
  return ctsl_;
}
inline void CommonPara::set_ctsl(float value) {
  
  ctsl_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.CTSl)
}

// float Kph = 18;
inline void CommonPara::clear_kph() {
  kph_ = 0;
}
inline float CommonPara::kph() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Kph)
  return kph_;
}
inline void CommonPara::set_kph(float value) {
  
  kph_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Kph)
}

// float Kpm = 19;
inline void CommonPara::clear_kpm() {
  kpm_ = 0;
}
inline float CommonPara::kpm() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Kpm)
  return kpm_;
}
inline void CommonPara::set_kpm(float value) {
  
  kpm_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Kpm)
}

// float Kpl = 20;
inline void CommonPara::clear_kpl() {
  kpl_ = 0;
}
inline float CommonPara::kpl() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Kpl)
  return kpl_;
}
inline void CommonPara::set_kpl(float value) {
  
  kpl_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Kpl)
}

// .Differential.Connection_Type WindH = 21;
inline void CommonPara::clear_windh() {
  windh_ = 0;
}
inline ::Differential::Connection_Type CommonPara::windh() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.WindH)
  return static_cast< ::Differential::Connection_Type >(windh_);
}
inline void CommonPara::set_windh(::Differential::Connection_Type value) {
  
  windh_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.WindH)
}

// .Differential.Connection_Type WindM = 22;
inline void CommonPara::clear_windm() {
  windm_ = 0;
}
inline ::Differential::Connection_Type CommonPara::windm() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.WindM)
  return static_cast< ::Differential::Connection_Type >(windm_);
}
inline void CommonPara::set_windm(::Differential::Connection_Type value) {
  
  windm_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.WindM)
}

// .Differential.Connection_Type WindL = 23;
inline void CommonPara::clear_windl() {
  windl_ = 0;
}
inline ::Differential::Connection_Type CommonPara::windl() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.WindL)
  return static_cast< ::Differential::Connection_Type >(windl_);
}
inline void CommonPara::set_windl(::Differential::Connection_Type value) {
  
  windl_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.WindL)
}

// .Differential.Correct_Type AngleMode = 24;
inline void CommonPara::clear_anglemode() {
  anglemode_ = 0;
}
inline ::Differential::Correct_Type CommonPara::anglemode() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.AngleMode)
  return static_cast< ::Differential::Correct_Type >(anglemode_);
}
inline void CommonPara::set_anglemode(::Differential::Correct_Type value) {
  
  anglemode_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.AngleMode)
}

// .Differential.TestWind_Type WindSide = 25;
inline void CommonPara::clear_windside() {
  windside_ = 0;
}
inline ::Differential::TestWind_Type CommonPara::windside() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.WindSide)
  return static_cast< ::Differential::TestWind_Type >(windside_);
}
inline void CommonPara::set_windside(::Differential::TestWind_Type value) {
  
  windside_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.WindSide)
}

// uint32 ConnMode = 26;
inline void CommonPara::clear_connmode() {
  connmode_ = 0u;
}
inline ::google::protobuf::uint32 CommonPara::connmode() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.ConnMode)
  return connmode_;
}
inline void CommonPara::set_connmode(::google::protobuf::uint32 value) {
  
  connmode_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.ConnMode)
}

// uint32 JXFactor = 27;
inline void CommonPara::clear_jxfactor() {
  jxfactor_ = 0u;
}
inline ::google::protobuf::uint32 CommonPara::jxfactor() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.JXFactor)
  return jxfactor_;
}
inline void CommonPara::set_jxfactor(::google::protobuf::uint32 value) {
  
  jxfactor_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.JXFactor)
}

// .Differential.Search_Type SerachMode = 28;
inline void CommonPara::clear_serachmode() {
  serachmode_ = 0;
}
inline ::Differential::Search_Type CommonPara::serachmode() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.SerachMode)
  return static_cast< ::Differential::Search_Type >(serachmode_);
}
inline void CommonPara::set_serachmode(::Differential::Search_Type value) {
  
  serachmode_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.SerachMode)
}

// .Differential.CTPolar_Type IdEqu = 29;
inline void CommonPara::clear_idequ() {
  idequ_ = 0;
}
inline ::Differential::CTPolar_Type CommonPara::idequ() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.IdEqu)
  return static_cast< ::Differential::CTPolar_Type >(idequ_);
}
inline void CommonPara::set_idequ(::Differential::CTPolar_Type value) {
  
  idequ_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.IdEqu)
}

// uint32 Equation = 30;
inline void CommonPara::clear_equation() {
  equation_ = 0u;
}
inline ::google::protobuf::uint32 CommonPara::equation() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Equation)
  return equation_;
}
inline void CommonPara::set_equation(::google::protobuf::uint32 value) {
  
  equation_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Equation)
}

// float K1 = 31;
inline void CommonPara::clear_k1() {
  k1_ = 0;
}
inline float CommonPara::k1() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.K1)
  return k1_;
}
inline void CommonPara::set_k1(float value) {
  
  k1_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.K1)
}

// float K2 = 32;
inline void CommonPara::clear_k2() {
  k2_ = 0;
}
inline float CommonPara::k2() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.K2)
  return k2_;
}
inline void CommonPara::set_k2(float value) {
  
  k2_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.K2)
}

// .Differential.TestPhasor_type Phase_Type = 33;
inline void CommonPara::clear_phase_type() {
  phase_type_ = 0;
}
inline ::Differential::TestPhasor_type CommonPara::phase_type() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Phase_Type)
  return static_cast< ::Differential::TestPhasor_type >(phase_type_);
}
inline void CommonPara::set_phase_type(::Differential::TestPhasor_type value) {
  
  phase_type_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Phase_Type)
}

// float Reso = 34;
inline void CommonPara::clear_reso() {
  reso_ = 0;
}
inline float CommonPara::reso() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Reso)
  return reso_;
}
inline void CommonPara::set_reso(float value) {
  
  reso_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Reso)
}

// float Uz = 35;
inline void CommonPara::clear_uz() {
  uz_ = 0;
}
inline float CommonPara::uz() const {
  // @@protoc_insertion_point(field_get:Differential.CommonPara.Uz)
  return uz_;
}
inline void CommonPara::set_uz(float value) {
  
  uz_ = value;
  // @@protoc_insertion_point(field_set:Differential.CommonPara.Uz)
}

// -------------------------------------------------------------------

// ProtectSetting

// .Differential.SettingType Axis = 1;
inline void ProtectSetting::clear_axis() {
  axis_ = 0;
}
inline ::Differential::SettingType ProtectSetting::axis() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Axis)
  return static_cast< ::Differential::SettingType >(axis_);
}
inline void ProtectSetting::set_axis(::Differential::SettingType value) {
  
  axis_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Axis)
}

// .Differential.BaseCurrentSelect Insel = 2;
inline void ProtectSetting::clear_insel() {
  insel_ = 0;
}
inline ::Differential::BaseCurrentSelect ProtectSetting::insel() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Insel)
  return static_cast< ::Differential::BaseCurrentSelect >(insel_);
}
inline void ProtectSetting::set_insel(::Differential::BaseCurrentSelect value) {
  
  insel_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Insel)
}

// float Inom = 3;
inline void ProtectSetting::clear_inom() {
  inom_ = 0;
}
inline float ProtectSetting::inom() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Inom)
  return inom_;
}
inline void ProtectSetting::set_inom(float value) {
  
  inom_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Inom)
}

// float Isd = 4;
inline void ProtectSetting::clear_isd() {
  isd_ = 0;
}
inline float ProtectSetting::isd() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Isd)
  return isd_;
}
inline void ProtectSetting::set_isd(float value) {
  
  isd_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Isd)
}

// float Icdqd = 5;
inline void ProtectSetting::clear_icdqd() {
  icdqd_ = 0;
}
inline float ProtectSetting::icdqd() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Icdqd)
  return icdqd_;
}
inline void ProtectSetting::set_icdqd(float value) {
  
  icdqd_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Icdqd)
}

// uint32 KneePoint = 6;
inline void ProtectSetting::clear_kneepoint() {
  kneepoint_ = 0u;
}
inline ::google::protobuf::uint32 ProtectSetting::kneepoint() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.KneePoint)
  return kneepoint_;
}
inline void ProtectSetting::set_kneepoint(::google::protobuf::uint32 value) {
  
  kneepoint_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.KneePoint)
}

// float Ip1 = 7;
inline void ProtectSetting::clear_ip1() {
  ip1_ = 0;
}
inline float ProtectSetting::ip1() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Ip1)
  return ip1_;
}
inline void ProtectSetting::set_ip1(float value) {
  
  ip1_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Ip1)
}

// float Ip2 = 8;
inline void ProtectSetting::clear_ip2() {
  ip2_ = 0;
}
inline float ProtectSetting::ip2() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Ip2)
  return ip2_;
}
inline void ProtectSetting::set_ip2(float value) {
  
  ip2_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Ip2)
}

// float Ip3 = 9;
inline void ProtectSetting::clear_ip3() {
  ip3_ = 0;
}
inline float ProtectSetting::ip3() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Ip3)
  return ip3_;
}
inline void ProtectSetting::set_ip3(float value) {
  
  ip3_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Ip3)
}

// float Kid1 = 10;
inline void ProtectSetting::clear_kid1() {
  kid1_ = 0;
}
inline float ProtectSetting::kid1() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kid1)
  return kid1_;
}
inline void ProtectSetting::set_kid1(float value) {
  
  kid1_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kid1)
}

// float Kid2 = 11;
inline void ProtectSetting::clear_kid2() {
  kid2_ = 0;
}
inline float ProtectSetting::kid2() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kid2)
  return kid2_;
}
inline void ProtectSetting::set_kid2(float value) {
  
  kid2_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kid2)
}

// float Kid3 = 12;
inline void ProtectSetting::clear_kid3() {
  kid3_ = 0;
}
inline float ProtectSetting::kid3() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kid3)
  return kid3_;
}
inline void ProtectSetting::set_kid3(float value) {
  
  kid3_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kid3)
}

// float Kid4 = 13;
inline void ProtectSetting::clear_kid4() {
  kid4_ = 0;
}
inline float ProtectSetting::kid4() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kid4)
  return kid4_;
}
inline void ProtectSetting::set_kid4(float value) {
  
  kid4_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kid4)
}

// float Kxb = 14;
inline void ProtectSetting::clear_kxb() {
  kxb_ = 0;
}
inline float ProtectSetting::kxb() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kxb)
  return kxb_;
}
inline void ProtectSetting::set_kxb(float value) {
  
  kxb_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kxb)
}

// float Kxb3 = 15;
inline void ProtectSetting::clear_kxb3() {
  kxb3_ = 0;
}
inline float ProtectSetting::kxb3() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kxb3)
  return kxb3_;
}
inline void ProtectSetting::set_kxb3(float value) {
  
  kxb3_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kxb3)
}

// float Kxb5 = 16;
inline void ProtectSetting::clear_kxb5() {
  kxb5_ = 0;
}
inline float ProtectSetting::kxb5() const {
  // @@protoc_insertion_point(field_get:Differential.ProtectSetting.Kxb5)
  return kxb5_;
}
inline void ProtectSetting::set_kxb5(float value) {
  
  kxb5_ = value;
  // @@protoc_insertion_point(field_set:Differential.ProtectSetting.Kxb5)
}

// -------------------------------------------------------------------

// SwitchPara

// uint32 iKA = 1;
inline void SwitchPara::clear_ika() {
  ika_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ika() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKA)
  return ika_;
}
inline void SwitchPara::set_ika(::google::protobuf::uint32 value) {
  
  ika_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKA)
}

// uint32 iKB = 2;
inline void SwitchPara::clear_ikb() {
  ikb_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ikb() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKB)
  return ikb_;
}
inline void SwitchPara::set_ikb(::google::protobuf::uint32 value) {
  
  ikb_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKB)
}

// uint32 iKC = 3;
inline void SwitchPara::clear_ikc() {
  ikc_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ikc() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKC)
  return ikc_;
}
inline void SwitchPara::set_ikc(::google::protobuf::uint32 value) {
  
  ikc_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKC)
}

// uint32 iKD = 4;
inline void SwitchPara::clear_ikd() {
  ikd_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ikd() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKD)
  return ikd_;
}
inline void SwitchPara::set_ikd(::google::protobuf::uint32 value) {
  
  ikd_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKD)
}

// uint32 iKE = 5;
inline void SwitchPara::clear_ike() {
  ike_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ike() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKE)
  return ike_;
}
inline void SwitchPara::set_ike(::google::protobuf::uint32 value) {
  
  ike_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKE)
}

// uint32 iKF = 6;
inline void SwitchPara::clear_ikf() {
  ikf_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ikf() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKF)
  return ikf_;
}
inline void SwitchPara::set_ikf(::google::protobuf::uint32 value) {
  
  ikf_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKF)
}

// uint32 iKG = 7;
inline void SwitchPara::clear_ikg() {
  ikg_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ikg() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKG)
  return ikg_;
}
inline void SwitchPara::set_ikg(::google::protobuf::uint32 value) {
  
  ikg_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKG)
}

// uint32 iKH = 8;
inline void SwitchPara::clear_ikh() {
  ikh_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ikh() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKH)
  return ikh_;
}
inline void SwitchPara::set_ikh(::google::protobuf::uint32 value) {
  
  ikh_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKH)
}

// uint32 iKI = 9;
inline void SwitchPara::clear_iki() {
  iki_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::iki() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKI)
  return iki_;
}
inline void SwitchPara::set_iki(::google::protobuf::uint32 value) {
  
  iki_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKI)
}

// uint32 iKJ = 10;
inline void SwitchPara::clear_ikj() {
  ikj_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ikj() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iKJ)
  return ikj_;
}
inline void SwitchPara::set_ikj(::google::protobuf::uint32 value) {
  
  ikj_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iKJ)
}

// uint32 iLogic = 11;
inline void SwitchPara::clear_ilogic() {
  ilogic_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ilogic() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iLogic)
  return ilogic_;
}
inline void SwitchPara::set_ilogic(::google::protobuf::uint32 value) {
  
  ilogic_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iLogic)
}

// uint32 iOut1 = 12;
inline void SwitchPara::clear_iout1() {
  iout1_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::iout1() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut1)
  return iout1_;
}
inline void SwitchPara::set_iout1(::google::protobuf::uint32 value) {
  
  iout1_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut1)
}

// uint32 iOut2 = 13;
inline void SwitchPara::clear_iout2() {
  iout2_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::iout2() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut2)
  return iout2_;
}
inline void SwitchPara::set_iout2(::google::protobuf::uint32 value) {
  
  iout2_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut2)
}

// uint32 iOut3 = 14;
inline void SwitchPara::clear_iout3() {
  iout3_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::iout3() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut3)
  return iout3_;
}
inline void SwitchPara::set_iout3(::google::protobuf::uint32 value) {
  
  iout3_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut3)
}

// uint32 iOut4 = 15;
inline void SwitchPara::clear_iout4() {
  iout4_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::iout4() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut4)
  return iout4_;
}
inline void SwitchPara::set_iout4(::google::protobuf::uint32 value) {
  
  iout4_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut4)
}

// uint32 iOut5 = 16;
inline void SwitchPara::clear_iout5() {
  iout5_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::iout5() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut5)
  return iout5_;
}
inline void SwitchPara::set_iout5(::google::protobuf::uint32 value) {
  
  iout5_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut5)
}

// uint32 iOut6 = 17;
inline void SwitchPara::clear_iout6() {
  iout6_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::iout6() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut6)
  return iout6_;
}
inline void SwitchPara::set_iout6(::google::protobuf::uint32 value) {
  
  iout6_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut6)
}

// uint32 iOut7 = 18;
inline void SwitchPara::clear_iout7() {
  iout7_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::iout7() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut7)
  return iout7_;
}
inline void SwitchPara::set_iout7(::google::protobuf::uint32 value) {
  
  iout7_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut7)
}

// uint32 iOut8 = 19;
inline void SwitchPara::clear_iout8() {
  iout8_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::iout8() const {
  // @@protoc_insertion_point(field_get:Differential.SwitchPara.iOut8)
  return iout8_;
}
inline void SwitchPara::set_iout8(::google::protobuf::uint32 value) {
  
  iout8_ = value;
  // @@protoc_insertion_point(field_set:Differential.SwitchPara.iOut8)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Differential

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Differential::TestItem_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Differential::TestItem_type>() {
  return ::Differential::TestItem_type_descriptor();
}
template <> struct is_proto_enum< ::Differential::TestPhasor_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Differential::TestPhasor_type>() {
  return ::Differential::TestPhasor_type_descriptor();
}
template <> struct is_proto_enum< ::Differential::OutPutType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Differential::OutPutType>() {
  return ::Differential::OutPutType_descriptor();
}
template <> struct is_proto_enum< ::Differential::Kcal_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Differential::Kcal_Type>() {
  return ::Differential::Kcal_Type_descriptor();
}
template <> struct is_proto_enum< ::Differential::Connection_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Differential::Connection_Type>() {
  return ::Differential::Connection_Type_descriptor();
}
template <> struct is_proto_enum< ::Differential::Correct_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Differential::Correct_Type>() {
  return ::Differential::Correct_Type_descriptor();
}
template <> struct is_proto_enum< ::Differential::TestWind_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Differential::TestWind_Type>() {
  return ::Differential::TestWind_Type_descriptor();
}
template <> struct is_proto_enum< ::Differential::Search_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Differential::Search_Type>() {
  return ::Differential::Search_Type_descriptor();
}
template <> struct is_proto_enum< ::Differential::CTPolar_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Differential::CTPolar_Type>() {
  return ::Differential::CTPolar_Type_descriptor();
}
template <> struct is_proto_enum< ::Differential::SettingType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Differential::SettingType>() {
  return ::Differential::SettingType_descriptor();
}
template <> struct is_proto_enum< ::Differential::BaseCurrentSelect> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Differential::BaseCurrentSelect>() {
  return ::Differential::BaseCurrentSelect_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Differential_2eproto__INCLUDED
