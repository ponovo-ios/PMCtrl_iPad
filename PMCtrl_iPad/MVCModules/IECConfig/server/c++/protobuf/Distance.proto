syntax="proto3";
import "RelaySwitchOut.proto";

package Distance;
//故障类型
enum Error_type
{
  Error_A_JD = 0;//
  Error_B_JD = 1;// 
  Error_C_JD = 2;//
  Error_AB_DL = 3;//
  Error_BC_DL = 4;//
  Error_CA_DL = 5;//
  Error_AB_JDDL = 6;
  Error_BC_JDDL = 7;
  Error_CA_JDDL = 8;
  Error_ABC_DL = 9;
  Error_SINGLE_ZK = 10;
}

message chanel
{
	float famptitude = 1;//幅值
	float fphase = 2;//相位
}
message BasicResultItem
{
	chanel Va=1;
	chanel Vb=2;
	chanel Vc=3;
	chanel Ia=4;
	chanel Ib=5;
	chanel Ic=6;
}

enum Error_Dirc   //故障方向
{
  reverse = 0;  //反向
  positive = 1; //正向
}

enum Error_Nature   //故障方向
{
  instant = 0;  //瞬时
  perpetual = 1;  //永久
}

message TestItem_Distance
{
	uint32 iIndex = 1;
  Error_type errortype = 2; //故障类型
  float fdl_zk = 3;         //短路阻抗
  float fZK_Angle = 4;      //阻抗角
  float fR = 5;
	float fX = 6;
	float fDL_I = 7;          //短路电流
	float fDL_V = 8;          //短路电压
	Error_Dirc dirc = 9;      //故障方向
	Error_Nature nature = 10;  //故障性质
	float fMaxErrorTime = 11;  //最大故障时间
}

message TestItem_Distance_Result
{
	uint32 iIndex = 1;
	float fta = 2;  //跳A
	float ftb = 3;  //跳B
	float ftc = 4;  //跳C
	float fchz = 5; //重合闸
	float fhjs = 6; //后加速
	float frta = 7; //A相保持时间
	float frtb = 8; //B相保持时间
	float frtc = 9; //C相保持时间
	float frtd = 10; //重合闸保持时间
}

message TestItem_Distance_Switch_State
{
	uint32 nibinstate=1; //开入量

}
enum OutPutType	//输出类型
{
        analog_type = 0;//模拟量类型
        digital_type =1;//数字量类型
        analog_digital_type = 2;//数字量+模拟量
}

message Items
{
	CommonPara oComm = 1;  //通用参数
        RelaySwitchOut.SwitchPara oSwitch = 2; //开关量参数
	MarkPara oMarkSet = 3;  //整定值参数
	
	repeated TestItem_Distance oItems = 4;    //下发的实验参数列表
        OutPutType outputType = 5;//输出类型
}

//KoMode 零序补偿系数计算方式
enum KoMode
{
  K0 = 0;
  RERL = 1;
  Z0 = 2;
}

//整定值参数
message MarkPara
{
	float  fJd_Dis1_Val = 1;
	float  fJd_Dis2_Val = 2;
	float  fJd_Dis3_Val = 3;
	float  fJd_Dis4_Val = 4;
	float  fJd_Dis5_Val = 5;

	float  fXj_Dis1_Val = 6;
	float  fXj_Dis2_Val = 7;
	float  fXj_Dis3_Val = 8;
	float  fXj_Dis4_Val = 9;
	float  fXj_Dis5_Val = 10;

	float  fJd_Dis1_Time = 11;
	float  fJd_Dis2_Time = 12;
	float  fJd_Dis3_Time = 13;
	float  fJd_Dis4_Time = 14;
	float  fJd_Dis5_Time = 15;

	float  fXj_Dis1_Time = 16;
	float  fXj_Dis2_Time = 17;
	float  fXj_Dis3_Time = 18;
	float  fXj_Dis4_Time = 19;
	float  fXj_Dis5_Time = 20;

	KoMode Emode = 21;  
	float fKoOrRe = 22;
	float fPhiOrIm = 23;
}

//故障触发方式
enum FaultTrigeMode
{
  TIME = 0;
  KEY = 1;
  H = 2;
  GPS = 3;
}
//TV安装位置 
enum PTCON
{
   BUS = 0;
   LINE  = 1;
}
//TA正极性
enum CTPOINT
{
	POINT_BUS = 0;
	POINT_LINE = 1;
}

//断路器是否模拟
enum BCSIMULATION
{
	NO = 0;
	YES = 1;

}

//阻抗表示方式
enum RXS
{
	Z = 0;
	RX = 1;
}

//Uz输出定义
enum VZDEFINE
{
	ZERO = 0;
	Z3X3VO = 1;
	F3X3VO = 2;
	Z3VO = 3;
	F3VO = 4;
	PHDEFINE = 5;
}

//Uz参考相定义
enum VZPHDEFINE
{
	VA_PHASE = 0;
	VB_PHASE = 1;
	VC_PHASE = 2;
	VAB_PHASE = 3;
	VBC_PHASE = 4;
	VCA_PHASE = 5;
}


//通用参数
message CommonPara
{
	float EDV = 1;  //额定线电压
	float EDI = 2;  //额定电流
	float EDHZ = 3;  //额定频率
	float PreFaultTime = 4;//故障前时间
	float PostFaultTime = 5; 
	FaultTrigeMode eFaultTrigMode = 6;//
	PTCON ePTCON = 7;
	CTPOINT eCTPOINT = 8;//
	BCSIMULATION eBCSIMULATION = 9;//
	float TripTime = 10;//
	float CloseTime = 11;//
	RXS eRXS = 12;//
	VZDEFINE eVZDEFINE  = 13;//
	VZPHDEFINE eVZPHDEFINE  = 14;//
	float VzPhdiff = 15;//
	float GpsTime = 16;//
	uint32 SwitchChanel = 17;
}

