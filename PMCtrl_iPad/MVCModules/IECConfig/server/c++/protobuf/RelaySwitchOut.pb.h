// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RelaySwitchOut.proto

#ifndef PROTOBUF_RelaySwitchOut_2eproto__INCLUDED
#define PROTOBUF_RelaySwitchOut_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace RelaySwitchOut {
class SwitchPara;
class SwitchParaDefaultTypeInternal;
extern SwitchParaDefaultTypeInternal _SwitchPara_default_instance_;
class TRIPMAP;
class TRIPMAPDefaultTypeInternal;
extern TRIPMAPDefaultTypeInternal _TRIPMAP_default_instance_;
}  // namespace RelaySwitchOut

namespace RelaySwitchOut {

namespace protobuf_RelaySwitchOut_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_RelaySwitchOut_2eproto

// ===================================================================

class TRIPMAP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RelaySwitchOut.TRIPMAP) */ {
 public:
  TRIPMAP();
  virtual ~TRIPMAP();

  TRIPMAP(const TRIPMAP& from);

  inline TRIPMAP& operator=(const TRIPMAP& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TRIPMAP& default_instance();

  static inline const TRIPMAP* internal_default_instance() {
    return reinterpret_cast<const TRIPMAP*>(
               &_TRIPMAP_default_instance_);
  }

  void Swap(TRIPMAP* other);

  // implements Message ----------------------------------------------

  inline TRIPMAP* New() const PROTOBUF_FINAL { return New(NULL); }

  TRIPMAP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TRIPMAP& from);
  void MergeFrom(const TRIPMAP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TRIPMAP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 IK = 1;
  void clear_ik();
  static const int kIKFieldNumber = 1;
  ::google::protobuf::uint32 ik() const;
  void set_ik(::google::protobuf::uint32 value);

  // uint32 TripABC = 2;
  void clear_tripabc();
  static const int kTripABCFieldNumber = 2;
  ::google::protobuf::uint32 tripabc() const;
  void set_tripabc(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RelaySwitchOut.TRIPMAP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ik_;
  ::google::protobuf::uint32 tripabc_;
  mutable int _cached_size_;
  friend struct  protobuf_RelaySwitchOut_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SwitchPara : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RelaySwitchOut.SwitchPara) */ {
 public:
  SwitchPara();
  virtual ~SwitchPara();

  SwitchPara(const SwitchPara& from);

  inline SwitchPara& operator=(const SwitchPara& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchPara& default_instance();

  static inline const SwitchPara* internal_default_instance() {
    return reinterpret_cast<const SwitchPara*>(
               &_SwitchPara_default_instance_);
  }

  void Swap(SwitchPara* other);

  // implements Message ----------------------------------------------

  inline SwitchPara* New() const PROTOBUF_FINAL { return New(NULL); }

  SwitchPara* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SwitchPara& from);
  void MergeFrom(const SwitchPara& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SwitchPara* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RelaySwitchOut.TRIPMAP iTripBuf = 1;
  int itripbuf_size() const;
  void clear_itripbuf();
  static const int kITripBufFieldNumber = 1;
  const ::RelaySwitchOut::TRIPMAP& itripbuf(int index) const;
  ::RelaySwitchOut::TRIPMAP* mutable_itripbuf(int index);
  ::RelaySwitchOut::TRIPMAP* add_itripbuf();
  ::google::protobuf::RepeatedPtrField< ::RelaySwitchOut::TRIPMAP >*
      mutable_itripbuf();
  const ::google::protobuf::RepeatedPtrField< ::RelaySwitchOut::TRIPMAP >&
      itripbuf() const;

  // repeated uint32 iKOutput = 2;
  int ikoutput_size() const;
  void clear_ikoutput();
  static const int kIKOutputFieldNumber = 2;
  ::google::protobuf::uint32 ikoutput(int index) const;
  void set_ikoutput(int index, ::google::protobuf::uint32 value);
  void add_ikoutput(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ikoutput() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ikoutput();

  // uint32 iOutMode = 3;
  void clear_ioutmode();
  static const int kIOutModeFieldNumber = 3;
  ::google::protobuf::uint32 ioutmode() const;
  void set_ioutmode(::google::protobuf::uint32 value);

  // float fTurnTime = 4;
  void clear_fturntime();
  static const int kFTurnTimeFieldNumber = 4;
  float fturntime() const;
  void set_fturntime(float value);

  // float fHoldTime = 5;
  void clear_fholdtime();
  static const int kFHoldTimeFieldNumber = 5;
  float fholdtime() const;
  void set_fholdtime(float value);

  // @@protoc_insertion_point(class_scope:RelaySwitchOut.SwitchPara)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::RelaySwitchOut::TRIPMAP > itripbuf_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ikoutput_;
  mutable int _ikoutput_cached_byte_size_;
  ::google::protobuf::uint32 ioutmode_;
  float fturntime_;
  float fholdtime_;
  mutable int _cached_size_;
  friend struct  protobuf_RelaySwitchOut_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TRIPMAP

// uint32 IK = 1;
inline void TRIPMAP::clear_ik() {
  ik_ = 0u;
}
inline ::google::protobuf::uint32 TRIPMAP::ik() const {
  // @@protoc_insertion_point(field_get:RelaySwitchOut.TRIPMAP.IK)
  return ik_;
}
inline void TRIPMAP::set_ik(::google::protobuf::uint32 value) {
  
  ik_ = value;
  // @@protoc_insertion_point(field_set:RelaySwitchOut.TRIPMAP.IK)
}

// uint32 TripABC = 2;
inline void TRIPMAP::clear_tripabc() {
  tripabc_ = 0u;
}
inline ::google::protobuf::uint32 TRIPMAP::tripabc() const {
  // @@protoc_insertion_point(field_get:RelaySwitchOut.TRIPMAP.TripABC)
  return tripabc_;
}
inline void TRIPMAP::set_tripabc(::google::protobuf::uint32 value) {
  
  tripabc_ = value;
  // @@protoc_insertion_point(field_set:RelaySwitchOut.TRIPMAP.TripABC)
}

// -------------------------------------------------------------------

// SwitchPara

// repeated .RelaySwitchOut.TRIPMAP iTripBuf = 1;
inline int SwitchPara::itripbuf_size() const {
  return itripbuf_.size();
}
inline void SwitchPara::clear_itripbuf() {
  itripbuf_.Clear();
}
inline const ::RelaySwitchOut::TRIPMAP& SwitchPara::itripbuf(int index) const {
  // @@protoc_insertion_point(field_get:RelaySwitchOut.SwitchPara.iTripBuf)
  return itripbuf_.Get(index);
}
inline ::RelaySwitchOut::TRIPMAP* SwitchPara::mutable_itripbuf(int index) {
  // @@protoc_insertion_point(field_mutable:RelaySwitchOut.SwitchPara.iTripBuf)
  return itripbuf_.Mutable(index);
}
inline ::RelaySwitchOut::TRIPMAP* SwitchPara::add_itripbuf() {
  // @@protoc_insertion_point(field_add:RelaySwitchOut.SwitchPara.iTripBuf)
  return itripbuf_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RelaySwitchOut::TRIPMAP >*
SwitchPara::mutable_itripbuf() {
  // @@protoc_insertion_point(field_mutable_list:RelaySwitchOut.SwitchPara.iTripBuf)
  return &itripbuf_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RelaySwitchOut::TRIPMAP >&
SwitchPara::itripbuf() const {
  // @@protoc_insertion_point(field_list:RelaySwitchOut.SwitchPara.iTripBuf)
  return itripbuf_;
}

// repeated uint32 iKOutput = 2;
inline int SwitchPara::ikoutput_size() const {
  return ikoutput_.size();
}
inline void SwitchPara::clear_ikoutput() {
  ikoutput_.Clear();
}
inline ::google::protobuf::uint32 SwitchPara::ikoutput(int index) const {
  // @@protoc_insertion_point(field_get:RelaySwitchOut.SwitchPara.iKOutput)
  return ikoutput_.Get(index);
}
inline void SwitchPara::set_ikoutput(int index, ::google::protobuf::uint32 value) {
  ikoutput_.Set(index, value);
  // @@protoc_insertion_point(field_set:RelaySwitchOut.SwitchPara.iKOutput)
}
inline void SwitchPara::add_ikoutput(::google::protobuf::uint32 value) {
  ikoutput_.Add(value);
  // @@protoc_insertion_point(field_add:RelaySwitchOut.SwitchPara.iKOutput)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SwitchPara::ikoutput() const {
  // @@protoc_insertion_point(field_list:RelaySwitchOut.SwitchPara.iKOutput)
  return ikoutput_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SwitchPara::mutable_ikoutput() {
  // @@protoc_insertion_point(field_mutable_list:RelaySwitchOut.SwitchPara.iKOutput)
  return &ikoutput_;
}

// uint32 iOutMode = 3;
inline void SwitchPara::clear_ioutmode() {
  ioutmode_ = 0u;
}
inline ::google::protobuf::uint32 SwitchPara::ioutmode() const {
  // @@protoc_insertion_point(field_get:RelaySwitchOut.SwitchPara.iOutMode)
  return ioutmode_;
}
inline void SwitchPara::set_ioutmode(::google::protobuf::uint32 value) {
  
  ioutmode_ = value;
  // @@protoc_insertion_point(field_set:RelaySwitchOut.SwitchPara.iOutMode)
}

// float fTurnTime = 4;
inline void SwitchPara::clear_fturntime() {
  fturntime_ = 0;
}
inline float SwitchPara::fturntime() const {
  // @@protoc_insertion_point(field_get:RelaySwitchOut.SwitchPara.fTurnTime)
  return fturntime_;
}
inline void SwitchPara::set_fturntime(float value) {
  
  fturntime_ = value;
  // @@protoc_insertion_point(field_set:RelaySwitchOut.SwitchPara.fTurnTime)
}

// float fHoldTime = 5;
inline void SwitchPara::clear_fholdtime() {
  fholdtime_ = 0;
}
inline float SwitchPara::fholdtime() const {
  // @@protoc_insertion_point(field_get:RelaySwitchOut.SwitchPara.fHoldTime)
  return fholdtime_;
}
inline void SwitchPara::set_fholdtime(float value) {
  
  fholdtime_ = value;
  // @@protoc_insertion_point(field_set:RelaySwitchOut.SwitchPara.fHoldTime)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace RelaySwitchOut

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RelaySwitchOut_2eproto__INCLUDED
