// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hqyDeviceConfig.proto

#ifndef PROTOBUF_hqyDeviceConfig_2eproto__INCLUDED
#define PROTOBUF_hqyDeviceConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "CompensationPara.pb.h"
// @@protoc_insertion_point(includes)
namespace Compensation {
class ChanelCompensation;
class ChanelCompensationDefaultTypeInternal;
extern ChanelCompensationDefaultTypeInternal _ChanelCompensation_default_instance_;
class CompensationItem;
class CompensationItemDefaultTypeInternal;
extern CompensationItemDefaultTypeInternal _CompensationItem_default_instance_;
class module;
class moduleDefaultTypeInternal;
extern moduleDefaultTypeInternal _module_default_instance_;
class modules;
class modulesDefaultTypeInternal;
extern modulesDefaultTypeInternal _modules_default_instance_;
}  // namespace Compensation
namespace hqyDeviceConfig {
class analogmap;
class analogmapDefaultTypeInternal;
extern analogmapDefaultTypeInternal _analogmap_default_instance_;
class device;
class deviceDefaultTypeInternal;
extern deviceDefaultTypeInternal _device_default_instance_;
class devicechaneldesc;
class devicechaneldescDefaultTypeInternal;
extern devicechaneldescDefaultTypeInternal _devicechaneldesc_default_instance_;
class range;
class rangeDefaultTypeInternal;
extern rangeDefaultTypeInternal _range_default_instance_;
}  // namespace hqyDeviceConfig

namespace hqyDeviceConfig {

namespace protobuf_hqyDeviceConfig_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_hqyDeviceConfig_2eproto

// ===================================================================

class device : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hqyDeviceConfig.device) */ {
 public:
  device();
  virtual ~device();

  device(const device& from);

  inline device& operator=(const device& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const device& default_instance();

  static inline const device* internal_default_instance() {
    return reinterpret_cast<const device*>(
               &_device_default_instance_);
  }

  void Swap(device* other);

  // implements Message ----------------------------------------------

  inline device* New() const PROTOBUF_FINAL { return New(NULL); }

  device* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const device& from);
  void MergeFrom(const device& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(device* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .hqyDeviceConfig.devicechaneldesc ochaneldesc = 1;
  bool has_ochaneldesc() const;
  void clear_ochaneldesc();
  static const int kOchaneldescFieldNumber = 1;
  const ::hqyDeviceConfig::devicechaneldesc& ochaneldesc() const;
  ::hqyDeviceConfig::devicechaneldesc* mutable_ochaneldesc();
  ::hqyDeviceConfig::devicechaneldesc* release_ochaneldesc();
  void set_allocated_ochaneldesc(::hqyDeviceConfig::devicechaneldesc* ochaneldesc);

  // .hqyDeviceConfig.analogmap omapcurrent = 2;
  bool has_omapcurrent() const;
  void clear_omapcurrent();
  static const int kOmapcurrentFieldNumber = 2;
  const ::hqyDeviceConfig::analogmap& omapcurrent() const;
  ::hqyDeviceConfig::analogmap* mutable_omapcurrent();
  ::hqyDeviceConfig::analogmap* release_omapcurrent();
  void set_allocated_omapcurrent(::hqyDeviceConfig::analogmap* omapcurrent);

  // .hqyDeviceConfig.analogmap omapvolt = 3;
  bool has_omapvolt() const;
  void clear_omapvolt();
  static const int kOmapvoltFieldNumber = 3;
  const ::hqyDeviceConfig::analogmap& omapvolt() const;
  ::hqyDeviceConfig::analogmap* mutable_omapvolt();
  ::hqyDeviceConfig::analogmap* release_omapvolt();
  void set_allocated_omapvolt(::hqyDeviceConfig::analogmap* omapvolt);

  // .Compensation.modules ocompensationmngr = 4;
  bool has_ocompensationmngr() const;
  void clear_ocompensationmngr();
  static const int kOcompensationmngrFieldNumber = 4;
  const ::Compensation::modules& ocompensationmngr() const;
  ::Compensation::modules* mutable_ocompensationmngr();
  ::Compensation::modules* release_ocompensationmngr();
  void set_allocated_ocompensationmngr(::Compensation::modules* ocompensationmngr);

  // @@protoc_insertion_point(class_scope:hqyDeviceConfig.device)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::hqyDeviceConfig::devicechaneldesc* ochaneldesc_;
  ::hqyDeviceConfig::analogmap* omapcurrent_;
  ::hqyDeviceConfig::analogmap* omapvolt_;
  ::Compensation::modules* ocompensationmngr_;
  mutable int _cached_size_;
  friend struct  protobuf_hqyDeviceConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class devicechaneldesc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hqyDeviceConfig.devicechaneldesc) */ {
 public:
  devicechaneldesc();
  virtual ~devicechaneldesc();

  devicechaneldesc(const devicechaneldesc& from);

  inline devicechaneldesc& operator=(const devicechaneldesc& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const devicechaneldesc& default_instance();

  static inline const devicechaneldesc* internal_default_instance() {
    return reinterpret_cast<const devicechaneldesc*>(
               &_devicechaneldesc_default_instance_);
  }

  void Swap(devicechaneldesc* other);

  // implements Message ----------------------------------------------

  inline devicechaneldesc* New() const PROTOBUF_FINAL { return New(NULL); }

  devicechaneldesc* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const devicechaneldesc& from);
  void MergeFrom(const devicechaneldesc& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(devicechaneldesc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 nAnalogVoltModuleChanleCount = 22;
  int nanalogvoltmodulechanlecount_size() const;
  void clear_nanalogvoltmodulechanlecount();
  static const int kNAnalogVoltModuleChanleCountFieldNumber = 22;
  ::google::protobuf::uint32 nanalogvoltmodulechanlecount(int index) const;
  void set_nanalogvoltmodulechanlecount(int index, ::google::protobuf::uint32 value);
  void add_nanalogvoltmodulechanlecount(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      nanalogvoltmodulechanlecount() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_nanalogvoltmodulechanlecount();

  // repeated uint32 nAnalogCurrentModuleChanleCount = 25;
  int nanalogcurrentmodulechanlecount_size() const;
  void clear_nanalogcurrentmodulechanlecount();
  static const int kNAnalogCurrentModuleChanleCountFieldNumber = 25;
  ::google::protobuf::uint32 nanalogcurrentmodulechanlecount(int index) const;
  void set_nanalogcurrentmodulechanlecount(int index, ::google::protobuf::uint32 value);
  void add_nanalogcurrentmodulechanlecount(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      nanalogcurrentmodulechanlecount() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_nanalogcurrentmodulechanlecount();

  // uint32 smvmaxgroupnum = 1;
  void clear_smvmaxgroupnum();
  static const int kSmvmaxgroupnumFieldNumber = 1;
  ::google::protobuf::uint32 smvmaxgroupnum() const;
  void set_smvmaxgroupnum(::google::protobuf::uint32 value);

  // uint32 goosepubmaxgroupnum = 2;
  void clear_goosepubmaxgroupnum();
  static const int kGoosepubmaxgroupnumFieldNumber = 2;
  ::google::protobuf::uint32 goosepubmaxgroupnum() const;
  void set_goosepubmaxgroupnum(::google::protobuf::uint32 value);

  // uint32 gooseinmaxgroupnum = 3;
  void clear_gooseinmaxgroupnum();
  static const int kGooseinmaxgroupnumFieldNumber = 3;
  ::google::protobuf::uint32 gooseinmaxgroupnum() const;
  void set_gooseinmaxgroupnum(::google::protobuf::uint32 value);

  // uint32 analogvoltmaxchanel = 4;
  void clear_analogvoltmaxchanel();
  static const int kAnalogvoltmaxchanelFieldNumber = 4;
  ::google::protobuf::uint32 analogvoltmaxchanel() const;
  void set_analogvoltmaxchanel(::google::protobuf::uint32 value);

  // uint32 analogcurrentmaxchanel = 5;
  void clear_analogcurrentmaxchanel();
  static const int kAnalogcurrentmaxchanelFieldNumber = 5;
  ::google::protobuf::uint32 analogcurrentmaxchanel() const;
  void set_analogcurrentmaxchanel(::google::protobuf::uint32 value);

  // float ffremax = 6;
  void clear_ffremax();
  static const int kFfremaxFieldNumber = 6;
  float ffremax() const;
  void set_ffremax(float value);

  // float fanalogVoltmax = 7;
  void clear_fanalogvoltmax();
  static const int kFanalogVoltmaxFieldNumber = 7;
  float fanalogvoltmax() const;
  void set_fanalogvoltmax(float value);

  // float fanalogcurrentmax = 8;
  void clear_fanalogcurrentmax();
  static const int kFanalogcurrentmaxFieldNumber = 8;
  float fanalogcurrentmax() const;
  void set_fanalogcurrentmax(float value);

  // float fudcmax = 10;
  void clear_fudcmax();
  static const int kFudcmaxFieldNumber = 10;
  float fudcmax() const;
  void set_fudcmax(float value);

  // float fidcmax = 12;
  void clear_fidcmax();
  static const int kFidcmaxFieldNumber = 12;
  float fidcmax() const;
  void set_fidcmax(float value);

  // bool ishasudc = 9;
  void clear_ishasudc();
  static const int kIshasudcFieldNumber = 9;
  bool ishasudc() const;
  void set_ishasudc(bool value);

  // bool ishasidc = 11;
  void clear_ishasidc();
  static const int kIshasidcFieldNumber = 11;
  bool ishasidc() const;
  void set_ishasidc(bool value);

  // bool ishasDigitalout = 15;
  void clear_ishasdigitalout();
  static const int kIshasDigitaloutFieldNumber = 15;
  bool ishasdigitalout() const;
  void set_ishasdigitalout(bool value);

  // bool ishasvoltanalogout = 16;
  void clear_ishasvoltanalogout();
  static const int kIshasvoltanalogoutFieldNumber = 16;
  bool ishasvoltanalogout() const;
  void set_ishasvoltanalogout(bool value);

  // uint32 nbimaxnum = 13;
  void clear_nbimaxnum();
  static const int kNbimaxnumFieldNumber = 13;
  ::google::protobuf::uint32 nbimaxnum() const;
  void set_nbimaxnum(::google::protobuf::uint32 value);

  // uint32 nbomaxnum = 14;
  void clear_nbomaxnum();
  static const int kNbomaxnumFieldNumber = 14;
  ::google::protobuf::uint32 nbomaxnum() const;
  void set_nbomaxnum(::google::protobuf::uint32 value);

  // bool ishascuranalogout = 17;
  void clear_ishascuranalogout();
  static const int kIshascuranalogoutFieldNumber = 17;
  bool ishascuranalogout() const;
  void set_ishascuranalogout(bool value);

  // uint32 nDigitalmodulenum = 18;
  void clear_ndigitalmodulenum();
  static const int kNDigitalmodulenumFieldNumber = 18;
  ::google::protobuf::uint32 ndigitalmodulenum() const;
  void set_ndigitalmodulenum(::google::protobuf::uint32 value);

  // uint32 nDigitalmodulePortNum = 19;
  void clear_ndigitalmoduleportnum();
  static const int kNDigitalmodulePortNumFieldNumber = 19;
  ::google::protobuf::uint32 ndigitalmoduleportnum() const;
  void set_ndigitalmoduleportnum(::google::protobuf::uint32 value);

  // uint32 nAnalogVoltModuleCount = 20;
  void clear_nanalogvoltmodulecount();
  static const int kNAnalogVoltModuleCountFieldNumber = 20;
  ::google::protobuf::uint32 nanalogvoltmodulecount() const;
  void set_nanalogvoltmodulecount(::google::protobuf::uint32 value);

  // uint32 nAnalogVoltModuleBeginNum = 21;
  void clear_nanalogvoltmodulebeginnum();
  static const int kNAnalogVoltModuleBeginNumFieldNumber = 21;
  ::google::protobuf::uint32 nanalogvoltmodulebeginnum() const;
  void set_nanalogvoltmodulebeginnum(::google::protobuf::uint32 value);

  // uint32 nAnalogCurrentModuleCount = 23;
  void clear_nanalogcurrentmodulecount();
  static const int kNAnalogCurrentModuleCountFieldNumber = 23;
  ::google::protobuf::uint32 nanalogcurrentmodulecount() const;
  void set_nanalogcurrentmodulecount(::google::protobuf::uint32 value);

  // uint32 nAnalogCurrentModuleBeginNum = 24;
  void clear_nanalogcurrentmodulebeginnum();
  static const int kNAnalogCurrentModuleBeginNumFieldNumber = 24;
  ::google::protobuf::uint32 nanalogcurrentmodulebeginnum() const;
  void set_nanalogcurrentmodulebeginnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:hqyDeviceConfig.devicechaneldesc)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > nanalogvoltmodulechanlecount_;
  mutable int _nanalogvoltmodulechanlecount_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > nanalogcurrentmodulechanlecount_;
  mutable int _nanalogcurrentmodulechanlecount_cached_byte_size_;
  ::google::protobuf::uint32 smvmaxgroupnum_;
  ::google::protobuf::uint32 goosepubmaxgroupnum_;
  ::google::protobuf::uint32 gooseinmaxgroupnum_;
  ::google::protobuf::uint32 analogvoltmaxchanel_;
  ::google::protobuf::uint32 analogcurrentmaxchanel_;
  float ffremax_;
  float fanalogvoltmax_;
  float fanalogcurrentmax_;
  float fudcmax_;
  float fidcmax_;
  bool ishasudc_;
  bool ishasidc_;
  bool ishasdigitalout_;
  bool ishasvoltanalogout_;
  ::google::protobuf::uint32 nbimaxnum_;
  ::google::protobuf::uint32 nbomaxnum_;
  bool ishascuranalogout_;
  ::google::protobuf::uint32 ndigitalmodulenum_;
  ::google::protobuf::uint32 ndigitalmoduleportnum_;
  ::google::protobuf::uint32 nanalogvoltmodulecount_;
  ::google::protobuf::uint32 nanalogvoltmodulebeginnum_;
  ::google::protobuf::uint32 nanalogcurrentmodulecount_;
  ::google::protobuf::uint32 nanalogcurrentmodulebeginnum_;
  mutable int _cached_size_;
  friend struct  protobuf_hqyDeviceConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class range : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hqyDeviceConfig.range) */ {
 public:
  range();
  virtual ~range();

  range(const range& from);

  inline range& operator=(const range& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const range& default_instance();

  static inline const range* internal_default_instance() {
    return reinterpret_cast<const range*>(
               &_range_default_instance_);
  }

  void Swap(range* other);

  // implements Message ----------------------------------------------

  inline range* New() const PROTOBUF_FINAL { return New(NULL); }

  range* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const range& from);
  void MergeFrom(const range& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(range* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float fmin = 1;
  void clear_fmin();
  static const int kFminFieldNumber = 1;
  float fmin() const;
  void set_fmin(float value);

  // float fmax = 2;
  void clear_fmax();
  static const int kFmaxFieldNumber = 2;
  float fmax() const;
  void set_fmax(float value);

  // @@protoc_insertion_point(class_scope:hqyDeviceConfig.range)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float fmin_;
  float fmax_;
  mutable int _cached_size_;
  friend struct  protobuf_hqyDeviceConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class analogmap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hqyDeviceConfig.analogmap) */ {
 public:
  analogmap();
  virtual ~analogmap();

  analogmap(const analogmap& from);

  inline analogmap& operator=(const analogmap& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const analogmap& default_instance();

  static inline const analogmap* internal_default_instance() {
    return reinterpret_cast<const analogmap*>(
               &_analogmap_default_instance_);
  }

  void Swap(analogmap* other);

  // implements Message ----------------------------------------------

  inline analogmap* New() const PROTOBUF_FINAL { return New(NULL); }

  analogmap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const analogmap& from);
  void MergeFrom(const analogmap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(analogmap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ndevicechanel = 1;
  int ndevicechanel_size() const;
  void clear_ndevicechanel();
  static const int kNdevicechanelFieldNumber = 1;
  ::google::protobuf::uint32 ndevicechanel(int index) const;
  void set_ndevicechanel(int index, ::google::protobuf::uint32 value);
  void add_ndevicechanel(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ndevicechanel() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ndevicechanel();

  // @@protoc_insertion_point(class_scope:hqyDeviceConfig.analogmap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ndevicechanel_;
  mutable int _ndevicechanel_cached_byte_size_;
  mutable int _cached_size_;
  friend struct  protobuf_hqyDeviceConfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// device

// .hqyDeviceConfig.devicechaneldesc ochaneldesc = 1;
inline bool device::has_ochaneldesc() const {
  return this != internal_default_instance() && ochaneldesc_ != NULL;
}
inline void device::clear_ochaneldesc() {
  if (GetArenaNoVirtual() == NULL && ochaneldesc_ != NULL) delete ochaneldesc_;
  ochaneldesc_ = NULL;
}
inline const ::hqyDeviceConfig::devicechaneldesc& device::ochaneldesc() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.device.ochaneldesc)
  return ochaneldesc_ != NULL ? *ochaneldesc_
                         : *::hqyDeviceConfig::devicechaneldesc::internal_default_instance();
}
inline ::hqyDeviceConfig::devicechaneldesc* device::mutable_ochaneldesc() {
  
  if (ochaneldesc_ == NULL) {
    ochaneldesc_ = new ::hqyDeviceConfig::devicechaneldesc;
  }
  // @@protoc_insertion_point(field_mutable:hqyDeviceConfig.device.ochaneldesc)
  return ochaneldesc_;
}
inline ::hqyDeviceConfig::devicechaneldesc* device::release_ochaneldesc() {
  // @@protoc_insertion_point(field_release:hqyDeviceConfig.device.ochaneldesc)
  
  ::hqyDeviceConfig::devicechaneldesc* temp = ochaneldesc_;
  ochaneldesc_ = NULL;
  return temp;
}
inline void device::set_allocated_ochaneldesc(::hqyDeviceConfig::devicechaneldesc* ochaneldesc) {
  delete ochaneldesc_;
  ochaneldesc_ = ochaneldesc;
  if (ochaneldesc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyDeviceConfig.device.ochaneldesc)
}

// .hqyDeviceConfig.analogmap omapcurrent = 2;
inline bool device::has_omapcurrent() const {
  return this != internal_default_instance() && omapcurrent_ != NULL;
}
inline void device::clear_omapcurrent() {
  if (GetArenaNoVirtual() == NULL && omapcurrent_ != NULL) delete omapcurrent_;
  omapcurrent_ = NULL;
}
inline const ::hqyDeviceConfig::analogmap& device::omapcurrent() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.device.omapcurrent)
  return omapcurrent_ != NULL ? *omapcurrent_
                         : *::hqyDeviceConfig::analogmap::internal_default_instance();
}
inline ::hqyDeviceConfig::analogmap* device::mutable_omapcurrent() {
  
  if (omapcurrent_ == NULL) {
    omapcurrent_ = new ::hqyDeviceConfig::analogmap;
  }
  // @@protoc_insertion_point(field_mutable:hqyDeviceConfig.device.omapcurrent)
  return omapcurrent_;
}
inline ::hqyDeviceConfig::analogmap* device::release_omapcurrent() {
  // @@protoc_insertion_point(field_release:hqyDeviceConfig.device.omapcurrent)
  
  ::hqyDeviceConfig::analogmap* temp = omapcurrent_;
  omapcurrent_ = NULL;
  return temp;
}
inline void device::set_allocated_omapcurrent(::hqyDeviceConfig::analogmap* omapcurrent) {
  delete omapcurrent_;
  omapcurrent_ = omapcurrent;
  if (omapcurrent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyDeviceConfig.device.omapcurrent)
}

// .hqyDeviceConfig.analogmap omapvolt = 3;
inline bool device::has_omapvolt() const {
  return this != internal_default_instance() && omapvolt_ != NULL;
}
inline void device::clear_omapvolt() {
  if (GetArenaNoVirtual() == NULL && omapvolt_ != NULL) delete omapvolt_;
  omapvolt_ = NULL;
}
inline const ::hqyDeviceConfig::analogmap& device::omapvolt() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.device.omapvolt)
  return omapvolt_ != NULL ? *omapvolt_
                         : *::hqyDeviceConfig::analogmap::internal_default_instance();
}
inline ::hqyDeviceConfig::analogmap* device::mutable_omapvolt() {
  
  if (omapvolt_ == NULL) {
    omapvolt_ = new ::hqyDeviceConfig::analogmap;
  }
  // @@protoc_insertion_point(field_mutable:hqyDeviceConfig.device.omapvolt)
  return omapvolt_;
}
inline ::hqyDeviceConfig::analogmap* device::release_omapvolt() {
  // @@protoc_insertion_point(field_release:hqyDeviceConfig.device.omapvolt)
  
  ::hqyDeviceConfig::analogmap* temp = omapvolt_;
  omapvolt_ = NULL;
  return temp;
}
inline void device::set_allocated_omapvolt(::hqyDeviceConfig::analogmap* omapvolt) {
  delete omapvolt_;
  omapvolt_ = omapvolt;
  if (omapvolt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyDeviceConfig.device.omapvolt)
}

// .Compensation.modules ocompensationmngr = 4;
inline bool device::has_ocompensationmngr() const {
  return this != internal_default_instance() && ocompensationmngr_ != NULL;
}
inline void device::clear_ocompensationmngr() {
  if (GetArenaNoVirtual() == NULL && ocompensationmngr_ != NULL) delete ocompensationmngr_;
  ocompensationmngr_ = NULL;
}
inline const ::Compensation::modules& device::ocompensationmngr() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.device.ocompensationmngr)
  return ocompensationmngr_ != NULL ? *ocompensationmngr_
                         : *::Compensation::modules::internal_default_instance();
}
inline ::Compensation::modules* device::mutable_ocompensationmngr() {
  
  if (ocompensationmngr_ == NULL) {
    ocompensationmngr_ = new ::Compensation::modules;
  }
  // @@protoc_insertion_point(field_mutable:hqyDeviceConfig.device.ocompensationmngr)
  return ocompensationmngr_;
}
inline ::Compensation::modules* device::release_ocompensationmngr() {
  // @@protoc_insertion_point(field_release:hqyDeviceConfig.device.ocompensationmngr)
  
  ::Compensation::modules* temp = ocompensationmngr_;
  ocompensationmngr_ = NULL;
  return temp;
}
inline void device::set_allocated_ocompensationmngr(::Compensation::modules* ocompensationmngr) {
  delete ocompensationmngr_;
  ocompensationmngr_ = ocompensationmngr;
  if (ocompensationmngr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:hqyDeviceConfig.device.ocompensationmngr)
}

// -------------------------------------------------------------------

// devicechaneldesc

// uint32 smvmaxgroupnum = 1;
inline void devicechaneldesc::clear_smvmaxgroupnum() {
  smvmaxgroupnum_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::smvmaxgroupnum() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.smvmaxgroupnum)
  return smvmaxgroupnum_;
}
inline void devicechaneldesc::set_smvmaxgroupnum(::google::protobuf::uint32 value) {
  
  smvmaxgroupnum_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.smvmaxgroupnum)
}

// uint32 goosepubmaxgroupnum = 2;
inline void devicechaneldesc::clear_goosepubmaxgroupnum() {
  goosepubmaxgroupnum_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::goosepubmaxgroupnum() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.goosepubmaxgroupnum)
  return goosepubmaxgroupnum_;
}
inline void devicechaneldesc::set_goosepubmaxgroupnum(::google::protobuf::uint32 value) {
  
  goosepubmaxgroupnum_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.goosepubmaxgroupnum)
}

// uint32 gooseinmaxgroupnum = 3;
inline void devicechaneldesc::clear_gooseinmaxgroupnum() {
  gooseinmaxgroupnum_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::gooseinmaxgroupnum() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.gooseinmaxgroupnum)
  return gooseinmaxgroupnum_;
}
inline void devicechaneldesc::set_gooseinmaxgroupnum(::google::protobuf::uint32 value) {
  
  gooseinmaxgroupnum_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.gooseinmaxgroupnum)
}

// uint32 analogvoltmaxchanel = 4;
inline void devicechaneldesc::clear_analogvoltmaxchanel() {
  analogvoltmaxchanel_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::analogvoltmaxchanel() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.analogvoltmaxchanel)
  return analogvoltmaxchanel_;
}
inline void devicechaneldesc::set_analogvoltmaxchanel(::google::protobuf::uint32 value) {
  
  analogvoltmaxchanel_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.analogvoltmaxchanel)
}

// uint32 analogcurrentmaxchanel = 5;
inline void devicechaneldesc::clear_analogcurrentmaxchanel() {
  analogcurrentmaxchanel_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::analogcurrentmaxchanel() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.analogcurrentmaxchanel)
  return analogcurrentmaxchanel_;
}
inline void devicechaneldesc::set_analogcurrentmaxchanel(::google::protobuf::uint32 value) {
  
  analogcurrentmaxchanel_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.analogcurrentmaxchanel)
}

// float ffremax = 6;
inline void devicechaneldesc::clear_ffremax() {
  ffremax_ = 0;
}
inline float devicechaneldesc::ffremax() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.ffremax)
  return ffremax_;
}
inline void devicechaneldesc::set_ffremax(float value) {
  
  ffremax_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.ffremax)
}

// float fanalogVoltmax = 7;
inline void devicechaneldesc::clear_fanalogvoltmax() {
  fanalogvoltmax_ = 0;
}
inline float devicechaneldesc::fanalogvoltmax() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.fanalogVoltmax)
  return fanalogvoltmax_;
}
inline void devicechaneldesc::set_fanalogvoltmax(float value) {
  
  fanalogvoltmax_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.fanalogVoltmax)
}

// float fanalogcurrentmax = 8;
inline void devicechaneldesc::clear_fanalogcurrentmax() {
  fanalogcurrentmax_ = 0;
}
inline float devicechaneldesc::fanalogcurrentmax() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.fanalogcurrentmax)
  return fanalogcurrentmax_;
}
inline void devicechaneldesc::set_fanalogcurrentmax(float value) {
  
  fanalogcurrentmax_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.fanalogcurrentmax)
}

// bool ishasudc = 9;
inline void devicechaneldesc::clear_ishasudc() {
  ishasudc_ = false;
}
inline bool devicechaneldesc::ishasudc() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.ishasudc)
  return ishasudc_;
}
inline void devicechaneldesc::set_ishasudc(bool value) {
  
  ishasudc_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.ishasudc)
}

// float fudcmax = 10;
inline void devicechaneldesc::clear_fudcmax() {
  fudcmax_ = 0;
}
inline float devicechaneldesc::fudcmax() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.fudcmax)
  return fudcmax_;
}
inline void devicechaneldesc::set_fudcmax(float value) {
  
  fudcmax_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.fudcmax)
}

// bool ishasidc = 11;
inline void devicechaneldesc::clear_ishasidc() {
  ishasidc_ = false;
}
inline bool devicechaneldesc::ishasidc() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.ishasidc)
  return ishasidc_;
}
inline void devicechaneldesc::set_ishasidc(bool value) {
  
  ishasidc_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.ishasidc)
}

// float fidcmax = 12;
inline void devicechaneldesc::clear_fidcmax() {
  fidcmax_ = 0;
}
inline float devicechaneldesc::fidcmax() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.fidcmax)
  return fidcmax_;
}
inline void devicechaneldesc::set_fidcmax(float value) {
  
  fidcmax_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.fidcmax)
}

// uint32 nbimaxnum = 13;
inline void devicechaneldesc::clear_nbimaxnum() {
  nbimaxnum_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::nbimaxnum() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.nbimaxnum)
  return nbimaxnum_;
}
inline void devicechaneldesc::set_nbimaxnum(::google::protobuf::uint32 value) {
  
  nbimaxnum_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.nbimaxnum)
}

// uint32 nbomaxnum = 14;
inline void devicechaneldesc::clear_nbomaxnum() {
  nbomaxnum_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::nbomaxnum() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.nbomaxnum)
  return nbomaxnum_;
}
inline void devicechaneldesc::set_nbomaxnum(::google::protobuf::uint32 value) {
  
  nbomaxnum_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.nbomaxnum)
}

// bool ishasDigitalout = 15;
inline void devicechaneldesc::clear_ishasdigitalout() {
  ishasdigitalout_ = false;
}
inline bool devicechaneldesc::ishasdigitalout() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.ishasDigitalout)
  return ishasdigitalout_;
}
inline void devicechaneldesc::set_ishasdigitalout(bool value) {
  
  ishasdigitalout_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.ishasDigitalout)
}

// bool ishasvoltanalogout = 16;
inline void devicechaneldesc::clear_ishasvoltanalogout() {
  ishasvoltanalogout_ = false;
}
inline bool devicechaneldesc::ishasvoltanalogout() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.ishasvoltanalogout)
  return ishasvoltanalogout_;
}
inline void devicechaneldesc::set_ishasvoltanalogout(bool value) {
  
  ishasvoltanalogout_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.ishasvoltanalogout)
}

// bool ishascuranalogout = 17;
inline void devicechaneldesc::clear_ishascuranalogout() {
  ishascuranalogout_ = false;
}
inline bool devicechaneldesc::ishascuranalogout() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.ishascuranalogout)
  return ishascuranalogout_;
}
inline void devicechaneldesc::set_ishascuranalogout(bool value) {
  
  ishascuranalogout_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.ishascuranalogout)
}

// uint32 nDigitalmodulenum = 18;
inline void devicechaneldesc::clear_ndigitalmodulenum() {
  ndigitalmodulenum_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::ndigitalmodulenum() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.nDigitalmodulenum)
  return ndigitalmodulenum_;
}
inline void devicechaneldesc::set_ndigitalmodulenum(::google::protobuf::uint32 value) {
  
  ndigitalmodulenum_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.nDigitalmodulenum)
}

// uint32 nDigitalmodulePortNum = 19;
inline void devicechaneldesc::clear_ndigitalmoduleportnum() {
  ndigitalmoduleportnum_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::ndigitalmoduleportnum() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.nDigitalmodulePortNum)
  return ndigitalmoduleportnum_;
}
inline void devicechaneldesc::set_ndigitalmoduleportnum(::google::protobuf::uint32 value) {
  
  ndigitalmoduleportnum_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.nDigitalmodulePortNum)
}

// uint32 nAnalogVoltModuleCount = 20;
inline void devicechaneldesc::clear_nanalogvoltmodulecount() {
  nanalogvoltmodulecount_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::nanalogvoltmodulecount() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.nAnalogVoltModuleCount)
  return nanalogvoltmodulecount_;
}
inline void devicechaneldesc::set_nanalogvoltmodulecount(::google::protobuf::uint32 value) {
  
  nanalogvoltmodulecount_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.nAnalogVoltModuleCount)
}

// uint32 nAnalogVoltModuleBeginNum = 21;
inline void devicechaneldesc::clear_nanalogvoltmodulebeginnum() {
  nanalogvoltmodulebeginnum_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::nanalogvoltmodulebeginnum() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.nAnalogVoltModuleBeginNum)
  return nanalogvoltmodulebeginnum_;
}
inline void devicechaneldesc::set_nanalogvoltmodulebeginnum(::google::protobuf::uint32 value) {
  
  nanalogvoltmodulebeginnum_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.nAnalogVoltModuleBeginNum)
}

// repeated uint32 nAnalogVoltModuleChanleCount = 22;
inline int devicechaneldesc::nanalogvoltmodulechanlecount_size() const {
  return nanalogvoltmodulechanlecount_.size();
}
inline void devicechaneldesc::clear_nanalogvoltmodulechanlecount() {
  nanalogvoltmodulechanlecount_.Clear();
}
inline ::google::protobuf::uint32 devicechaneldesc::nanalogvoltmodulechanlecount(int index) const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.nAnalogVoltModuleChanleCount)
  return nanalogvoltmodulechanlecount_.Get(index);
}
inline void devicechaneldesc::set_nanalogvoltmodulechanlecount(int index, ::google::protobuf::uint32 value) {
  nanalogvoltmodulechanlecount_.Set(index, value);
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.nAnalogVoltModuleChanleCount)
}
inline void devicechaneldesc::add_nanalogvoltmodulechanlecount(::google::protobuf::uint32 value) {
  nanalogvoltmodulechanlecount_.Add(value);
  // @@protoc_insertion_point(field_add:hqyDeviceConfig.devicechaneldesc.nAnalogVoltModuleChanleCount)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
devicechaneldesc::nanalogvoltmodulechanlecount() const {
  // @@protoc_insertion_point(field_list:hqyDeviceConfig.devicechaneldesc.nAnalogVoltModuleChanleCount)
  return nanalogvoltmodulechanlecount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
devicechaneldesc::mutable_nanalogvoltmodulechanlecount() {
  // @@protoc_insertion_point(field_mutable_list:hqyDeviceConfig.devicechaneldesc.nAnalogVoltModuleChanleCount)
  return &nanalogvoltmodulechanlecount_;
}

// uint32 nAnalogCurrentModuleCount = 23;
inline void devicechaneldesc::clear_nanalogcurrentmodulecount() {
  nanalogcurrentmodulecount_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::nanalogcurrentmodulecount() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.nAnalogCurrentModuleCount)
  return nanalogcurrentmodulecount_;
}
inline void devicechaneldesc::set_nanalogcurrentmodulecount(::google::protobuf::uint32 value) {
  
  nanalogcurrentmodulecount_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.nAnalogCurrentModuleCount)
}

// uint32 nAnalogCurrentModuleBeginNum = 24;
inline void devicechaneldesc::clear_nanalogcurrentmodulebeginnum() {
  nanalogcurrentmodulebeginnum_ = 0u;
}
inline ::google::protobuf::uint32 devicechaneldesc::nanalogcurrentmodulebeginnum() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.nAnalogCurrentModuleBeginNum)
  return nanalogcurrentmodulebeginnum_;
}
inline void devicechaneldesc::set_nanalogcurrentmodulebeginnum(::google::protobuf::uint32 value) {
  
  nanalogcurrentmodulebeginnum_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.nAnalogCurrentModuleBeginNum)
}

// repeated uint32 nAnalogCurrentModuleChanleCount = 25;
inline int devicechaneldesc::nanalogcurrentmodulechanlecount_size() const {
  return nanalogcurrentmodulechanlecount_.size();
}
inline void devicechaneldesc::clear_nanalogcurrentmodulechanlecount() {
  nanalogcurrentmodulechanlecount_.Clear();
}
inline ::google::protobuf::uint32 devicechaneldesc::nanalogcurrentmodulechanlecount(int index) const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.devicechaneldesc.nAnalogCurrentModuleChanleCount)
  return nanalogcurrentmodulechanlecount_.Get(index);
}
inline void devicechaneldesc::set_nanalogcurrentmodulechanlecount(int index, ::google::protobuf::uint32 value) {
  nanalogcurrentmodulechanlecount_.Set(index, value);
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.devicechaneldesc.nAnalogCurrentModuleChanleCount)
}
inline void devicechaneldesc::add_nanalogcurrentmodulechanlecount(::google::protobuf::uint32 value) {
  nanalogcurrentmodulechanlecount_.Add(value);
  // @@protoc_insertion_point(field_add:hqyDeviceConfig.devicechaneldesc.nAnalogCurrentModuleChanleCount)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
devicechaneldesc::nanalogcurrentmodulechanlecount() const {
  // @@protoc_insertion_point(field_list:hqyDeviceConfig.devicechaneldesc.nAnalogCurrentModuleChanleCount)
  return nanalogcurrentmodulechanlecount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
devicechaneldesc::mutable_nanalogcurrentmodulechanlecount() {
  // @@protoc_insertion_point(field_mutable_list:hqyDeviceConfig.devicechaneldesc.nAnalogCurrentModuleChanleCount)
  return &nanalogcurrentmodulechanlecount_;
}

// -------------------------------------------------------------------

// range

// float fmin = 1;
inline void range::clear_fmin() {
  fmin_ = 0;
}
inline float range::fmin() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.range.fmin)
  return fmin_;
}
inline void range::set_fmin(float value) {
  
  fmin_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.range.fmin)
}

// float fmax = 2;
inline void range::clear_fmax() {
  fmax_ = 0;
}
inline float range::fmax() const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.range.fmax)
  return fmax_;
}
inline void range::set_fmax(float value) {
  
  fmax_ = value;
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.range.fmax)
}

// -------------------------------------------------------------------

// analogmap

// repeated uint32 ndevicechanel = 1;
inline int analogmap::ndevicechanel_size() const {
  return ndevicechanel_.size();
}
inline void analogmap::clear_ndevicechanel() {
  ndevicechanel_.Clear();
}
inline ::google::protobuf::uint32 analogmap::ndevicechanel(int index) const {
  // @@protoc_insertion_point(field_get:hqyDeviceConfig.analogmap.ndevicechanel)
  return ndevicechanel_.Get(index);
}
inline void analogmap::set_ndevicechanel(int index, ::google::protobuf::uint32 value) {
  ndevicechanel_.Set(index, value);
  // @@protoc_insertion_point(field_set:hqyDeviceConfig.analogmap.ndevicechanel)
}
inline void analogmap::add_ndevicechanel(::google::protobuf::uint32 value) {
  ndevicechanel_.Add(value);
  // @@protoc_insertion_point(field_add:hqyDeviceConfig.analogmap.ndevicechanel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
analogmap::ndevicechanel() const {
  // @@protoc_insertion_point(field_list:hqyDeviceConfig.analogmap.ndevicechanel)
  return ndevicechanel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
analogmap::mutable_ndevicechanel() {
  // @@protoc_insertion_point(field_mutable_list:hqyDeviceConfig.analogmap.ndevicechanel)
  return &ndevicechanel_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace hqyDeviceConfig

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hqyDeviceConfig_2eproto__INCLUDED
