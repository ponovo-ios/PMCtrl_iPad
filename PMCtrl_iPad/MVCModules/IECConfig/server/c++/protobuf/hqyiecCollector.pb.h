// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hqyiecCollector.proto

#ifndef PROTOBUF_hqyiecCollector_2eproto__INCLUDED
#define PROTOBUF_hqyiecCollector_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace hqyIECCollector_Setting {
class Channel_Info;
class Channel_InfoDefaultTypeInternal;
extern Channel_InfoDefaultTypeInternal _Channel_Info_default_instance_;
class Control_Block;
class Control_BlockDefaultTypeInternal;
extern Control_BlockDefaultTypeInternal _Control_Block_default_instance_;
class IECCollector;
class IECCollectorDefaultTypeInternal;
extern IECCollectorDefaultTypeInternal _IECCollector_default_instance_;
}  // namespace hqyIECCollector_Setting

namespace hqyIECCollector_Setting {

namespace protobuf_hqyiecCollector_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_hqyiecCollector_2eproto

enum Channel_Type {
  FOR_PROTECT = 0,
  FOR_MEASURE = 1,
  FOR_VOLTAGE = 2,
  Channel_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Channel_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Channel_Type_IsValid(int value);
const Channel_Type Channel_Type_MIN = FOR_PROTECT;
const Channel_Type Channel_Type_MAX = FOR_VOLTAGE;
const int Channel_Type_ARRAYSIZE = Channel_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Channel_Type_descriptor();
inline const ::std::string& Channel_Type_Name(Channel_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Channel_Type_descriptor(), value);
}
inline bool Channel_Type_Parse(
    const ::std::string& name, Channel_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Channel_Type>(
    Channel_Type_descriptor(), name, value);
}
enum Mutual_Inductor_Type {
  TR_1_PHASE = 0,
  TR_3_PHASE_CT = 1,
  TR_3_PHASE_PT = 2,
  TR_3_PHASE_PT_CT = 3,
  TR_2_BUS_VOL = 4,
  TR_3_BUS_VOL = 5,
  Mutual_Inductor_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Mutual_Inductor_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Mutual_Inductor_Type_IsValid(int value);
const Mutual_Inductor_Type Mutual_Inductor_Type_MIN = TR_1_PHASE;
const Mutual_Inductor_Type Mutual_Inductor_Type_MAX = TR_3_BUS_VOL;
const int Mutual_Inductor_Type_ARRAYSIZE = Mutual_Inductor_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Mutual_Inductor_Type_descriptor();
inline const ::std::string& Mutual_Inductor_Type_Name(Mutual_Inductor_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Mutual_Inductor_Type_descriptor(), value);
}
inline bool Mutual_Inductor_Type_Parse(
    const ::std::string& name, Mutual_Inductor_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Mutual_Inductor_Type>(
    Mutual_Inductor_Type_descriptor(), name, value);
}
// ===================================================================

class Channel_Info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hqyIECCollector_Setting.Channel_Info) */ {
 public:
  Channel_Info();
  virtual ~Channel_Info();

  Channel_Info(const Channel_Info& from);

  inline Channel_Info& operator=(const Channel_Info& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Channel_Info& default_instance();

  static inline const Channel_Info* internal_default_instance() {
    return reinterpret_cast<const Channel_Info*>(
               &_Channel_Info_default_instance_);
  }

  void Swap(Channel_Info* other);

  // implements Message ----------------------------------------------

  inline Channel_Info* New() const PROTOBUF_FINAL { return New(NULL); }

  Channel_Info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Channel_Info& from);
  void MergeFrom(const Channel_Info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Channel_Info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string Description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string MapId = 3;
  void clear_mapid();
  static const int kMapIdFieldNumber = 3;
  const ::std::string& mapid() const;
  void set_mapid(const ::std::string& value);
  #if LANG_CXX11
  void set_mapid(::std::string&& value);
  #endif
  void set_mapid(const char* value);
  void set_mapid(const char* value, size_t size);
  ::std::string* mutable_mapid();
  ::std::string* release_mapid();
  void set_allocated_mapid(::std::string* mapid);

  // .hqyIECCollector_Setting.Channel_Type Type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::hqyIECCollector_Setting::Channel_Type type() const;
  void set_type(::hqyIECCollector_Setting::Channel_Type value);

  // @@protoc_insertion_point(class_scope:hqyIECCollector_Setting.Channel_Info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr mapid_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_hqyiecCollector_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Control_Block : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hqyIECCollector_Setting.Control_Block) */ {
 public:
  Control_Block();
  virtual ~Control_Block();

  Control_Block(const Control_Block& from);

  inline Control_Block& operator=(const Control_Block& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Control_Block& default_instance();

  static inline const Control_Block* internal_default_instance() {
    return reinterpret_cast<const Control_Block*>(
               &_Control_Block_default_instance_);
  }

  void Swap(Control_Block* other);

  // implements Message ----------------------------------------------

  inline Control_Block* New() const PROTOBUF_FINAL { return New(NULL); }

  Control_Block* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Control_Block& from);
  void MergeFrom(const Control_Block& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Control_Block* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hqyIECCollector_Setting.Channel_Info Channel = 8;
  int channel_size() const;
  void clear_channel();
  static const int kChannelFieldNumber = 8;
  const ::hqyIECCollector_Setting::Channel_Info& channel(int index) const;
  ::hqyIECCollector_Setting::Channel_Info* mutable_channel(int index);
  ::hqyIECCollector_Setting::Channel_Info* add_channel();
  ::google::protobuf::RepeatedPtrField< ::hqyIECCollector_Setting::Channel_Info >*
      mutable_channel();
  const ::google::protobuf::RepeatedPtrField< ::hqyIECCollector_Setting::Channel_Info >&
      channel() const;

  // string desc = 7;
  void clear_desc();
  static const int kDescFieldNumber = 7;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // uint32 StateFlag1 = 1;
  void clear_stateflag1();
  static const int kStateFlag1FieldNumber = 1;
  ::google::protobuf::uint32 stateflag1() const;
  void set_stateflag1(::google::protobuf::uint32 value);

  // uint32 StateFlag2 = 2;
  void clear_stateflag2();
  static const int kStateFlag2FieldNumber = 2;
  ::google::protobuf::uint32 stateflag2() const;
  void set_stateflag2(::google::protobuf::uint32 value);

  // uint32 RatedDelayTime = 3;
  void clear_rateddelaytime();
  static const int kRatedDelayTimeFieldNumber = 3;
  ::google::protobuf::uint32 rateddelaytime() const;
  void set_rateddelaytime(::google::protobuf::uint32 value);

  // .hqyIECCollector_Setting.Mutual_Inductor_Type Type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::hqyIECCollector_Setting::Mutual_Inductor_Type type() const;
  void set_type(::hqyIECCollector_Setting::Mutual_Inductor_Type value);

  // double Temperature = 5;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 5;
  double temperature() const;
  void set_temperature(double value);

  // int32 Port = 6;
  void clear_port();
  static const int kPortFieldNumber = 6;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:hqyIECCollector_Setting.Control_Block)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::hqyIECCollector_Setting::Channel_Info > channel_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::uint32 stateflag1_;
  ::google::protobuf::uint32 stateflag2_;
  ::google::protobuf::uint32 rateddelaytime_;
  int type_;
  double temperature_;
  ::google::protobuf::int32 port_;
  mutable int _cached_size_;
  friend struct  protobuf_hqyiecCollector_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IECCollector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:hqyIECCollector_Setting.IECCollector) */ {
 public:
  IECCollector();
  virtual ~IECCollector();

  IECCollector(const IECCollector& from);

  inline IECCollector& operator=(const IECCollector& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IECCollector& default_instance();

  static inline const IECCollector* internal_default_instance() {
    return reinterpret_cast<const IECCollector*>(
               &_IECCollector_default_instance_);
  }

  void Swap(IECCollector* other);

  // implements Message ----------------------------------------------

  inline IECCollector* New() const PROTOBUF_FINAL { return New(NULL); }

  IECCollector* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IECCollector& from);
  void MergeFrom(const IECCollector& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IECCollector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hqyIECCollector_Setting.Control_Block Block = 1;
  int block_size() const;
  void clear_block();
  static const int kBlockFieldNumber = 1;
  const ::hqyIECCollector_Setting::Control_Block& block(int index) const;
  ::hqyIECCollector_Setting::Control_Block* mutable_block(int index);
  ::hqyIECCollector_Setting::Control_Block* add_block();
  ::google::protobuf::RepeatedPtrField< ::hqyIECCollector_Setting::Control_Block >*
      mutable_block();
  const ::google::protobuf::RepeatedPtrField< ::hqyIECCollector_Setting::Control_Block >&
      block() const;

  // int32 SamplingRatio = 2;
  void clear_samplingratio();
  static const int kSamplingRatioFieldNumber = 2;
  ::google::protobuf::int32 samplingratio() const;
  void set_samplingratio(::google::protobuf::int32 value);

  // int32 BaudRate = 3;
  void clear_baudrate();
  static const int kBaudRateFieldNumber = 3;
  ::google::protobuf::int32 baudrate() const;
  void set_baudrate(::google::protobuf::int32 value);

  // double RatedProtectCurrent = 4;
  void clear_ratedprotectcurrent();
  static const int kRatedProtectCurrentFieldNumber = 4;
  double ratedprotectcurrent() const;
  void set_ratedprotectcurrent(double value);

  // double RatedZeroSeqCurrent = 5;
  void clear_ratedzeroseqcurrent();
  static const int kRatedZeroSeqCurrentFieldNumber = 5;
  double ratedzeroseqcurrent() const;
  void set_ratedzeroseqcurrent(double value);

  // double RatedPhaseVoltage = 6;
  void clear_ratedphasevoltage();
  static const int kRatedPhaseVoltageFieldNumber = 6;
  double ratedphasevoltage() const;
  void set_ratedphasevoltage(double value);

  // bool Is_Syn_Output = 7;
  void clear_is_syn_output();
  static const int kIsSynOutputFieldNumber = 7;
  bool is_syn_output() const;
  void set_is_syn_output(bool value);

  // bool OutputIsPrimary = 8;
  void clear_outputisprimary();
  static const int kOutputIsPrimaryFieldNumber = 8;
  bool outputisprimary() const;
  void set_outputisprimary(bool value);

  // @@protoc_insertion_point(class_scope:hqyIECCollector_Setting.IECCollector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::hqyIECCollector_Setting::Control_Block > block_;
  ::google::protobuf::int32 samplingratio_;
  ::google::protobuf::int32 baudrate_;
  double ratedprotectcurrent_;
  double ratedzeroseqcurrent_;
  double ratedphasevoltage_;
  bool is_syn_output_;
  bool outputisprimary_;
  mutable int _cached_size_;
  friend struct  protobuf_hqyiecCollector_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Channel_Info

// string Name = 1;
inline void Channel_Info::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Channel_Info::name() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Channel_Info.Name)
  return name_.GetNoArena();
}
inline void Channel_Info::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.Channel_Info.Name)
}
#if LANG_CXX11
inline void Channel_Info::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyIECCollector_Setting.Channel_Info.Name)
}
#endif
inline void Channel_Info::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyIECCollector_Setting.Channel_Info.Name)
}
inline void Channel_Info::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyIECCollector_Setting.Channel_Info.Name)
}
inline ::std::string* Channel_Info::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:hqyIECCollector_Setting.Channel_Info.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Channel_Info::release_name() {
  // @@protoc_insertion_point(field_release:hqyIECCollector_Setting.Channel_Info.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Channel_Info::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:hqyIECCollector_Setting.Channel_Info.Name)
}

// string Description = 2;
inline void Channel_Info::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Channel_Info::description() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Channel_Info.Description)
  return description_.GetNoArena();
}
inline void Channel_Info::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.Channel_Info.Description)
}
#if LANG_CXX11
inline void Channel_Info::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyIECCollector_Setting.Channel_Info.Description)
}
#endif
inline void Channel_Info::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyIECCollector_Setting.Channel_Info.Description)
}
inline void Channel_Info::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyIECCollector_Setting.Channel_Info.Description)
}
inline ::std::string* Channel_Info::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:hqyIECCollector_Setting.Channel_Info.Description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Channel_Info::release_description() {
  // @@protoc_insertion_point(field_release:hqyIECCollector_Setting.Channel_Info.Description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Channel_Info::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:hqyIECCollector_Setting.Channel_Info.Description)
}

// string MapId = 3;
inline void Channel_Info::clear_mapid() {
  mapid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Channel_Info::mapid() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Channel_Info.MapId)
  return mapid_.GetNoArena();
}
inline void Channel_Info::set_mapid(const ::std::string& value) {
  
  mapid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.Channel_Info.MapId)
}
#if LANG_CXX11
inline void Channel_Info::set_mapid(::std::string&& value) {
  
  mapid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyIECCollector_Setting.Channel_Info.MapId)
}
#endif
inline void Channel_Info::set_mapid(const char* value) {
  
  mapid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyIECCollector_Setting.Channel_Info.MapId)
}
inline void Channel_Info::set_mapid(const char* value, size_t size) {
  
  mapid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyIECCollector_Setting.Channel_Info.MapId)
}
inline ::std::string* Channel_Info::mutable_mapid() {
  
  // @@protoc_insertion_point(field_mutable:hqyIECCollector_Setting.Channel_Info.MapId)
  return mapid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Channel_Info::release_mapid() {
  // @@protoc_insertion_point(field_release:hqyIECCollector_Setting.Channel_Info.MapId)
  
  return mapid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Channel_Info::set_allocated_mapid(::std::string* mapid) {
  if (mapid != NULL) {
    
  } else {
    
  }
  mapid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapid);
  // @@protoc_insertion_point(field_set_allocated:hqyIECCollector_Setting.Channel_Info.MapId)
}

// .hqyIECCollector_Setting.Channel_Type Type = 4;
inline void Channel_Info::clear_type() {
  type_ = 0;
}
inline ::hqyIECCollector_Setting::Channel_Type Channel_Info::type() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Channel_Info.Type)
  return static_cast< ::hqyIECCollector_Setting::Channel_Type >(type_);
}
inline void Channel_Info::set_type(::hqyIECCollector_Setting::Channel_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.Channel_Info.Type)
}

// -------------------------------------------------------------------

// Control_Block

// uint32 StateFlag1 = 1;
inline void Control_Block::clear_stateflag1() {
  stateflag1_ = 0u;
}
inline ::google::protobuf::uint32 Control_Block::stateflag1() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Control_Block.StateFlag1)
  return stateflag1_;
}
inline void Control_Block::set_stateflag1(::google::protobuf::uint32 value) {
  
  stateflag1_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.Control_Block.StateFlag1)
}

// uint32 StateFlag2 = 2;
inline void Control_Block::clear_stateflag2() {
  stateflag2_ = 0u;
}
inline ::google::protobuf::uint32 Control_Block::stateflag2() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Control_Block.StateFlag2)
  return stateflag2_;
}
inline void Control_Block::set_stateflag2(::google::protobuf::uint32 value) {
  
  stateflag2_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.Control_Block.StateFlag2)
}

// uint32 RatedDelayTime = 3;
inline void Control_Block::clear_rateddelaytime() {
  rateddelaytime_ = 0u;
}
inline ::google::protobuf::uint32 Control_Block::rateddelaytime() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Control_Block.RatedDelayTime)
  return rateddelaytime_;
}
inline void Control_Block::set_rateddelaytime(::google::protobuf::uint32 value) {
  
  rateddelaytime_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.Control_Block.RatedDelayTime)
}

// .hqyIECCollector_Setting.Mutual_Inductor_Type Type = 4;
inline void Control_Block::clear_type() {
  type_ = 0;
}
inline ::hqyIECCollector_Setting::Mutual_Inductor_Type Control_Block::type() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Control_Block.Type)
  return static_cast< ::hqyIECCollector_Setting::Mutual_Inductor_Type >(type_);
}
inline void Control_Block::set_type(::hqyIECCollector_Setting::Mutual_Inductor_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.Control_Block.Type)
}

// double Temperature = 5;
inline void Control_Block::clear_temperature() {
  temperature_ = 0;
}
inline double Control_Block::temperature() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Control_Block.Temperature)
  return temperature_;
}
inline void Control_Block::set_temperature(double value) {
  
  temperature_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.Control_Block.Temperature)
}

// int32 Port = 6;
inline void Control_Block::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 Control_Block::port() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Control_Block.Port)
  return port_;
}
inline void Control_Block::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.Control_Block.Port)
}

// string desc = 7;
inline void Control_Block::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Control_Block::desc() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Control_Block.desc)
  return desc_.GetNoArena();
}
inline void Control_Block::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.Control_Block.desc)
}
#if LANG_CXX11
inline void Control_Block::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyIECCollector_Setting.Control_Block.desc)
}
#endif
inline void Control_Block::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyIECCollector_Setting.Control_Block.desc)
}
inline void Control_Block::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyIECCollector_Setting.Control_Block.desc)
}
inline ::std::string* Control_Block::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:hqyIECCollector_Setting.Control_Block.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Control_Block::release_desc() {
  // @@protoc_insertion_point(field_release:hqyIECCollector_Setting.Control_Block.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Control_Block::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:hqyIECCollector_Setting.Control_Block.desc)
}

// repeated .hqyIECCollector_Setting.Channel_Info Channel = 8;
inline int Control_Block::channel_size() const {
  return channel_.size();
}
inline void Control_Block::clear_channel() {
  channel_.Clear();
}
inline const ::hqyIECCollector_Setting::Channel_Info& Control_Block::channel(int index) const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.Control_Block.Channel)
  return channel_.Get(index);
}
inline ::hqyIECCollector_Setting::Channel_Info* Control_Block::mutable_channel(int index) {
  // @@protoc_insertion_point(field_mutable:hqyIECCollector_Setting.Control_Block.Channel)
  return channel_.Mutable(index);
}
inline ::hqyIECCollector_Setting::Channel_Info* Control_Block::add_channel() {
  // @@protoc_insertion_point(field_add:hqyIECCollector_Setting.Control_Block.Channel)
  return channel_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hqyIECCollector_Setting::Channel_Info >*
Control_Block::mutable_channel() {
  // @@protoc_insertion_point(field_mutable_list:hqyIECCollector_Setting.Control_Block.Channel)
  return &channel_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hqyIECCollector_Setting::Channel_Info >&
Control_Block::channel() const {
  // @@protoc_insertion_point(field_list:hqyIECCollector_Setting.Control_Block.Channel)
  return channel_;
}

// -------------------------------------------------------------------

// IECCollector

// repeated .hqyIECCollector_Setting.Control_Block Block = 1;
inline int IECCollector::block_size() const {
  return block_.size();
}
inline void IECCollector::clear_block() {
  block_.Clear();
}
inline const ::hqyIECCollector_Setting::Control_Block& IECCollector::block(int index) const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.IECCollector.Block)
  return block_.Get(index);
}
inline ::hqyIECCollector_Setting::Control_Block* IECCollector::mutable_block(int index) {
  // @@protoc_insertion_point(field_mutable:hqyIECCollector_Setting.IECCollector.Block)
  return block_.Mutable(index);
}
inline ::hqyIECCollector_Setting::Control_Block* IECCollector::add_block() {
  // @@protoc_insertion_point(field_add:hqyIECCollector_Setting.IECCollector.Block)
  return block_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::hqyIECCollector_Setting::Control_Block >*
IECCollector::mutable_block() {
  // @@protoc_insertion_point(field_mutable_list:hqyIECCollector_Setting.IECCollector.Block)
  return &block_;
}
inline const ::google::protobuf::RepeatedPtrField< ::hqyIECCollector_Setting::Control_Block >&
IECCollector::block() const {
  // @@protoc_insertion_point(field_list:hqyIECCollector_Setting.IECCollector.Block)
  return block_;
}

// int32 SamplingRatio = 2;
inline void IECCollector::clear_samplingratio() {
  samplingratio_ = 0;
}
inline ::google::protobuf::int32 IECCollector::samplingratio() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.IECCollector.SamplingRatio)
  return samplingratio_;
}
inline void IECCollector::set_samplingratio(::google::protobuf::int32 value) {
  
  samplingratio_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.IECCollector.SamplingRatio)
}

// int32 BaudRate = 3;
inline void IECCollector::clear_baudrate() {
  baudrate_ = 0;
}
inline ::google::protobuf::int32 IECCollector::baudrate() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.IECCollector.BaudRate)
  return baudrate_;
}
inline void IECCollector::set_baudrate(::google::protobuf::int32 value) {
  
  baudrate_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.IECCollector.BaudRate)
}

// double RatedProtectCurrent = 4;
inline void IECCollector::clear_ratedprotectcurrent() {
  ratedprotectcurrent_ = 0;
}
inline double IECCollector::ratedprotectcurrent() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.IECCollector.RatedProtectCurrent)
  return ratedprotectcurrent_;
}
inline void IECCollector::set_ratedprotectcurrent(double value) {
  
  ratedprotectcurrent_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.IECCollector.RatedProtectCurrent)
}

// double RatedZeroSeqCurrent = 5;
inline void IECCollector::clear_ratedzeroseqcurrent() {
  ratedzeroseqcurrent_ = 0;
}
inline double IECCollector::ratedzeroseqcurrent() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.IECCollector.RatedZeroSeqCurrent)
  return ratedzeroseqcurrent_;
}
inline void IECCollector::set_ratedzeroseqcurrent(double value) {
  
  ratedzeroseqcurrent_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.IECCollector.RatedZeroSeqCurrent)
}

// double RatedPhaseVoltage = 6;
inline void IECCollector::clear_ratedphasevoltage() {
  ratedphasevoltage_ = 0;
}
inline double IECCollector::ratedphasevoltage() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.IECCollector.RatedPhaseVoltage)
  return ratedphasevoltage_;
}
inline void IECCollector::set_ratedphasevoltage(double value) {
  
  ratedphasevoltage_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.IECCollector.RatedPhaseVoltage)
}

// bool Is_Syn_Output = 7;
inline void IECCollector::clear_is_syn_output() {
  is_syn_output_ = false;
}
inline bool IECCollector::is_syn_output() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.IECCollector.Is_Syn_Output)
  return is_syn_output_;
}
inline void IECCollector::set_is_syn_output(bool value) {
  
  is_syn_output_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.IECCollector.Is_Syn_Output)
}

// bool OutputIsPrimary = 8;
inline void IECCollector::clear_outputisprimary() {
  outputisprimary_ = false;
}
inline bool IECCollector::outputisprimary() const {
  // @@protoc_insertion_point(field_get:hqyIECCollector_Setting.IECCollector.OutputIsPrimary)
  return outputisprimary_;
}
inline void IECCollector::set_outputisprimary(bool value) {
  
  outputisprimary_ = value;
  // @@protoc_insertion_point(field_set:hqyIECCollector_Setting.IECCollector.OutputIsPrimary)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace hqyIECCollector_Setting

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::hqyIECCollector_Setting::Channel_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hqyIECCollector_Setting::Channel_Type>() {
  return ::hqyIECCollector_Setting::Channel_Type_descriptor();
}
template <> struct is_proto_enum< ::hqyIECCollector_Setting::Mutual_Inductor_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hqyIECCollector_Setting::Mutual_Inductor_Type>() {
  return ::hqyIECCollector_Setting::Mutual_Inductor_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hqyiecCollector_2eproto__INCLUDED
