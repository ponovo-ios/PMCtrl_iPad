// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Distance.proto

#ifndef PROTOBUF_Distance_2eproto__INCLUDED
#define PROTOBUF_Distance_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "RelaySwitchOut.pb.h"
// @@protoc_insertion_point(includes)
namespace Distance {
class BasicResultItem;
class BasicResultItemDefaultTypeInternal;
extern BasicResultItemDefaultTypeInternal _BasicResultItem_default_instance_;
class CommonPara;
class CommonParaDefaultTypeInternal;
extern CommonParaDefaultTypeInternal _CommonPara_default_instance_;
class Items;
class ItemsDefaultTypeInternal;
extern ItemsDefaultTypeInternal _Items_default_instance_;
class MarkPara;
class MarkParaDefaultTypeInternal;
extern MarkParaDefaultTypeInternal _MarkPara_default_instance_;
class TestItem_Distance;
class TestItem_DistanceDefaultTypeInternal;
extern TestItem_DistanceDefaultTypeInternal _TestItem_Distance_default_instance_;
class TestItem_Distance_Result;
class TestItem_Distance_ResultDefaultTypeInternal;
extern TestItem_Distance_ResultDefaultTypeInternal _TestItem_Distance_Result_default_instance_;
class TestItem_Distance_Switch_State;
class TestItem_Distance_Switch_StateDefaultTypeInternal;
extern TestItem_Distance_Switch_StateDefaultTypeInternal _TestItem_Distance_Switch_State_default_instance_;
class chanel;
class chanelDefaultTypeInternal;
extern chanelDefaultTypeInternal _chanel_default_instance_;
}  // namespace Distance
namespace RelaySwitchOut {
class SwitchPara;
class SwitchParaDefaultTypeInternal;
extern SwitchParaDefaultTypeInternal _SwitchPara_default_instance_;
class TRIPMAP;
class TRIPMAPDefaultTypeInternal;
extern TRIPMAPDefaultTypeInternal _TRIPMAP_default_instance_;
}  // namespace RelaySwitchOut

namespace Distance {

namespace protobuf_Distance_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Distance_2eproto

enum Error_type {
  Error_A_JD = 0,
  Error_B_JD = 1,
  Error_C_JD = 2,
  Error_AB_DL = 3,
  Error_BC_DL = 4,
  Error_CA_DL = 5,
  Error_AB_JDDL = 6,
  Error_BC_JDDL = 7,
  Error_CA_JDDL = 8,
  Error_ABC_DL = 9,
  Error_SINGLE_ZK = 10,
  Error_type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Error_type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Error_type_IsValid(int value);
const Error_type Error_type_MIN = Error_A_JD;
const Error_type Error_type_MAX = Error_SINGLE_ZK;
const int Error_type_ARRAYSIZE = Error_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Error_type_descriptor();
inline const ::std::string& Error_type_Name(Error_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Error_type_descriptor(), value);
}
inline bool Error_type_Parse(
    const ::std::string& name, Error_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Error_type>(
    Error_type_descriptor(), name, value);
}
enum Error_Dirc {
  reverse = 0,
  positive = 1,
  Error_Dirc_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Error_Dirc_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Error_Dirc_IsValid(int value);
const Error_Dirc Error_Dirc_MIN = reverse;
const Error_Dirc Error_Dirc_MAX = positive;
const int Error_Dirc_ARRAYSIZE = Error_Dirc_MAX + 1;

const ::google::protobuf::EnumDescriptor* Error_Dirc_descriptor();
inline const ::std::string& Error_Dirc_Name(Error_Dirc value) {
  return ::google::protobuf::internal::NameOfEnum(
    Error_Dirc_descriptor(), value);
}
inline bool Error_Dirc_Parse(
    const ::std::string& name, Error_Dirc* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Error_Dirc>(
    Error_Dirc_descriptor(), name, value);
}
enum Error_Nature {
  instant = 0,
  perpetual = 1,
  Error_Nature_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Error_Nature_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Error_Nature_IsValid(int value);
const Error_Nature Error_Nature_MIN = instant;
const Error_Nature Error_Nature_MAX = perpetual;
const int Error_Nature_ARRAYSIZE = Error_Nature_MAX + 1;

const ::google::protobuf::EnumDescriptor* Error_Nature_descriptor();
inline const ::std::string& Error_Nature_Name(Error_Nature value) {
  return ::google::protobuf::internal::NameOfEnum(
    Error_Nature_descriptor(), value);
}
inline bool Error_Nature_Parse(
    const ::std::string& name, Error_Nature* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Error_Nature>(
    Error_Nature_descriptor(), name, value);
}
enum OutPutType {
  analog_type = 0,
  digital_type = 1,
  analog_digital_type = 2,
  OutPutType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OutPutType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OutPutType_IsValid(int value);
const OutPutType OutPutType_MIN = analog_type;
const OutPutType OutPutType_MAX = analog_digital_type;
const int OutPutType_ARRAYSIZE = OutPutType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OutPutType_descriptor();
inline const ::std::string& OutPutType_Name(OutPutType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OutPutType_descriptor(), value);
}
inline bool OutPutType_Parse(
    const ::std::string& name, OutPutType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OutPutType>(
    OutPutType_descriptor(), name, value);
}
enum KoMode {
  K0 = 0,
  RERL = 1,
  Z0 = 2,
  KoMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  KoMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool KoMode_IsValid(int value);
const KoMode KoMode_MIN = K0;
const KoMode KoMode_MAX = Z0;
const int KoMode_ARRAYSIZE = KoMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* KoMode_descriptor();
inline const ::std::string& KoMode_Name(KoMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    KoMode_descriptor(), value);
}
inline bool KoMode_Parse(
    const ::std::string& name, KoMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KoMode>(
    KoMode_descriptor(), name, value);
}
enum FaultTrigeMode {
  TIME = 0,
  KEY = 1,
  H = 2,
  GPS = 3,
  FaultTrigeMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FaultTrigeMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FaultTrigeMode_IsValid(int value);
const FaultTrigeMode FaultTrigeMode_MIN = TIME;
const FaultTrigeMode FaultTrigeMode_MAX = GPS;
const int FaultTrigeMode_ARRAYSIZE = FaultTrigeMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* FaultTrigeMode_descriptor();
inline const ::std::string& FaultTrigeMode_Name(FaultTrigeMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    FaultTrigeMode_descriptor(), value);
}
inline bool FaultTrigeMode_Parse(
    const ::std::string& name, FaultTrigeMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FaultTrigeMode>(
    FaultTrigeMode_descriptor(), name, value);
}
enum PTCON {
  BUS = 0,
  LINE = 1,
  PTCON_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PTCON_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PTCON_IsValid(int value);
const PTCON PTCON_MIN = BUS;
const PTCON PTCON_MAX = LINE;
const int PTCON_ARRAYSIZE = PTCON_MAX + 1;

const ::google::protobuf::EnumDescriptor* PTCON_descriptor();
inline const ::std::string& PTCON_Name(PTCON value) {
  return ::google::protobuf::internal::NameOfEnum(
    PTCON_descriptor(), value);
}
inline bool PTCON_Parse(
    const ::std::string& name, PTCON* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PTCON>(
    PTCON_descriptor(), name, value);
}
enum CTPOINT {
  POINT_BUS = 0,
  POINT_LINE = 1,
  CTPOINT_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CTPOINT_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CTPOINT_IsValid(int value);
const CTPOINT CTPOINT_MIN = POINT_BUS;
const CTPOINT CTPOINT_MAX = POINT_LINE;
const int CTPOINT_ARRAYSIZE = CTPOINT_MAX + 1;

const ::google::protobuf::EnumDescriptor* CTPOINT_descriptor();
inline const ::std::string& CTPOINT_Name(CTPOINT value) {
  return ::google::protobuf::internal::NameOfEnum(
    CTPOINT_descriptor(), value);
}
inline bool CTPOINT_Parse(
    const ::std::string& name, CTPOINT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CTPOINT>(
    CTPOINT_descriptor(), name, value);
}
enum BCSIMULATION {
  NO = 0,
  YES = 1,
  BCSIMULATION_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BCSIMULATION_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BCSIMULATION_IsValid(int value);
const BCSIMULATION BCSIMULATION_MIN = NO;
const BCSIMULATION BCSIMULATION_MAX = YES;
const int BCSIMULATION_ARRAYSIZE = BCSIMULATION_MAX + 1;

const ::google::protobuf::EnumDescriptor* BCSIMULATION_descriptor();
inline const ::std::string& BCSIMULATION_Name(BCSIMULATION value) {
  return ::google::protobuf::internal::NameOfEnum(
    BCSIMULATION_descriptor(), value);
}
inline bool BCSIMULATION_Parse(
    const ::std::string& name, BCSIMULATION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BCSIMULATION>(
    BCSIMULATION_descriptor(), name, value);
}
enum RXS {
  Z = 0,
  RX = 1,
  RXS_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RXS_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RXS_IsValid(int value);
const RXS RXS_MIN = Z;
const RXS RXS_MAX = RX;
const int RXS_ARRAYSIZE = RXS_MAX + 1;

const ::google::protobuf::EnumDescriptor* RXS_descriptor();
inline const ::std::string& RXS_Name(RXS value) {
  return ::google::protobuf::internal::NameOfEnum(
    RXS_descriptor(), value);
}
inline bool RXS_Parse(
    const ::std::string& name, RXS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RXS>(
    RXS_descriptor(), name, value);
}
enum VZDEFINE {
  ZERO = 0,
  Z3X3VO = 1,
  F3X3VO = 2,
  Z3VO = 3,
  F3VO = 4,
  PHDEFINE = 5,
  VZDEFINE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VZDEFINE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VZDEFINE_IsValid(int value);
const VZDEFINE VZDEFINE_MIN = ZERO;
const VZDEFINE VZDEFINE_MAX = PHDEFINE;
const int VZDEFINE_ARRAYSIZE = VZDEFINE_MAX + 1;

const ::google::protobuf::EnumDescriptor* VZDEFINE_descriptor();
inline const ::std::string& VZDEFINE_Name(VZDEFINE value) {
  return ::google::protobuf::internal::NameOfEnum(
    VZDEFINE_descriptor(), value);
}
inline bool VZDEFINE_Parse(
    const ::std::string& name, VZDEFINE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VZDEFINE>(
    VZDEFINE_descriptor(), name, value);
}
enum VZPHDEFINE {
  VA_PHASE = 0,
  VB_PHASE = 1,
  VC_PHASE = 2,
  VAB_PHASE = 3,
  VBC_PHASE = 4,
  VCA_PHASE = 5,
  VZPHDEFINE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VZPHDEFINE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VZPHDEFINE_IsValid(int value);
const VZPHDEFINE VZPHDEFINE_MIN = VA_PHASE;
const VZPHDEFINE VZPHDEFINE_MAX = VCA_PHASE;
const int VZPHDEFINE_ARRAYSIZE = VZPHDEFINE_MAX + 1;

const ::google::protobuf::EnumDescriptor* VZPHDEFINE_descriptor();
inline const ::std::string& VZPHDEFINE_Name(VZPHDEFINE value) {
  return ::google::protobuf::internal::NameOfEnum(
    VZPHDEFINE_descriptor(), value);
}
inline bool VZPHDEFINE_Parse(
    const ::std::string& name, VZPHDEFINE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VZPHDEFINE>(
    VZPHDEFINE_descriptor(), name, value);
}
// ===================================================================

class chanel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Distance.chanel) */ {
 public:
  chanel();
  virtual ~chanel();

  chanel(const chanel& from);

  inline chanel& operator=(const chanel& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chanel& default_instance();

  static inline const chanel* internal_default_instance() {
    return reinterpret_cast<const chanel*>(
               &_chanel_default_instance_);
  }

  void Swap(chanel* other);

  // implements Message ----------------------------------------------

  inline chanel* New() const PROTOBUF_FINAL { return New(NULL); }

  chanel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const chanel& from);
  void MergeFrom(const chanel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(chanel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float famptitude = 1;
  void clear_famptitude();
  static const int kFamptitudeFieldNumber = 1;
  float famptitude() const;
  void set_famptitude(float value);

  // float fphase = 2;
  void clear_fphase();
  static const int kFphaseFieldNumber = 2;
  float fphase() const;
  void set_fphase(float value);

  // @@protoc_insertion_point(class_scope:Distance.chanel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float famptitude_;
  float fphase_;
  mutable int _cached_size_;
  friend struct  protobuf_Distance_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BasicResultItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Distance.BasicResultItem) */ {
 public:
  BasicResultItem();
  virtual ~BasicResultItem();

  BasicResultItem(const BasicResultItem& from);

  inline BasicResultItem& operator=(const BasicResultItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicResultItem& default_instance();

  static inline const BasicResultItem* internal_default_instance() {
    return reinterpret_cast<const BasicResultItem*>(
               &_BasicResultItem_default_instance_);
  }

  void Swap(BasicResultItem* other);

  // implements Message ----------------------------------------------

  inline BasicResultItem* New() const PROTOBUF_FINAL { return New(NULL); }

  BasicResultItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BasicResultItem& from);
  void MergeFrom(const BasicResultItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BasicResultItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Distance.chanel Va = 1;
  bool has_va() const;
  void clear_va();
  static const int kVaFieldNumber = 1;
  const ::Distance::chanel& va() const;
  ::Distance::chanel* mutable_va();
  ::Distance::chanel* release_va();
  void set_allocated_va(::Distance::chanel* va);

  // .Distance.chanel Vb = 2;
  bool has_vb() const;
  void clear_vb();
  static const int kVbFieldNumber = 2;
  const ::Distance::chanel& vb() const;
  ::Distance::chanel* mutable_vb();
  ::Distance::chanel* release_vb();
  void set_allocated_vb(::Distance::chanel* vb);

  // .Distance.chanel Vc = 3;
  bool has_vc() const;
  void clear_vc();
  static const int kVcFieldNumber = 3;
  const ::Distance::chanel& vc() const;
  ::Distance::chanel* mutable_vc();
  ::Distance::chanel* release_vc();
  void set_allocated_vc(::Distance::chanel* vc);

  // .Distance.chanel Ia = 4;
  bool has_ia() const;
  void clear_ia();
  static const int kIaFieldNumber = 4;
  const ::Distance::chanel& ia() const;
  ::Distance::chanel* mutable_ia();
  ::Distance::chanel* release_ia();
  void set_allocated_ia(::Distance::chanel* ia);

  // .Distance.chanel Ib = 5;
  bool has_ib() const;
  void clear_ib();
  static const int kIbFieldNumber = 5;
  const ::Distance::chanel& ib() const;
  ::Distance::chanel* mutable_ib();
  ::Distance::chanel* release_ib();
  void set_allocated_ib(::Distance::chanel* ib);

  // .Distance.chanel Ic = 6;
  bool has_ic() const;
  void clear_ic();
  static const int kIcFieldNumber = 6;
  const ::Distance::chanel& ic() const;
  ::Distance::chanel* mutable_ic();
  ::Distance::chanel* release_ic();
  void set_allocated_ic(::Distance::chanel* ic);

  // @@protoc_insertion_point(class_scope:Distance.BasicResultItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Distance::chanel* va_;
  ::Distance::chanel* vb_;
  ::Distance::chanel* vc_;
  ::Distance::chanel* ia_;
  ::Distance::chanel* ib_;
  ::Distance::chanel* ic_;
  mutable int _cached_size_;
  friend struct  protobuf_Distance_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestItem_Distance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Distance.TestItem_Distance) */ {
 public:
  TestItem_Distance();
  virtual ~TestItem_Distance();

  TestItem_Distance(const TestItem_Distance& from);

  inline TestItem_Distance& operator=(const TestItem_Distance& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestItem_Distance& default_instance();

  static inline const TestItem_Distance* internal_default_instance() {
    return reinterpret_cast<const TestItem_Distance*>(
               &_TestItem_Distance_default_instance_);
  }

  void Swap(TestItem_Distance* other);

  // implements Message ----------------------------------------------

  inline TestItem_Distance* New() const PROTOBUF_FINAL { return New(NULL); }

  TestItem_Distance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestItem_Distance& from);
  void MergeFrom(const TestItem_Distance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestItem_Distance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 iIndex = 1;
  void clear_iindex();
  static const int kIIndexFieldNumber = 1;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // .Distance.Error_type errortype = 2;
  void clear_errortype();
  static const int kErrortypeFieldNumber = 2;
  ::Distance::Error_type errortype() const;
  void set_errortype(::Distance::Error_type value);

  // float fdl_zk = 3;
  void clear_fdl_zk();
  static const int kFdlZkFieldNumber = 3;
  float fdl_zk() const;
  void set_fdl_zk(float value);

  // float fZK_Angle = 4;
  void clear_fzk_angle();
  static const int kFZKAngleFieldNumber = 4;
  float fzk_angle() const;
  void set_fzk_angle(float value);

  // float fR = 5;
  void clear_fr();
  static const int kFRFieldNumber = 5;
  float fr() const;
  void set_fr(float value);

  // float fX = 6;
  void clear_fx();
  static const int kFXFieldNumber = 6;
  float fx() const;
  void set_fx(float value);

  // float fDL_I = 7;
  void clear_fdl_i();
  static const int kFDLIFieldNumber = 7;
  float fdl_i() const;
  void set_fdl_i(float value);

  // float fDL_V = 8;
  void clear_fdl_v();
  static const int kFDLVFieldNumber = 8;
  float fdl_v() const;
  void set_fdl_v(float value);

  // .Distance.Error_Dirc dirc = 9;
  void clear_dirc();
  static const int kDircFieldNumber = 9;
  ::Distance::Error_Dirc dirc() const;
  void set_dirc(::Distance::Error_Dirc value);

  // .Distance.Error_Nature nature = 10;
  void clear_nature();
  static const int kNatureFieldNumber = 10;
  ::Distance::Error_Nature nature() const;
  void set_nature(::Distance::Error_Nature value);

  // float fMaxErrorTime = 11;
  void clear_fmaxerrortime();
  static const int kFMaxErrorTimeFieldNumber = 11;
  float fmaxerrortime() const;
  void set_fmaxerrortime(float value);

  // @@protoc_insertion_point(class_scope:Distance.TestItem_Distance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 iindex_;
  int errortype_;
  float fdl_zk_;
  float fzk_angle_;
  float fr_;
  float fx_;
  float fdl_i_;
  float fdl_v_;
  int dirc_;
  int nature_;
  float fmaxerrortime_;
  mutable int _cached_size_;
  friend struct  protobuf_Distance_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestItem_Distance_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Distance.TestItem_Distance_Result) */ {
 public:
  TestItem_Distance_Result();
  virtual ~TestItem_Distance_Result();

  TestItem_Distance_Result(const TestItem_Distance_Result& from);

  inline TestItem_Distance_Result& operator=(const TestItem_Distance_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestItem_Distance_Result& default_instance();

  static inline const TestItem_Distance_Result* internal_default_instance() {
    return reinterpret_cast<const TestItem_Distance_Result*>(
               &_TestItem_Distance_Result_default_instance_);
  }

  void Swap(TestItem_Distance_Result* other);

  // implements Message ----------------------------------------------

  inline TestItem_Distance_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  TestItem_Distance_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestItem_Distance_Result& from);
  void MergeFrom(const TestItem_Distance_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestItem_Distance_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 iIndex = 1;
  void clear_iindex();
  static const int kIIndexFieldNumber = 1;
  ::google::protobuf::uint32 iindex() const;
  void set_iindex(::google::protobuf::uint32 value);

  // float fta = 2;
  void clear_fta();
  static const int kFtaFieldNumber = 2;
  float fta() const;
  void set_fta(float value);

  // float ftb = 3;
  void clear_ftb();
  static const int kFtbFieldNumber = 3;
  float ftb() const;
  void set_ftb(float value);

  // float ftc = 4;
  void clear_ftc();
  static const int kFtcFieldNumber = 4;
  float ftc() const;
  void set_ftc(float value);

  // float fchz = 5;
  void clear_fchz();
  static const int kFchzFieldNumber = 5;
  float fchz() const;
  void set_fchz(float value);

  // float fhjs = 6;
  void clear_fhjs();
  static const int kFhjsFieldNumber = 6;
  float fhjs() const;
  void set_fhjs(float value);

  // float frta = 7;
  void clear_frta();
  static const int kFrtaFieldNumber = 7;
  float frta() const;
  void set_frta(float value);

  // float frtb = 8;
  void clear_frtb();
  static const int kFrtbFieldNumber = 8;
  float frtb() const;
  void set_frtb(float value);

  // float frtc = 9;
  void clear_frtc();
  static const int kFrtcFieldNumber = 9;
  float frtc() const;
  void set_frtc(float value);

  // float frtd = 10;
  void clear_frtd();
  static const int kFrtdFieldNumber = 10;
  float frtd() const;
  void set_frtd(float value);

  // @@protoc_insertion_point(class_scope:Distance.TestItem_Distance_Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 iindex_;
  float fta_;
  float ftb_;
  float ftc_;
  float fchz_;
  float fhjs_;
  float frta_;
  float frtb_;
  float frtc_;
  float frtd_;
  mutable int _cached_size_;
  friend struct  protobuf_Distance_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TestItem_Distance_Switch_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Distance.TestItem_Distance_Switch_State) */ {
 public:
  TestItem_Distance_Switch_State();
  virtual ~TestItem_Distance_Switch_State();

  TestItem_Distance_Switch_State(const TestItem_Distance_Switch_State& from);

  inline TestItem_Distance_Switch_State& operator=(const TestItem_Distance_Switch_State& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestItem_Distance_Switch_State& default_instance();

  static inline const TestItem_Distance_Switch_State* internal_default_instance() {
    return reinterpret_cast<const TestItem_Distance_Switch_State*>(
               &_TestItem_Distance_Switch_State_default_instance_);
  }

  void Swap(TestItem_Distance_Switch_State* other);

  // implements Message ----------------------------------------------

  inline TestItem_Distance_Switch_State* New() const PROTOBUF_FINAL { return New(NULL); }

  TestItem_Distance_Switch_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TestItem_Distance_Switch_State& from);
  void MergeFrom(const TestItem_Distance_Switch_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TestItem_Distance_Switch_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 nibinstate = 1;
  void clear_nibinstate();
  static const int kNibinstateFieldNumber = 1;
  ::google::protobuf::uint32 nibinstate() const;
  void set_nibinstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Distance.TestItem_Distance_Switch_State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 nibinstate_;
  mutable int _cached_size_;
  friend struct  protobuf_Distance_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Items : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Distance.Items) */ {
 public:
  Items();
  virtual ~Items();

  Items(const Items& from);

  inline Items& operator=(const Items& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Items& default_instance();

  static inline const Items* internal_default_instance() {
    return reinterpret_cast<const Items*>(
               &_Items_default_instance_);
  }

  void Swap(Items* other);

  // implements Message ----------------------------------------------

  inline Items* New() const PROTOBUF_FINAL { return New(NULL); }

  Items* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Items& from);
  void MergeFrom(const Items& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Items* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Distance.TestItem_Distance oItems = 4;
  int oitems_size() const;
  void clear_oitems();
  static const int kOItemsFieldNumber = 4;
  const ::Distance::TestItem_Distance& oitems(int index) const;
  ::Distance::TestItem_Distance* mutable_oitems(int index);
  ::Distance::TestItem_Distance* add_oitems();
  ::google::protobuf::RepeatedPtrField< ::Distance::TestItem_Distance >*
      mutable_oitems();
  const ::google::protobuf::RepeatedPtrField< ::Distance::TestItem_Distance >&
      oitems() const;

  // .Distance.CommonPara oComm = 1;
  bool has_ocomm() const;
  void clear_ocomm();
  static const int kOCommFieldNumber = 1;
  const ::Distance::CommonPara& ocomm() const;
  ::Distance::CommonPara* mutable_ocomm();
  ::Distance::CommonPara* release_ocomm();
  void set_allocated_ocomm(::Distance::CommonPara* ocomm);

  // .RelaySwitchOut.SwitchPara oSwitch = 2;
  bool has_oswitch() const;
  void clear_oswitch();
  static const int kOSwitchFieldNumber = 2;
  const ::RelaySwitchOut::SwitchPara& oswitch() const;
  ::RelaySwitchOut::SwitchPara* mutable_oswitch();
  ::RelaySwitchOut::SwitchPara* release_oswitch();
  void set_allocated_oswitch(::RelaySwitchOut::SwitchPara* oswitch);

  // .Distance.MarkPara oMarkSet = 3;
  bool has_omarkset() const;
  void clear_omarkset();
  static const int kOMarkSetFieldNumber = 3;
  const ::Distance::MarkPara& omarkset() const;
  ::Distance::MarkPara* mutable_omarkset();
  ::Distance::MarkPara* release_omarkset();
  void set_allocated_omarkset(::Distance::MarkPara* omarkset);

  // .Distance.OutPutType outputType = 5;
  void clear_outputtype();
  static const int kOutputTypeFieldNumber = 5;
  ::Distance::OutPutType outputtype() const;
  void set_outputtype(::Distance::OutPutType value);

  // @@protoc_insertion_point(class_scope:Distance.Items)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Distance::TestItem_Distance > oitems_;
  ::Distance::CommonPara* ocomm_;
  ::RelaySwitchOut::SwitchPara* oswitch_;
  ::Distance::MarkPara* omarkset_;
  int outputtype_;
  mutable int _cached_size_;
  friend struct  protobuf_Distance_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarkPara : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Distance.MarkPara) */ {
 public:
  MarkPara();
  virtual ~MarkPara();

  MarkPara(const MarkPara& from);

  inline MarkPara& operator=(const MarkPara& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkPara& default_instance();

  static inline const MarkPara* internal_default_instance() {
    return reinterpret_cast<const MarkPara*>(
               &_MarkPara_default_instance_);
  }

  void Swap(MarkPara* other);

  // implements Message ----------------------------------------------

  inline MarkPara* New() const PROTOBUF_FINAL { return New(NULL); }

  MarkPara* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarkPara& from);
  void MergeFrom(const MarkPara& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarkPara* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float fJd_Dis1_Val = 1;
  void clear_fjd_dis1_val();
  static const int kFJdDis1ValFieldNumber = 1;
  float fjd_dis1_val() const;
  void set_fjd_dis1_val(float value);

  // float fJd_Dis2_Val = 2;
  void clear_fjd_dis2_val();
  static const int kFJdDis2ValFieldNumber = 2;
  float fjd_dis2_val() const;
  void set_fjd_dis2_val(float value);

  // float fJd_Dis3_Val = 3;
  void clear_fjd_dis3_val();
  static const int kFJdDis3ValFieldNumber = 3;
  float fjd_dis3_val() const;
  void set_fjd_dis3_val(float value);

  // float fJd_Dis4_Val = 4;
  void clear_fjd_dis4_val();
  static const int kFJdDis4ValFieldNumber = 4;
  float fjd_dis4_val() const;
  void set_fjd_dis4_val(float value);

  // float fJd_Dis5_Val = 5;
  void clear_fjd_dis5_val();
  static const int kFJdDis5ValFieldNumber = 5;
  float fjd_dis5_val() const;
  void set_fjd_dis5_val(float value);

  // float fXj_Dis1_Val = 6;
  void clear_fxj_dis1_val();
  static const int kFXjDis1ValFieldNumber = 6;
  float fxj_dis1_val() const;
  void set_fxj_dis1_val(float value);

  // float fXj_Dis2_Val = 7;
  void clear_fxj_dis2_val();
  static const int kFXjDis2ValFieldNumber = 7;
  float fxj_dis2_val() const;
  void set_fxj_dis2_val(float value);

  // float fXj_Dis3_Val = 8;
  void clear_fxj_dis3_val();
  static const int kFXjDis3ValFieldNumber = 8;
  float fxj_dis3_val() const;
  void set_fxj_dis3_val(float value);

  // float fXj_Dis4_Val = 9;
  void clear_fxj_dis4_val();
  static const int kFXjDis4ValFieldNumber = 9;
  float fxj_dis4_val() const;
  void set_fxj_dis4_val(float value);

  // float fXj_Dis5_Val = 10;
  void clear_fxj_dis5_val();
  static const int kFXjDis5ValFieldNumber = 10;
  float fxj_dis5_val() const;
  void set_fxj_dis5_val(float value);

  // float fJd_Dis1_Time = 11;
  void clear_fjd_dis1_time();
  static const int kFJdDis1TimeFieldNumber = 11;
  float fjd_dis1_time() const;
  void set_fjd_dis1_time(float value);

  // float fJd_Dis2_Time = 12;
  void clear_fjd_dis2_time();
  static const int kFJdDis2TimeFieldNumber = 12;
  float fjd_dis2_time() const;
  void set_fjd_dis2_time(float value);

  // float fJd_Dis3_Time = 13;
  void clear_fjd_dis3_time();
  static const int kFJdDis3TimeFieldNumber = 13;
  float fjd_dis3_time() const;
  void set_fjd_dis3_time(float value);

  // float fJd_Dis4_Time = 14;
  void clear_fjd_dis4_time();
  static const int kFJdDis4TimeFieldNumber = 14;
  float fjd_dis4_time() const;
  void set_fjd_dis4_time(float value);

  // float fJd_Dis5_Time = 15;
  void clear_fjd_dis5_time();
  static const int kFJdDis5TimeFieldNumber = 15;
  float fjd_dis5_time() const;
  void set_fjd_dis5_time(float value);

  // float fXj_Dis1_Time = 16;
  void clear_fxj_dis1_time();
  static const int kFXjDis1TimeFieldNumber = 16;
  float fxj_dis1_time() const;
  void set_fxj_dis1_time(float value);

  // float fXj_Dis2_Time = 17;
  void clear_fxj_dis2_time();
  static const int kFXjDis2TimeFieldNumber = 17;
  float fxj_dis2_time() const;
  void set_fxj_dis2_time(float value);

  // float fXj_Dis3_Time = 18;
  void clear_fxj_dis3_time();
  static const int kFXjDis3TimeFieldNumber = 18;
  float fxj_dis3_time() const;
  void set_fxj_dis3_time(float value);

  // float fXj_Dis4_Time = 19;
  void clear_fxj_dis4_time();
  static const int kFXjDis4TimeFieldNumber = 19;
  float fxj_dis4_time() const;
  void set_fxj_dis4_time(float value);

  // float fXj_Dis5_Time = 20;
  void clear_fxj_dis5_time();
  static const int kFXjDis5TimeFieldNumber = 20;
  float fxj_dis5_time() const;
  void set_fxj_dis5_time(float value);

  // .Distance.KoMode Emode = 21;
  void clear_emode();
  static const int kEmodeFieldNumber = 21;
  ::Distance::KoMode emode() const;
  void set_emode(::Distance::KoMode value);

  // float fKoOrRe = 22;
  void clear_fkoorre();
  static const int kFKoOrReFieldNumber = 22;
  float fkoorre() const;
  void set_fkoorre(float value);

  // float fPhiOrIm = 23;
  void clear_fphiorim();
  static const int kFPhiOrImFieldNumber = 23;
  float fphiorim() const;
  void set_fphiorim(float value);

  // @@protoc_insertion_point(class_scope:Distance.MarkPara)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float fjd_dis1_val_;
  float fjd_dis2_val_;
  float fjd_dis3_val_;
  float fjd_dis4_val_;
  float fjd_dis5_val_;
  float fxj_dis1_val_;
  float fxj_dis2_val_;
  float fxj_dis3_val_;
  float fxj_dis4_val_;
  float fxj_dis5_val_;
  float fjd_dis1_time_;
  float fjd_dis2_time_;
  float fjd_dis3_time_;
  float fjd_dis4_time_;
  float fjd_dis5_time_;
  float fxj_dis1_time_;
  float fxj_dis2_time_;
  float fxj_dis3_time_;
  float fxj_dis4_time_;
  float fxj_dis5_time_;
  int emode_;
  float fkoorre_;
  float fphiorim_;
  mutable int _cached_size_;
  friend struct  protobuf_Distance_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CommonPara : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Distance.CommonPara) */ {
 public:
  CommonPara();
  virtual ~CommonPara();

  CommonPara(const CommonPara& from);

  inline CommonPara& operator=(const CommonPara& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonPara& default_instance();

  static inline const CommonPara* internal_default_instance() {
    return reinterpret_cast<const CommonPara*>(
               &_CommonPara_default_instance_);
  }

  void Swap(CommonPara* other);

  // implements Message ----------------------------------------------

  inline CommonPara* New() const PROTOBUF_FINAL { return New(NULL); }

  CommonPara* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommonPara& from);
  void MergeFrom(const CommonPara& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommonPara* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float EDV = 1;
  void clear_edv();
  static const int kEDVFieldNumber = 1;
  float edv() const;
  void set_edv(float value);

  // float EDI = 2;
  void clear_edi();
  static const int kEDIFieldNumber = 2;
  float edi() const;
  void set_edi(float value);

  // float EDHZ = 3;
  void clear_edhz();
  static const int kEDHZFieldNumber = 3;
  float edhz() const;
  void set_edhz(float value);

  // float PreFaultTime = 4;
  void clear_prefaulttime();
  static const int kPreFaultTimeFieldNumber = 4;
  float prefaulttime() const;
  void set_prefaulttime(float value);

  // float PostFaultTime = 5;
  void clear_postfaulttime();
  static const int kPostFaultTimeFieldNumber = 5;
  float postfaulttime() const;
  void set_postfaulttime(float value);

  // .Distance.FaultTrigeMode eFaultTrigMode = 6;
  void clear_efaulttrigmode();
  static const int kEFaultTrigModeFieldNumber = 6;
  ::Distance::FaultTrigeMode efaulttrigmode() const;
  void set_efaulttrigmode(::Distance::FaultTrigeMode value);

  // .Distance.PTCON ePTCON = 7;
  void clear_eptcon();
  static const int kEPTCONFieldNumber = 7;
  ::Distance::PTCON eptcon() const;
  void set_eptcon(::Distance::PTCON value);

  // .Distance.CTPOINT eCTPOINT = 8;
  void clear_ectpoint();
  static const int kECTPOINTFieldNumber = 8;
  ::Distance::CTPOINT ectpoint() const;
  void set_ectpoint(::Distance::CTPOINT value);

  // .Distance.BCSIMULATION eBCSIMULATION = 9;
  void clear_ebcsimulation();
  static const int kEBCSIMULATIONFieldNumber = 9;
  ::Distance::BCSIMULATION ebcsimulation() const;
  void set_ebcsimulation(::Distance::BCSIMULATION value);

  // float TripTime = 10;
  void clear_triptime();
  static const int kTripTimeFieldNumber = 10;
  float triptime() const;
  void set_triptime(float value);

  // float CloseTime = 11;
  void clear_closetime();
  static const int kCloseTimeFieldNumber = 11;
  float closetime() const;
  void set_closetime(float value);

  // .Distance.RXS eRXS = 12;
  void clear_erxs();
  static const int kERXSFieldNumber = 12;
  ::Distance::RXS erxs() const;
  void set_erxs(::Distance::RXS value);

  // .Distance.VZDEFINE eVZDEFINE = 13;
  void clear_evzdefine();
  static const int kEVZDEFINEFieldNumber = 13;
  ::Distance::VZDEFINE evzdefine() const;
  void set_evzdefine(::Distance::VZDEFINE value);

  // .Distance.VZPHDEFINE eVZPHDEFINE = 14;
  void clear_evzphdefine();
  static const int kEVZPHDEFINEFieldNumber = 14;
  ::Distance::VZPHDEFINE evzphdefine() const;
  void set_evzphdefine(::Distance::VZPHDEFINE value);

  // float VzPhdiff = 15;
  void clear_vzphdiff();
  static const int kVzPhdiffFieldNumber = 15;
  float vzphdiff() const;
  void set_vzphdiff(float value);

  // float GpsTime = 16;
  void clear_gpstime();
  static const int kGpsTimeFieldNumber = 16;
  float gpstime() const;
  void set_gpstime(float value);

  // uint32 SwitchChanel = 17;
  void clear_switchchanel();
  static const int kSwitchChanelFieldNumber = 17;
  ::google::protobuf::uint32 switchchanel() const;
  void set_switchchanel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Distance.CommonPara)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float edv_;
  float edi_;
  float edhz_;
  float prefaulttime_;
  float postfaulttime_;
  int efaulttrigmode_;
  int eptcon_;
  int ectpoint_;
  int ebcsimulation_;
  float triptime_;
  float closetime_;
  int erxs_;
  int evzdefine_;
  int evzphdefine_;
  float vzphdiff_;
  float gpstime_;
  ::google::protobuf::uint32 switchchanel_;
  mutable int _cached_size_;
  friend struct  protobuf_Distance_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// chanel

// float famptitude = 1;
inline void chanel::clear_famptitude() {
  famptitude_ = 0;
}
inline float chanel::famptitude() const {
  // @@protoc_insertion_point(field_get:Distance.chanel.famptitude)
  return famptitude_;
}
inline void chanel::set_famptitude(float value) {
  
  famptitude_ = value;
  // @@protoc_insertion_point(field_set:Distance.chanel.famptitude)
}

// float fphase = 2;
inline void chanel::clear_fphase() {
  fphase_ = 0;
}
inline float chanel::fphase() const {
  // @@protoc_insertion_point(field_get:Distance.chanel.fphase)
  return fphase_;
}
inline void chanel::set_fphase(float value) {
  
  fphase_ = value;
  // @@protoc_insertion_point(field_set:Distance.chanel.fphase)
}

// -------------------------------------------------------------------

// BasicResultItem

// .Distance.chanel Va = 1;
inline bool BasicResultItem::has_va() const {
  return this != internal_default_instance() && va_ != NULL;
}
inline void BasicResultItem::clear_va() {
  if (GetArenaNoVirtual() == NULL && va_ != NULL) delete va_;
  va_ = NULL;
}
inline const ::Distance::chanel& BasicResultItem::va() const {
  // @@protoc_insertion_point(field_get:Distance.BasicResultItem.Va)
  return va_ != NULL ? *va_
                         : *::Distance::chanel::internal_default_instance();
}
inline ::Distance::chanel* BasicResultItem::mutable_va() {
  
  if (va_ == NULL) {
    va_ = new ::Distance::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Distance.BasicResultItem.Va)
  return va_;
}
inline ::Distance::chanel* BasicResultItem::release_va() {
  // @@protoc_insertion_point(field_release:Distance.BasicResultItem.Va)
  
  ::Distance::chanel* temp = va_;
  va_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_va(::Distance::chanel* va) {
  delete va_;
  va_ = va;
  if (va) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Distance.BasicResultItem.Va)
}

// .Distance.chanel Vb = 2;
inline bool BasicResultItem::has_vb() const {
  return this != internal_default_instance() && vb_ != NULL;
}
inline void BasicResultItem::clear_vb() {
  if (GetArenaNoVirtual() == NULL && vb_ != NULL) delete vb_;
  vb_ = NULL;
}
inline const ::Distance::chanel& BasicResultItem::vb() const {
  // @@protoc_insertion_point(field_get:Distance.BasicResultItem.Vb)
  return vb_ != NULL ? *vb_
                         : *::Distance::chanel::internal_default_instance();
}
inline ::Distance::chanel* BasicResultItem::mutable_vb() {
  
  if (vb_ == NULL) {
    vb_ = new ::Distance::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Distance.BasicResultItem.Vb)
  return vb_;
}
inline ::Distance::chanel* BasicResultItem::release_vb() {
  // @@protoc_insertion_point(field_release:Distance.BasicResultItem.Vb)
  
  ::Distance::chanel* temp = vb_;
  vb_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_vb(::Distance::chanel* vb) {
  delete vb_;
  vb_ = vb;
  if (vb) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Distance.BasicResultItem.Vb)
}

// .Distance.chanel Vc = 3;
inline bool BasicResultItem::has_vc() const {
  return this != internal_default_instance() && vc_ != NULL;
}
inline void BasicResultItem::clear_vc() {
  if (GetArenaNoVirtual() == NULL && vc_ != NULL) delete vc_;
  vc_ = NULL;
}
inline const ::Distance::chanel& BasicResultItem::vc() const {
  // @@protoc_insertion_point(field_get:Distance.BasicResultItem.Vc)
  return vc_ != NULL ? *vc_
                         : *::Distance::chanel::internal_default_instance();
}
inline ::Distance::chanel* BasicResultItem::mutable_vc() {
  
  if (vc_ == NULL) {
    vc_ = new ::Distance::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Distance.BasicResultItem.Vc)
  return vc_;
}
inline ::Distance::chanel* BasicResultItem::release_vc() {
  // @@protoc_insertion_point(field_release:Distance.BasicResultItem.Vc)
  
  ::Distance::chanel* temp = vc_;
  vc_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_vc(::Distance::chanel* vc) {
  delete vc_;
  vc_ = vc;
  if (vc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Distance.BasicResultItem.Vc)
}

// .Distance.chanel Ia = 4;
inline bool BasicResultItem::has_ia() const {
  return this != internal_default_instance() && ia_ != NULL;
}
inline void BasicResultItem::clear_ia() {
  if (GetArenaNoVirtual() == NULL && ia_ != NULL) delete ia_;
  ia_ = NULL;
}
inline const ::Distance::chanel& BasicResultItem::ia() const {
  // @@protoc_insertion_point(field_get:Distance.BasicResultItem.Ia)
  return ia_ != NULL ? *ia_
                         : *::Distance::chanel::internal_default_instance();
}
inline ::Distance::chanel* BasicResultItem::mutable_ia() {
  
  if (ia_ == NULL) {
    ia_ = new ::Distance::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Distance.BasicResultItem.Ia)
  return ia_;
}
inline ::Distance::chanel* BasicResultItem::release_ia() {
  // @@protoc_insertion_point(field_release:Distance.BasicResultItem.Ia)
  
  ::Distance::chanel* temp = ia_;
  ia_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_ia(::Distance::chanel* ia) {
  delete ia_;
  ia_ = ia;
  if (ia) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Distance.BasicResultItem.Ia)
}

// .Distance.chanel Ib = 5;
inline bool BasicResultItem::has_ib() const {
  return this != internal_default_instance() && ib_ != NULL;
}
inline void BasicResultItem::clear_ib() {
  if (GetArenaNoVirtual() == NULL && ib_ != NULL) delete ib_;
  ib_ = NULL;
}
inline const ::Distance::chanel& BasicResultItem::ib() const {
  // @@protoc_insertion_point(field_get:Distance.BasicResultItem.Ib)
  return ib_ != NULL ? *ib_
                         : *::Distance::chanel::internal_default_instance();
}
inline ::Distance::chanel* BasicResultItem::mutable_ib() {
  
  if (ib_ == NULL) {
    ib_ = new ::Distance::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Distance.BasicResultItem.Ib)
  return ib_;
}
inline ::Distance::chanel* BasicResultItem::release_ib() {
  // @@protoc_insertion_point(field_release:Distance.BasicResultItem.Ib)
  
  ::Distance::chanel* temp = ib_;
  ib_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_ib(::Distance::chanel* ib) {
  delete ib_;
  ib_ = ib;
  if (ib) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Distance.BasicResultItem.Ib)
}

// .Distance.chanel Ic = 6;
inline bool BasicResultItem::has_ic() const {
  return this != internal_default_instance() && ic_ != NULL;
}
inline void BasicResultItem::clear_ic() {
  if (GetArenaNoVirtual() == NULL && ic_ != NULL) delete ic_;
  ic_ = NULL;
}
inline const ::Distance::chanel& BasicResultItem::ic() const {
  // @@protoc_insertion_point(field_get:Distance.BasicResultItem.Ic)
  return ic_ != NULL ? *ic_
                         : *::Distance::chanel::internal_default_instance();
}
inline ::Distance::chanel* BasicResultItem::mutable_ic() {
  
  if (ic_ == NULL) {
    ic_ = new ::Distance::chanel;
  }
  // @@protoc_insertion_point(field_mutable:Distance.BasicResultItem.Ic)
  return ic_;
}
inline ::Distance::chanel* BasicResultItem::release_ic() {
  // @@protoc_insertion_point(field_release:Distance.BasicResultItem.Ic)
  
  ::Distance::chanel* temp = ic_;
  ic_ = NULL;
  return temp;
}
inline void BasicResultItem::set_allocated_ic(::Distance::chanel* ic) {
  delete ic_;
  ic_ = ic;
  if (ic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Distance.BasicResultItem.Ic)
}

// -------------------------------------------------------------------

// TestItem_Distance

// uint32 iIndex = 1;
inline void TestItem_Distance::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_Distance::iindex() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance.iIndex)
  return iindex_;
}
inline void TestItem_Distance::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance.iIndex)
}

// .Distance.Error_type errortype = 2;
inline void TestItem_Distance::clear_errortype() {
  errortype_ = 0;
}
inline ::Distance::Error_type TestItem_Distance::errortype() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance.errortype)
  return static_cast< ::Distance::Error_type >(errortype_);
}
inline void TestItem_Distance::set_errortype(::Distance::Error_type value) {
  
  errortype_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance.errortype)
}

// float fdl_zk = 3;
inline void TestItem_Distance::clear_fdl_zk() {
  fdl_zk_ = 0;
}
inline float TestItem_Distance::fdl_zk() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance.fdl_zk)
  return fdl_zk_;
}
inline void TestItem_Distance::set_fdl_zk(float value) {
  
  fdl_zk_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance.fdl_zk)
}

// float fZK_Angle = 4;
inline void TestItem_Distance::clear_fzk_angle() {
  fzk_angle_ = 0;
}
inline float TestItem_Distance::fzk_angle() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance.fZK_Angle)
  return fzk_angle_;
}
inline void TestItem_Distance::set_fzk_angle(float value) {
  
  fzk_angle_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance.fZK_Angle)
}

// float fR = 5;
inline void TestItem_Distance::clear_fr() {
  fr_ = 0;
}
inline float TestItem_Distance::fr() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance.fR)
  return fr_;
}
inline void TestItem_Distance::set_fr(float value) {
  
  fr_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance.fR)
}

// float fX = 6;
inline void TestItem_Distance::clear_fx() {
  fx_ = 0;
}
inline float TestItem_Distance::fx() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance.fX)
  return fx_;
}
inline void TestItem_Distance::set_fx(float value) {
  
  fx_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance.fX)
}

// float fDL_I = 7;
inline void TestItem_Distance::clear_fdl_i() {
  fdl_i_ = 0;
}
inline float TestItem_Distance::fdl_i() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance.fDL_I)
  return fdl_i_;
}
inline void TestItem_Distance::set_fdl_i(float value) {
  
  fdl_i_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance.fDL_I)
}

// float fDL_V = 8;
inline void TestItem_Distance::clear_fdl_v() {
  fdl_v_ = 0;
}
inline float TestItem_Distance::fdl_v() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance.fDL_V)
  return fdl_v_;
}
inline void TestItem_Distance::set_fdl_v(float value) {
  
  fdl_v_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance.fDL_V)
}

// .Distance.Error_Dirc dirc = 9;
inline void TestItem_Distance::clear_dirc() {
  dirc_ = 0;
}
inline ::Distance::Error_Dirc TestItem_Distance::dirc() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance.dirc)
  return static_cast< ::Distance::Error_Dirc >(dirc_);
}
inline void TestItem_Distance::set_dirc(::Distance::Error_Dirc value) {
  
  dirc_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance.dirc)
}

// .Distance.Error_Nature nature = 10;
inline void TestItem_Distance::clear_nature() {
  nature_ = 0;
}
inline ::Distance::Error_Nature TestItem_Distance::nature() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance.nature)
  return static_cast< ::Distance::Error_Nature >(nature_);
}
inline void TestItem_Distance::set_nature(::Distance::Error_Nature value) {
  
  nature_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance.nature)
}

// float fMaxErrorTime = 11;
inline void TestItem_Distance::clear_fmaxerrortime() {
  fmaxerrortime_ = 0;
}
inline float TestItem_Distance::fmaxerrortime() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance.fMaxErrorTime)
  return fmaxerrortime_;
}
inline void TestItem_Distance::set_fmaxerrortime(float value) {
  
  fmaxerrortime_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance.fMaxErrorTime)
}

// -------------------------------------------------------------------

// TestItem_Distance_Result

// uint32 iIndex = 1;
inline void TestItem_Distance_Result::clear_iindex() {
  iindex_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_Distance_Result::iindex() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance_Result.iIndex)
  return iindex_;
}
inline void TestItem_Distance_Result::set_iindex(::google::protobuf::uint32 value) {
  
  iindex_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance_Result.iIndex)
}

// float fta = 2;
inline void TestItem_Distance_Result::clear_fta() {
  fta_ = 0;
}
inline float TestItem_Distance_Result::fta() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance_Result.fta)
  return fta_;
}
inline void TestItem_Distance_Result::set_fta(float value) {
  
  fta_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance_Result.fta)
}

// float ftb = 3;
inline void TestItem_Distance_Result::clear_ftb() {
  ftb_ = 0;
}
inline float TestItem_Distance_Result::ftb() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance_Result.ftb)
  return ftb_;
}
inline void TestItem_Distance_Result::set_ftb(float value) {
  
  ftb_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance_Result.ftb)
}

// float ftc = 4;
inline void TestItem_Distance_Result::clear_ftc() {
  ftc_ = 0;
}
inline float TestItem_Distance_Result::ftc() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance_Result.ftc)
  return ftc_;
}
inline void TestItem_Distance_Result::set_ftc(float value) {
  
  ftc_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance_Result.ftc)
}

// float fchz = 5;
inline void TestItem_Distance_Result::clear_fchz() {
  fchz_ = 0;
}
inline float TestItem_Distance_Result::fchz() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance_Result.fchz)
  return fchz_;
}
inline void TestItem_Distance_Result::set_fchz(float value) {
  
  fchz_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance_Result.fchz)
}

// float fhjs = 6;
inline void TestItem_Distance_Result::clear_fhjs() {
  fhjs_ = 0;
}
inline float TestItem_Distance_Result::fhjs() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance_Result.fhjs)
  return fhjs_;
}
inline void TestItem_Distance_Result::set_fhjs(float value) {
  
  fhjs_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance_Result.fhjs)
}

// float frta = 7;
inline void TestItem_Distance_Result::clear_frta() {
  frta_ = 0;
}
inline float TestItem_Distance_Result::frta() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance_Result.frta)
  return frta_;
}
inline void TestItem_Distance_Result::set_frta(float value) {
  
  frta_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance_Result.frta)
}

// float frtb = 8;
inline void TestItem_Distance_Result::clear_frtb() {
  frtb_ = 0;
}
inline float TestItem_Distance_Result::frtb() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance_Result.frtb)
  return frtb_;
}
inline void TestItem_Distance_Result::set_frtb(float value) {
  
  frtb_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance_Result.frtb)
}

// float frtc = 9;
inline void TestItem_Distance_Result::clear_frtc() {
  frtc_ = 0;
}
inline float TestItem_Distance_Result::frtc() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance_Result.frtc)
  return frtc_;
}
inline void TestItem_Distance_Result::set_frtc(float value) {
  
  frtc_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance_Result.frtc)
}

// float frtd = 10;
inline void TestItem_Distance_Result::clear_frtd() {
  frtd_ = 0;
}
inline float TestItem_Distance_Result::frtd() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance_Result.frtd)
  return frtd_;
}
inline void TestItem_Distance_Result::set_frtd(float value) {
  
  frtd_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance_Result.frtd)
}

// -------------------------------------------------------------------

// TestItem_Distance_Switch_State

// uint32 nibinstate = 1;
inline void TestItem_Distance_Switch_State::clear_nibinstate() {
  nibinstate_ = 0u;
}
inline ::google::protobuf::uint32 TestItem_Distance_Switch_State::nibinstate() const {
  // @@protoc_insertion_point(field_get:Distance.TestItem_Distance_Switch_State.nibinstate)
  return nibinstate_;
}
inline void TestItem_Distance_Switch_State::set_nibinstate(::google::protobuf::uint32 value) {
  
  nibinstate_ = value;
  // @@protoc_insertion_point(field_set:Distance.TestItem_Distance_Switch_State.nibinstate)
}

// -------------------------------------------------------------------

// Items

// .Distance.CommonPara oComm = 1;
inline bool Items::has_ocomm() const {
  return this != internal_default_instance() && ocomm_ != NULL;
}
inline void Items::clear_ocomm() {
  if (GetArenaNoVirtual() == NULL && ocomm_ != NULL) delete ocomm_;
  ocomm_ = NULL;
}
inline const ::Distance::CommonPara& Items::ocomm() const {
  // @@protoc_insertion_point(field_get:Distance.Items.oComm)
  return ocomm_ != NULL ? *ocomm_
                         : *::Distance::CommonPara::internal_default_instance();
}
inline ::Distance::CommonPara* Items::mutable_ocomm() {
  
  if (ocomm_ == NULL) {
    ocomm_ = new ::Distance::CommonPara;
  }
  // @@protoc_insertion_point(field_mutable:Distance.Items.oComm)
  return ocomm_;
}
inline ::Distance::CommonPara* Items::release_ocomm() {
  // @@protoc_insertion_point(field_release:Distance.Items.oComm)
  
  ::Distance::CommonPara* temp = ocomm_;
  ocomm_ = NULL;
  return temp;
}
inline void Items::set_allocated_ocomm(::Distance::CommonPara* ocomm) {
  delete ocomm_;
  ocomm_ = ocomm;
  if (ocomm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Distance.Items.oComm)
}

// .RelaySwitchOut.SwitchPara oSwitch = 2;
inline bool Items::has_oswitch() const {
  return this != internal_default_instance() && oswitch_ != NULL;
}
inline void Items::clear_oswitch() {
  if (GetArenaNoVirtual() == NULL && oswitch_ != NULL) delete oswitch_;
  oswitch_ = NULL;
}
inline const ::RelaySwitchOut::SwitchPara& Items::oswitch() const {
  // @@protoc_insertion_point(field_get:Distance.Items.oSwitch)
  return oswitch_ != NULL ? *oswitch_
                         : *::RelaySwitchOut::SwitchPara::internal_default_instance();
}
inline ::RelaySwitchOut::SwitchPara* Items::mutable_oswitch() {
  
  if (oswitch_ == NULL) {
    oswitch_ = new ::RelaySwitchOut::SwitchPara;
  }
  // @@protoc_insertion_point(field_mutable:Distance.Items.oSwitch)
  return oswitch_;
}
inline ::RelaySwitchOut::SwitchPara* Items::release_oswitch() {
  // @@protoc_insertion_point(field_release:Distance.Items.oSwitch)
  
  ::RelaySwitchOut::SwitchPara* temp = oswitch_;
  oswitch_ = NULL;
  return temp;
}
inline void Items::set_allocated_oswitch(::RelaySwitchOut::SwitchPara* oswitch) {
  delete oswitch_;
  oswitch_ = oswitch;
  if (oswitch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Distance.Items.oSwitch)
}

// .Distance.MarkPara oMarkSet = 3;
inline bool Items::has_omarkset() const {
  return this != internal_default_instance() && omarkset_ != NULL;
}
inline void Items::clear_omarkset() {
  if (GetArenaNoVirtual() == NULL && omarkset_ != NULL) delete omarkset_;
  omarkset_ = NULL;
}
inline const ::Distance::MarkPara& Items::omarkset() const {
  // @@protoc_insertion_point(field_get:Distance.Items.oMarkSet)
  return omarkset_ != NULL ? *omarkset_
                         : *::Distance::MarkPara::internal_default_instance();
}
inline ::Distance::MarkPara* Items::mutable_omarkset() {
  
  if (omarkset_ == NULL) {
    omarkset_ = new ::Distance::MarkPara;
  }
  // @@protoc_insertion_point(field_mutable:Distance.Items.oMarkSet)
  return omarkset_;
}
inline ::Distance::MarkPara* Items::release_omarkset() {
  // @@protoc_insertion_point(field_release:Distance.Items.oMarkSet)
  
  ::Distance::MarkPara* temp = omarkset_;
  omarkset_ = NULL;
  return temp;
}
inline void Items::set_allocated_omarkset(::Distance::MarkPara* omarkset) {
  delete omarkset_;
  omarkset_ = omarkset;
  if (omarkset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Distance.Items.oMarkSet)
}

// repeated .Distance.TestItem_Distance oItems = 4;
inline int Items::oitems_size() const {
  return oitems_.size();
}
inline void Items::clear_oitems() {
  oitems_.Clear();
}
inline const ::Distance::TestItem_Distance& Items::oitems(int index) const {
  // @@protoc_insertion_point(field_get:Distance.Items.oItems)
  return oitems_.Get(index);
}
inline ::Distance::TestItem_Distance* Items::mutable_oitems(int index) {
  // @@protoc_insertion_point(field_mutable:Distance.Items.oItems)
  return oitems_.Mutable(index);
}
inline ::Distance::TestItem_Distance* Items::add_oitems() {
  // @@protoc_insertion_point(field_add:Distance.Items.oItems)
  return oitems_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Distance::TestItem_Distance >*
Items::mutable_oitems() {
  // @@protoc_insertion_point(field_mutable_list:Distance.Items.oItems)
  return &oitems_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Distance::TestItem_Distance >&
Items::oitems() const {
  // @@protoc_insertion_point(field_list:Distance.Items.oItems)
  return oitems_;
}

// .Distance.OutPutType outputType = 5;
inline void Items::clear_outputtype() {
  outputtype_ = 0;
}
inline ::Distance::OutPutType Items::outputtype() const {
  // @@protoc_insertion_point(field_get:Distance.Items.outputType)
  return static_cast< ::Distance::OutPutType >(outputtype_);
}
inline void Items::set_outputtype(::Distance::OutPutType value) {
  
  outputtype_ = value;
  // @@protoc_insertion_point(field_set:Distance.Items.outputType)
}

// -------------------------------------------------------------------

// MarkPara

// float fJd_Dis1_Val = 1;
inline void MarkPara::clear_fjd_dis1_val() {
  fjd_dis1_val_ = 0;
}
inline float MarkPara::fjd_dis1_val() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fJd_Dis1_Val)
  return fjd_dis1_val_;
}
inline void MarkPara::set_fjd_dis1_val(float value) {
  
  fjd_dis1_val_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fJd_Dis1_Val)
}

// float fJd_Dis2_Val = 2;
inline void MarkPara::clear_fjd_dis2_val() {
  fjd_dis2_val_ = 0;
}
inline float MarkPara::fjd_dis2_val() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fJd_Dis2_Val)
  return fjd_dis2_val_;
}
inline void MarkPara::set_fjd_dis2_val(float value) {
  
  fjd_dis2_val_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fJd_Dis2_Val)
}

// float fJd_Dis3_Val = 3;
inline void MarkPara::clear_fjd_dis3_val() {
  fjd_dis3_val_ = 0;
}
inline float MarkPara::fjd_dis3_val() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fJd_Dis3_Val)
  return fjd_dis3_val_;
}
inline void MarkPara::set_fjd_dis3_val(float value) {
  
  fjd_dis3_val_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fJd_Dis3_Val)
}

// float fJd_Dis4_Val = 4;
inline void MarkPara::clear_fjd_dis4_val() {
  fjd_dis4_val_ = 0;
}
inline float MarkPara::fjd_dis4_val() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fJd_Dis4_Val)
  return fjd_dis4_val_;
}
inline void MarkPara::set_fjd_dis4_val(float value) {
  
  fjd_dis4_val_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fJd_Dis4_Val)
}

// float fJd_Dis5_Val = 5;
inline void MarkPara::clear_fjd_dis5_val() {
  fjd_dis5_val_ = 0;
}
inline float MarkPara::fjd_dis5_val() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fJd_Dis5_Val)
  return fjd_dis5_val_;
}
inline void MarkPara::set_fjd_dis5_val(float value) {
  
  fjd_dis5_val_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fJd_Dis5_Val)
}

// float fXj_Dis1_Val = 6;
inline void MarkPara::clear_fxj_dis1_val() {
  fxj_dis1_val_ = 0;
}
inline float MarkPara::fxj_dis1_val() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fXj_Dis1_Val)
  return fxj_dis1_val_;
}
inline void MarkPara::set_fxj_dis1_val(float value) {
  
  fxj_dis1_val_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fXj_Dis1_Val)
}

// float fXj_Dis2_Val = 7;
inline void MarkPara::clear_fxj_dis2_val() {
  fxj_dis2_val_ = 0;
}
inline float MarkPara::fxj_dis2_val() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fXj_Dis2_Val)
  return fxj_dis2_val_;
}
inline void MarkPara::set_fxj_dis2_val(float value) {
  
  fxj_dis2_val_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fXj_Dis2_Val)
}

// float fXj_Dis3_Val = 8;
inline void MarkPara::clear_fxj_dis3_val() {
  fxj_dis3_val_ = 0;
}
inline float MarkPara::fxj_dis3_val() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fXj_Dis3_Val)
  return fxj_dis3_val_;
}
inline void MarkPara::set_fxj_dis3_val(float value) {
  
  fxj_dis3_val_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fXj_Dis3_Val)
}

// float fXj_Dis4_Val = 9;
inline void MarkPara::clear_fxj_dis4_val() {
  fxj_dis4_val_ = 0;
}
inline float MarkPara::fxj_dis4_val() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fXj_Dis4_Val)
  return fxj_dis4_val_;
}
inline void MarkPara::set_fxj_dis4_val(float value) {
  
  fxj_dis4_val_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fXj_Dis4_Val)
}

// float fXj_Dis5_Val = 10;
inline void MarkPara::clear_fxj_dis5_val() {
  fxj_dis5_val_ = 0;
}
inline float MarkPara::fxj_dis5_val() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fXj_Dis5_Val)
  return fxj_dis5_val_;
}
inline void MarkPara::set_fxj_dis5_val(float value) {
  
  fxj_dis5_val_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fXj_Dis5_Val)
}

// float fJd_Dis1_Time = 11;
inline void MarkPara::clear_fjd_dis1_time() {
  fjd_dis1_time_ = 0;
}
inline float MarkPara::fjd_dis1_time() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fJd_Dis1_Time)
  return fjd_dis1_time_;
}
inline void MarkPara::set_fjd_dis1_time(float value) {
  
  fjd_dis1_time_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fJd_Dis1_Time)
}

// float fJd_Dis2_Time = 12;
inline void MarkPara::clear_fjd_dis2_time() {
  fjd_dis2_time_ = 0;
}
inline float MarkPara::fjd_dis2_time() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fJd_Dis2_Time)
  return fjd_dis2_time_;
}
inline void MarkPara::set_fjd_dis2_time(float value) {
  
  fjd_dis2_time_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fJd_Dis2_Time)
}

// float fJd_Dis3_Time = 13;
inline void MarkPara::clear_fjd_dis3_time() {
  fjd_dis3_time_ = 0;
}
inline float MarkPara::fjd_dis3_time() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fJd_Dis3_Time)
  return fjd_dis3_time_;
}
inline void MarkPara::set_fjd_dis3_time(float value) {
  
  fjd_dis3_time_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fJd_Dis3_Time)
}

// float fJd_Dis4_Time = 14;
inline void MarkPara::clear_fjd_dis4_time() {
  fjd_dis4_time_ = 0;
}
inline float MarkPara::fjd_dis4_time() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fJd_Dis4_Time)
  return fjd_dis4_time_;
}
inline void MarkPara::set_fjd_dis4_time(float value) {
  
  fjd_dis4_time_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fJd_Dis4_Time)
}

// float fJd_Dis5_Time = 15;
inline void MarkPara::clear_fjd_dis5_time() {
  fjd_dis5_time_ = 0;
}
inline float MarkPara::fjd_dis5_time() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fJd_Dis5_Time)
  return fjd_dis5_time_;
}
inline void MarkPara::set_fjd_dis5_time(float value) {
  
  fjd_dis5_time_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fJd_Dis5_Time)
}

// float fXj_Dis1_Time = 16;
inline void MarkPara::clear_fxj_dis1_time() {
  fxj_dis1_time_ = 0;
}
inline float MarkPara::fxj_dis1_time() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fXj_Dis1_Time)
  return fxj_dis1_time_;
}
inline void MarkPara::set_fxj_dis1_time(float value) {
  
  fxj_dis1_time_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fXj_Dis1_Time)
}

// float fXj_Dis2_Time = 17;
inline void MarkPara::clear_fxj_dis2_time() {
  fxj_dis2_time_ = 0;
}
inline float MarkPara::fxj_dis2_time() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fXj_Dis2_Time)
  return fxj_dis2_time_;
}
inline void MarkPara::set_fxj_dis2_time(float value) {
  
  fxj_dis2_time_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fXj_Dis2_Time)
}

// float fXj_Dis3_Time = 18;
inline void MarkPara::clear_fxj_dis3_time() {
  fxj_dis3_time_ = 0;
}
inline float MarkPara::fxj_dis3_time() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fXj_Dis3_Time)
  return fxj_dis3_time_;
}
inline void MarkPara::set_fxj_dis3_time(float value) {
  
  fxj_dis3_time_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fXj_Dis3_Time)
}

// float fXj_Dis4_Time = 19;
inline void MarkPara::clear_fxj_dis4_time() {
  fxj_dis4_time_ = 0;
}
inline float MarkPara::fxj_dis4_time() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fXj_Dis4_Time)
  return fxj_dis4_time_;
}
inline void MarkPara::set_fxj_dis4_time(float value) {
  
  fxj_dis4_time_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fXj_Dis4_Time)
}

// float fXj_Dis5_Time = 20;
inline void MarkPara::clear_fxj_dis5_time() {
  fxj_dis5_time_ = 0;
}
inline float MarkPara::fxj_dis5_time() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fXj_Dis5_Time)
  return fxj_dis5_time_;
}
inline void MarkPara::set_fxj_dis5_time(float value) {
  
  fxj_dis5_time_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fXj_Dis5_Time)
}

// .Distance.KoMode Emode = 21;
inline void MarkPara::clear_emode() {
  emode_ = 0;
}
inline ::Distance::KoMode MarkPara::emode() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.Emode)
  return static_cast< ::Distance::KoMode >(emode_);
}
inline void MarkPara::set_emode(::Distance::KoMode value) {
  
  emode_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.Emode)
}

// float fKoOrRe = 22;
inline void MarkPara::clear_fkoorre() {
  fkoorre_ = 0;
}
inline float MarkPara::fkoorre() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fKoOrRe)
  return fkoorre_;
}
inline void MarkPara::set_fkoorre(float value) {
  
  fkoorre_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fKoOrRe)
}

// float fPhiOrIm = 23;
inline void MarkPara::clear_fphiorim() {
  fphiorim_ = 0;
}
inline float MarkPara::fphiorim() const {
  // @@protoc_insertion_point(field_get:Distance.MarkPara.fPhiOrIm)
  return fphiorim_;
}
inline void MarkPara::set_fphiorim(float value) {
  
  fphiorim_ = value;
  // @@protoc_insertion_point(field_set:Distance.MarkPara.fPhiOrIm)
}

// -------------------------------------------------------------------

// CommonPara

// float EDV = 1;
inline void CommonPara::clear_edv() {
  edv_ = 0;
}
inline float CommonPara::edv() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.EDV)
  return edv_;
}
inline void CommonPara::set_edv(float value) {
  
  edv_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.EDV)
}

// float EDI = 2;
inline void CommonPara::clear_edi() {
  edi_ = 0;
}
inline float CommonPara::edi() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.EDI)
  return edi_;
}
inline void CommonPara::set_edi(float value) {
  
  edi_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.EDI)
}

// float EDHZ = 3;
inline void CommonPara::clear_edhz() {
  edhz_ = 0;
}
inline float CommonPara::edhz() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.EDHZ)
  return edhz_;
}
inline void CommonPara::set_edhz(float value) {
  
  edhz_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.EDHZ)
}

// float PreFaultTime = 4;
inline void CommonPara::clear_prefaulttime() {
  prefaulttime_ = 0;
}
inline float CommonPara::prefaulttime() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.PreFaultTime)
  return prefaulttime_;
}
inline void CommonPara::set_prefaulttime(float value) {
  
  prefaulttime_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.PreFaultTime)
}

// float PostFaultTime = 5;
inline void CommonPara::clear_postfaulttime() {
  postfaulttime_ = 0;
}
inline float CommonPara::postfaulttime() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.PostFaultTime)
  return postfaulttime_;
}
inline void CommonPara::set_postfaulttime(float value) {
  
  postfaulttime_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.PostFaultTime)
}

// .Distance.FaultTrigeMode eFaultTrigMode = 6;
inline void CommonPara::clear_efaulttrigmode() {
  efaulttrigmode_ = 0;
}
inline ::Distance::FaultTrigeMode CommonPara::efaulttrigmode() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.eFaultTrigMode)
  return static_cast< ::Distance::FaultTrigeMode >(efaulttrigmode_);
}
inline void CommonPara::set_efaulttrigmode(::Distance::FaultTrigeMode value) {
  
  efaulttrigmode_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.eFaultTrigMode)
}

// .Distance.PTCON ePTCON = 7;
inline void CommonPara::clear_eptcon() {
  eptcon_ = 0;
}
inline ::Distance::PTCON CommonPara::eptcon() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.ePTCON)
  return static_cast< ::Distance::PTCON >(eptcon_);
}
inline void CommonPara::set_eptcon(::Distance::PTCON value) {
  
  eptcon_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.ePTCON)
}

// .Distance.CTPOINT eCTPOINT = 8;
inline void CommonPara::clear_ectpoint() {
  ectpoint_ = 0;
}
inline ::Distance::CTPOINT CommonPara::ectpoint() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.eCTPOINT)
  return static_cast< ::Distance::CTPOINT >(ectpoint_);
}
inline void CommonPara::set_ectpoint(::Distance::CTPOINT value) {
  
  ectpoint_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.eCTPOINT)
}

// .Distance.BCSIMULATION eBCSIMULATION = 9;
inline void CommonPara::clear_ebcsimulation() {
  ebcsimulation_ = 0;
}
inline ::Distance::BCSIMULATION CommonPara::ebcsimulation() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.eBCSIMULATION)
  return static_cast< ::Distance::BCSIMULATION >(ebcsimulation_);
}
inline void CommonPara::set_ebcsimulation(::Distance::BCSIMULATION value) {
  
  ebcsimulation_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.eBCSIMULATION)
}

// float TripTime = 10;
inline void CommonPara::clear_triptime() {
  triptime_ = 0;
}
inline float CommonPara::triptime() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.TripTime)
  return triptime_;
}
inline void CommonPara::set_triptime(float value) {
  
  triptime_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.TripTime)
}

// float CloseTime = 11;
inline void CommonPara::clear_closetime() {
  closetime_ = 0;
}
inline float CommonPara::closetime() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.CloseTime)
  return closetime_;
}
inline void CommonPara::set_closetime(float value) {
  
  closetime_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.CloseTime)
}

// .Distance.RXS eRXS = 12;
inline void CommonPara::clear_erxs() {
  erxs_ = 0;
}
inline ::Distance::RXS CommonPara::erxs() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.eRXS)
  return static_cast< ::Distance::RXS >(erxs_);
}
inline void CommonPara::set_erxs(::Distance::RXS value) {
  
  erxs_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.eRXS)
}

// .Distance.VZDEFINE eVZDEFINE = 13;
inline void CommonPara::clear_evzdefine() {
  evzdefine_ = 0;
}
inline ::Distance::VZDEFINE CommonPara::evzdefine() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.eVZDEFINE)
  return static_cast< ::Distance::VZDEFINE >(evzdefine_);
}
inline void CommonPara::set_evzdefine(::Distance::VZDEFINE value) {
  
  evzdefine_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.eVZDEFINE)
}

// .Distance.VZPHDEFINE eVZPHDEFINE = 14;
inline void CommonPara::clear_evzphdefine() {
  evzphdefine_ = 0;
}
inline ::Distance::VZPHDEFINE CommonPara::evzphdefine() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.eVZPHDEFINE)
  return static_cast< ::Distance::VZPHDEFINE >(evzphdefine_);
}
inline void CommonPara::set_evzphdefine(::Distance::VZPHDEFINE value) {
  
  evzphdefine_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.eVZPHDEFINE)
}

// float VzPhdiff = 15;
inline void CommonPara::clear_vzphdiff() {
  vzphdiff_ = 0;
}
inline float CommonPara::vzphdiff() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.VzPhdiff)
  return vzphdiff_;
}
inline void CommonPara::set_vzphdiff(float value) {
  
  vzphdiff_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.VzPhdiff)
}

// float GpsTime = 16;
inline void CommonPara::clear_gpstime() {
  gpstime_ = 0;
}
inline float CommonPara::gpstime() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.GpsTime)
  return gpstime_;
}
inline void CommonPara::set_gpstime(float value) {
  
  gpstime_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.GpsTime)
}

// uint32 SwitchChanel = 17;
inline void CommonPara::clear_switchchanel() {
  switchchanel_ = 0u;
}
inline ::google::protobuf::uint32 CommonPara::switchchanel() const {
  // @@protoc_insertion_point(field_get:Distance.CommonPara.SwitchChanel)
  return switchchanel_;
}
inline void CommonPara::set_switchchanel(::google::protobuf::uint32 value) {
  
  switchchanel_ = value;
  // @@protoc_insertion_point(field_set:Distance.CommonPara.SwitchChanel)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Distance

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Distance::Error_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::Error_type>() {
  return ::Distance::Error_type_descriptor();
}
template <> struct is_proto_enum< ::Distance::Error_Dirc> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::Error_Dirc>() {
  return ::Distance::Error_Dirc_descriptor();
}
template <> struct is_proto_enum< ::Distance::Error_Nature> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::Error_Nature>() {
  return ::Distance::Error_Nature_descriptor();
}
template <> struct is_proto_enum< ::Distance::OutPutType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::OutPutType>() {
  return ::Distance::OutPutType_descriptor();
}
template <> struct is_proto_enum< ::Distance::KoMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::KoMode>() {
  return ::Distance::KoMode_descriptor();
}
template <> struct is_proto_enum< ::Distance::FaultTrigeMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::FaultTrigeMode>() {
  return ::Distance::FaultTrigeMode_descriptor();
}
template <> struct is_proto_enum< ::Distance::PTCON> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::PTCON>() {
  return ::Distance::PTCON_descriptor();
}
template <> struct is_proto_enum< ::Distance::CTPOINT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::CTPOINT>() {
  return ::Distance::CTPOINT_descriptor();
}
template <> struct is_proto_enum< ::Distance::BCSIMULATION> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::BCSIMULATION>() {
  return ::Distance::BCSIMULATION_descriptor();
}
template <> struct is_proto_enum< ::Distance::RXS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::RXS>() {
  return ::Distance::RXS_descriptor();
}
template <> struct is_proto_enum< ::Distance::VZDEFINE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::VZDEFINE>() {
  return ::Distance::VZDEFINE_descriptor();
}
template <> struct is_proto_enum< ::Distance::VZPHDEFINE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Distance::VZPHDEFINE>() {
  return ::Distance::VZPHDEFINE_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Distance_2eproto__INCLUDED
