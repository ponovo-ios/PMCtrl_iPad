// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hqyGoosePublish.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hqyGoosePublish.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace hqyGoose_Pub_Setting {
class Control_BlockDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Control_Block> {
} _Control_Block_default_instance_;
class Goose_PublishDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Goose_Publish> {
} _Goose_Publish_default_instance_;

namespace protobuf_hqyGoosePublish_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, iedname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, gocbref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, timeallowtolive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, dataset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, goid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, ndscom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, testflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, srcmac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, destmac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, vlan_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, vlan_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, confrecv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, isoutput_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Control_Block, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goose_Publish, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goose_Publish, block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goose_Publish, emergencydeliverytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goose_Publish, fasterdeliverytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goose_Publish, stabledeliverytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goose_Publish, timequalityflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Goose_Publish, packagetimeinterval_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Control_Block)},
  { 20, -1, sizeof(Goose_Publish)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Control_Block_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Goose_Publish_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "hqyGoosePublish.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _Control_Block_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Goose_Publish_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::hqyGooseCommon::protobuf_hqyGooseCommon_2eproto::InitDefaults();
  _Control_Block_default_instance_.DefaultConstruct();
  _Goose_Publish_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\025hqyGoosePublish.proto\022\024hqyGoose_Pub_Se"
      "tting\032\024hqyGooseCommon.proto\"\304\002\n\rControl_"
      "Block\022\017\n\007IedName\030\001 \001(\t\022\017\n\007gocbRef\030\002 \001(\t\022"
      "\027\n\017timeAllowToLive\030\003 \001(\r\022\017\n\007DataSet\030\004 \001("
      "\t\022\014\n\004goID\030\005 \001(\t\022\016\n\006ndsCom\030\006 \001(\010\022\020\n\010testF"
      "lag\030\007 \001(\010\022\r\n\005APPID\030\010 \001(\r\022\016\n\006SrcMAC\030\t \001(\t"
      "\022\017\n\007DestMac\030\n \001(\t\022\017\n\007VLAN_ID\030\013 \001(\005\022\025\n\rVL"
      "AN_Priority\030\014 \001(\005\022\020\n\010ConfRecv\030\r \001(\r\022\014\n\004P"
      "ort\030\016 \001(\005\022\020\n\010IsOutput\030\017 \001(\010\022-\n\007Channel\030\020"
      " \003(\0132\034.hqyGooseCommon.Channel_Info\"\320\001\n\rG"
      "oose_Publish\0222\n\005Block\030\001 \003(\0132#.hqyGoose_P"
      "ub_Setting.Control_Block\022\035\n\025EmergencyDel"
      "iveryTime\030\002 \001(\005\022\032\n\022FasterDeliveryTime\030\003 "
      "\001(\005\022\032\n\022StableDeliveryTime\030\004 \001(\005\022\027\n\017TimeQ"
      "ualityFlag\030\005 \001(\005\022\033\n\023PackageTimeInterval\030"
      "\006 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 613);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hqyGoosePublish.proto", &protobuf_RegisterTypes);
  ::hqyGooseCommon::protobuf_hqyGooseCommon_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_hqyGoosePublish_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Control_Block::kIedNameFieldNumber;
const int Control_Block::kGocbRefFieldNumber;
const int Control_Block::kTimeAllowToLiveFieldNumber;
const int Control_Block::kDataSetFieldNumber;
const int Control_Block::kGoIDFieldNumber;
const int Control_Block::kNdsComFieldNumber;
const int Control_Block::kTestFlagFieldNumber;
const int Control_Block::kAPPIDFieldNumber;
const int Control_Block::kSrcMACFieldNumber;
const int Control_Block::kDestMacFieldNumber;
const int Control_Block::kVLANIDFieldNumber;
const int Control_Block::kVLANPriorityFieldNumber;
const int Control_Block::kConfRecvFieldNumber;
const int Control_Block::kPortFieldNumber;
const int Control_Block::kIsOutputFieldNumber;
const int Control_Block::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Control_Block::Control_Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyGoosePublish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyGoose_Pub_Setting.Control_Block)
}
Control_Block::Control_Block(const Control_Block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_(from.channel_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  iedname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.iedname().size() > 0) {
    iedname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iedname_);
  }
  gocbref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gocbref().size() > 0) {
    gocbref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gocbref_);
  }
  dataset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dataset().size() > 0) {
    dataset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_);
  }
  goid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.goid().size() > 0) {
    goid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goid_);
  }
  srcmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srcmac().size() > 0) {
    srcmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcmac_);
  }
  destmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destmac().size() > 0) {
    destmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destmac_);
  }
  ::memcpy(&timeallowtolive_, &from.timeallowtolive_,
    reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&timeallowtolive_) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:hqyGoose_Pub_Setting.Control_Block)
}

void Control_Block::SharedCtor() {
  iedname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gocbref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destmac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timeallowtolive_, 0, reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&timeallowtolive_) + sizeof(port_));
  _cached_size_ = 0;
}

Control_Block::~Control_Block() {
  // @@protoc_insertion_point(destructor:hqyGoose_Pub_Setting.Control_Block)
  SharedDtor();
}

void Control_Block::SharedDtor() {
  iedname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gocbref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destmac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Control_Block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Control_Block::descriptor() {
  protobuf_hqyGoosePublish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyGoosePublish_2eproto::file_level_metadata[0].descriptor;
}

const Control_Block& Control_Block::default_instance() {
  protobuf_hqyGoosePublish_2eproto::InitDefaults();
  return *internal_default_instance();
}

Control_Block* Control_Block::New(::google::protobuf::Arena* arena) const {
  Control_Block* n = new Control_Block;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Control_Block::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyGoose_Pub_Setting.Control_Block)
  channel_.Clear();
  iedname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gocbref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcmac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destmac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timeallowtolive_, 0, reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&timeallowtolive_) + sizeof(port_));
}

bool Control_Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyGoose_Pub_Setting.Control_Block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string IedName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iedname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->iedname().data(), this->iedname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hqyGoose_Pub_Setting.Control_Block.IedName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gocbRef = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gocbref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gocbref().data(), this->gocbref().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hqyGoose_Pub_Setting.Control_Block.gocbRef"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 timeAllowToLive = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeallowtolive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DataSet = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dataset()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dataset().data(), this->dataset().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hqyGoose_Pub_Setting.Control_Block.DataSet"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string goID = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->goid().data(), this->goid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hqyGoose_Pub_Setting.Control_Block.goID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ndsCom = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ndscom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool testFlag = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &testflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 APPID = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SrcMAC = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcmac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcmac().data(), this->srcmac().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hqyGoose_Pub_Setting.Control_Block.SrcMAC"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DestMac = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destmac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destmac().data(), this->destmac().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "hqyGoose_Pub_Setting.Control_Block.DestMac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 VLAN_ID = 11;
      case 11: {
        if (tag == 88u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vlan_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 VLAN_Priority = 12;
      case 12: {
        if (tag == 96u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vlan_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ConfRecv = 13;
      case 13: {
        if (tag == 104u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confrecv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Port = 14;
      case 14: {
        if (tag == 112u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsOutput = 15;
      case 15: {
        if (tag == 120u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isoutput_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .hqyGooseCommon.Channel_Info Channel = 16;
      case 16: {
        if (tag == 130u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_channel()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyGoose_Pub_Setting.Control_Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyGoose_Pub_Setting.Control_Block)
  return false;
#undef DO_
}

void Control_Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyGoose_Pub_Setting.Control_Block)
  // string IedName = 1;
  if (this->iedname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iedname().data(), this->iedname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.IedName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->iedname(), output);
  }

  // string gocbRef = 2;
  if (this->gocbref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gocbref().data(), this->gocbref().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.gocbRef");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gocbref(), output);
  }

  // uint32 timeAllowToLive = 3;
  if (this->timeallowtolive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->timeallowtolive(), output);
  }

  // string DataSet = 4;
  if (this->dataset().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset().data(), this->dataset().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.DataSet");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->dataset(), output);
  }

  // string goID = 5;
  if (this->goid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->goid().data(), this->goid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.goID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->goid(), output);
  }

  // bool ndsCom = 6;
  if (this->ndscom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->ndscom(), output);
  }

  // bool testFlag = 7;
  if (this->testflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->testflag(), output);
  }

  // uint32 APPID = 8;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->appid(), output);
  }

  // string SrcMAC = 9;
  if (this->srcmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcmac().data(), this->srcmac().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.SrcMAC");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->srcmac(), output);
  }

  // string DestMac = 10;
  if (this->destmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destmac().data(), this->destmac().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.DestMac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->destmac(), output);
  }

  // int32 VLAN_ID = 11;
  if (this->vlan_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->vlan_id(), output);
  }

  // int32 VLAN_Priority = 12;
  if (this->vlan_priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->vlan_priority(), output);
  }

  // uint32 ConfRecv = 13;
  if (this->confrecv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->confrecv(), output);
  }

  // int32 Port = 14;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->port(), output);
  }

  // bool IsOutput = 15;
  if (this->isoutput() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->isoutput(), output);
  }

  // repeated .hqyGooseCommon.Channel_Info Channel = 16;
  for (unsigned int i = 0, n = this->channel_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->channel(i), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyGoose_Pub_Setting.Control_Block)
}

::google::protobuf::uint8* Control_Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyGoose_Pub_Setting.Control_Block)
  // string IedName = 1;
  if (this->iedname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iedname().data(), this->iedname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.IedName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->iedname(), target);
  }

  // string gocbRef = 2;
  if (this->gocbref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gocbref().data(), this->gocbref().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.gocbRef");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gocbref(), target);
  }

  // uint32 timeAllowToLive = 3;
  if (this->timeallowtolive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->timeallowtolive(), target);
  }

  // string DataSet = 4;
  if (this->dataset().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset().data(), this->dataset().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.DataSet");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->dataset(), target);
  }

  // string goID = 5;
  if (this->goid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->goid().data(), this->goid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.goID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->goid(), target);
  }

  // bool ndsCom = 6;
  if (this->ndscom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->ndscom(), target);
  }

  // bool testFlag = 7;
  if (this->testflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->testflag(), target);
  }

  // uint32 APPID = 8;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->appid(), target);
  }

  // string SrcMAC = 9;
  if (this->srcmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcmac().data(), this->srcmac().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.SrcMAC");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->srcmac(), target);
  }

  // string DestMac = 10;
  if (this->destmac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destmac().data(), this->destmac().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "hqyGoose_Pub_Setting.Control_Block.DestMac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->destmac(), target);
  }

  // int32 VLAN_ID = 11;
  if (this->vlan_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->vlan_id(), target);
  }

  // int32 VLAN_Priority = 12;
  if (this->vlan_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->vlan_priority(), target);
  }

  // uint32 ConfRecv = 13;
  if (this->confrecv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->confrecv(), target);
  }

  // int32 Port = 14;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->port(), target);
  }

  // bool IsOutput = 15;
  if (this->isoutput() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->isoutput(), target);
  }

  // repeated .hqyGooseCommon.Channel_Info Channel = 16;
  for (unsigned int i = 0, n = this->channel_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, this->channel(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyGoose_Pub_Setting.Control_Block)
  return target;
}

size_t Control_Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyGoose_Pub_Setting.Control_Block)
  size_t total_size = 0;

  // repeated .hqyGooseCommon.Channel_Info Channel = 16;
  {
    unsigned int count = this->channel_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->channel(i));
    }
  }

  // string IedName = 1;
  if (this->iedname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iedname());
  }

  // string gocbRef = 2;
  if (this->gocbref().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gocbref());
  }

  // string DataSet = 4;
  if (this->dataset().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dataset());
  }

  // string goID = 5;
  if (this->goid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->goid());
  }

  // string SrcMAC = 9;
  if (this->srcmac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcmac());
  }

  // string DestMac = 10;
  if (this->destmac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destmac());
  }

  // uint32 timeAllowToLive = 3;
  if (this->timeallowtolive() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeallowtolive());
  }

  // uint32 APPID = 8;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  // bool ndsCom = 6;
  if (this->ndscom() != 0) {
    total_size += 1 + 1;
  }

  // bool testFlag = 7;
  if (this->testflag() != 0) {
    total_size += 1 + 1;
  }

  // bool IsOutput = 15;
  if (this->isoutput() != 0) {
    total_size += 1 + 1;
  }

  // int32 VLAN_ID = 11;
  if (this->vlan_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vlan_id());
  }

  // int32 VLAN_Priority = 12;
  if (this->vlan_priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vlan_priority());
  }

  // uint32 ConfRecv = 13;
  if (this->confrecv() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confrecv());
  }

  // int32 Port = 14;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Control_Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyGoose_Pub_Setting.Control_Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Control_Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Control_Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyGoose_Pub_Setting.Control_Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyGoose_Pub_Setting.Control_Block)
    MergeFrom(*source);
  }
}

void Control_Block::MergeFrom(const Control_Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyGoose_Pub_Setting.Control_Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_.MergeFrom(from.channel_);
  if (from.iedname().size() > 0) {

    iedname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iedname_);
  }
  if (from.gocbref().size() > 0) {

    gocbref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gocbref_);
  }
  if (from.dataset().size() > 0) {

    dataset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_);
  }
  if (from.goid().size() > 0) {

    goid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.goid_);
  }
  if (from.srcmac().size() > 0) {

    srcmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcmac_);
  }
  if (from.destmac().size() > 0) {

    destmac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destmac_);
  }
  if (from.timeallowtolive() != 0) {
    set_timeallowtolive(from.timeallowtolive());
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.ndscom() != 0) {
    set_ndscom(from.ndscom());
  }
  if (from.testflag() != 0) {
    set_testflag(from.testflag());
  }
  if (from.isoutput() != 0) {
    set_isoutput(from.isoutput());
  }
  if (from.vlan_id() != 0) {
    set_vlan_id(from.vlan_id());
  }
  if (from.vlan_priority() != 0) {
    set_vlan_priority(from.vlan_priority());
  }
  if (from.confrecv() != 0) {
    set_confrecv(from.confrecv());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void Control_Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyGoose_Pub_Setting.Control_Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Control_Block::CopyFrom(const Control_Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyGoose_Pub_Setting.Control_Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Control_Block::IsInitialized() const {
  return true;
}

void Control_Block::Swap(Control_Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Control_Block::InternalSwap(Control_Block* other) {
  channel_.UnsafeArenaSwap(&other->channel_);
  iedname_.Swap(&other->iedname_);
  gocbref_.Swap(&other->gocbref_);
  dataset_.Swap(&other->dataset_);
  goid_.Swap(&other->goid_);
  srcmac_.Swap(&other->srcmac_);
  destmac_.Swap(&other->destmac_);
  std::swap(timeallowtolive_, other->timeallowtolive_);
  std::swap(appid_, other->appid_);
  std::swap(ndscom_, other->ndscom_);
  std::swap(testflag_, other->testflag_);
  std::swap(isoutput_, other->isoutput_);
  std::swap(vlan_id_, other->vlan_id_);
  std::swap(vlan_priority_, other->vlan_priority_);
  std::swap(confrecv_, other->confrecv_);
  std::swap(port_, other->port_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Control_Block::GetMetadata() const {
  protobuf_hqyGoosePublish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyGoosePublish_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Control_Block

// string IedName = 1;
void Control_Block::clear_iedname() {
  iedname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Control_Block::iedname() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.IedName)
  return iedname_.GetNoArena();
}
void Control_Block::set_iedname(const ::std::string& value) {
  
  iedname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.IedName)
}
#if LANG_CXX11
void Control_Block::set_iedname(::std::string&& value) {
  
  iedname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGoose_Pub_Setting.Control_Block.IedName)
}
#endif
void Control_Block::set_iedname(const char* value) {
  
  iedname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGoose_Pub_Setting.Control_Block.IedName)
}
void Control_Block::set_iedname(const char* value, size_t size) {
  
  iedname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGoose_Pub_Setting.Control_Block.IedName)
}
::std::string* Control_Block::mutable_iedname() {
  
  // @@protoc_insertion_point(field_mutable:hqyGoose_Pub_Setting.Control_Block.IedName)
  return iedname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Control_Block::release_iedname() {
  // @@protoc_insertion_point(field_release:hqyGoose_Pub_Setting.Control_Block.IedName)
  
  return iedname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Control_Block::set_allocated_iedname(::std::string* iedname) {
  if (iedname != NULL) {
    
  } else {
    
  }
  iedname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iedname);
  // @@protoc_insertion_point(field_set_allocated:hqyGoose_Pub_Setting.Control_Block.IedName)
}

// string gocbRef = 2;
void Control_Block::clear_gocbref() {
  gocbref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Control_Block::gocbref() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.gocbRef)
  return gocbref_.GetNoArena();
}
void Control_Block::set_gocbref(const ::std::string& value) {
  
  gocbref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.gocbRef)
}
#if LANG_CXX11
void Control_Block::set_gocbref(::std::string&& value) {
  
  gocbref_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGoose_Pub_Setting.Control_Block.gocbRef)
}
#endif
void Control_Block::set_gocbref(const char* value) {
  
  gocbref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGoose_Pub_Setting.Control_Block.gocbRef)
}
void Control_Block::set_gocbref(const char* value, size_t size) {
  
  gocbref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGoose_Pub_Setting.Control_Block.gocbRef)
}
::std::string* Control_Block::mutable_gocbref() {
  
  // @@protoc_insertion_point(field_mutable:hqyGoose_Pub_Setting.Control_Block.gocbRef)
  return gocbref_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Control_Block::release_gocbref() {
  // @@protoc_insertion_point(field_release:hqyGoose_Pub_Setting.Control_Block.gocbRef)
  
  return gocbref_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Control_Block::set_allocated_gocbref(::std::string* gocbref) {
  if (gocbref != NULL) {
    
  } else {
    
  }
  gocbref_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gocbref);
  // @@protoc_insertion_point(field_set_allocated:hqyGoose_Pub_Setting.Control_Block.gocbRef)
}

// uint32 timeAllowToLive = 3;
void Control_Block::clear_timeallowtolive() {
  timeallowtolive_ = 0u;
}
::google::protobuf::uint32 Control_Block::timeallowtolive() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.timeAllowToLive)
  return timeallowtolive_;
}
void Control_Block::set_timeallowtolive(::google::protobuf::uint32 value) {
  
  timeallowtolive_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.timeAllowToLive)
}

// string DataSet = 4;
void Control_Block::clear_dataset() {
  dataset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Control_Block::dataset() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.DataSet)
  return dataset_.GetNoArena();
}
void Control_Block::set_dataset(const ::std::string& value) {
  
  dataset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.DataSet)
}
#if LANG_CXX11
void Control_Block::set_dataset(::std::string&& value) {
  
  dataset_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGoose_Pub_Setting.Control_Block.DataSet)
}
#endif
void Control_Block::set_dataset(const char* value) {
  
  dataset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGoose_Pub_Setting.Control_Block.DataSet)
}
void Control_Block::set_dataset(const char* value, size_t size) {
  
  dataset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGoose_Pub_Setting.Control_Block.DataSet)
}
::std::string* Control_Block::mutable_dataset() {
  
  // @@protoc_insertion_point(field_mutable:hqyGoose_Pub_Setting.Control_Block.DataSet)
  return dataset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Control_Block::release_dataset() {
  // @@protoc_insertion_point(field_release:hqyGoose_Pub_Setting.Control_Block.DataSet)
  
  return dataset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Control_Block::set_allocated_dataset(::std::string* dataset) {
  if (dataset != NULL) {
    
  } else {
    
  }
  dataset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataset);
  // @@protoc_insertion_point(field_set_allocated:hqyGoose_Pub_Setting.Control_Block.DataSet)
}

// string goID = 5;
void Control_Block::clear_goid() {
  goid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Control_Block::goid() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.goID)
  return goid_.GetNoArena();
}
void Control_Block::set_goid(const ::std::string& value) {
  
  goid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.goID)
}
#if LANG_CXX11
void Control_Block::set_goid(::std::string&& value) {
  
  goid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGoose_Pub_Setting.Control_Block.goID)
}
#endif
void Control_Block::set_goid(const char* value) {
  
  goid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGoose_Pub_Setting.Control_Block.goID)
}
void Control_Block::set_goid(const char* value, size_t size) {
  
  goid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGoose_Pub_Setting.Control_Block.goID)
}
::std::string* Control_Block::mutable_goid() {
  
  // @@protoc_insertion_point(field_mutable:hqyGoose_Pub_Setting.Control_Block.goID)
  return goid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Control_Block::release_goid() {
  // @@protoc_insertion_point(field_release:hqyGoose_Pub_Setting.Control_Block.goID)
  
  return goid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Control_Block::set_allocated_goid(::std::string* goid) {
  if (goid != NULL) {
    
  } else {
    
  }
  goid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), goid);
  // @@protoc_insertion_point(field_set_allocated:hqyGoose_Pub_Setting.Control_Block.goID)
}

// bool ndsCom = 6;
void Control_Block::clear_ndscom() {
  ndscom_ = false;
}
bool Control_Block::ndscom() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.ndsCom)
  return ndscom_;
}
void Control_Block::set_ndscom(bool value) {
  
  ndscom_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.ndsCom)
}

// bool testFlag = 7;
void Control_Block::clear_testflag() {
  testflag_ = false;
}
bool Control_Block::testflag() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.testFlag)
  return testflag_;
}
void Control_Block::set_testflag(bool value) {
  
  testflag_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.testFlag)
}

// uint32 APPID = 8;
void Control_Block::clear_appid() {
  appid_ = 0u;
}
::google::protobuf::uint32 Control_Block::appid() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.APPID)
  return appid_;
}
void Control_Block::set_appid(::google::protobuf::uint32 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.APPID)
}

// string SrcMAC = 9;
void Control_Block::clear_srcmac() {
  srcmac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Control_Block::srcmac() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.SrcMAC)
  return srcmac_.GetNoArena();
}
void Control_Block::set_srcmac(const ::std::string& value) {
  
  srcmac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.SrcMAC)
}
#if LANG_CXX11
void Control_Block::set_srcmac(::std::string&& value) {
  
  srcmac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGoose_Pub_Setting.Control_Block.SrcMAC)
}
#endif
void Control_Block::set_srcmac(const char* value) {
  
  srcmac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGoose_Pub_Setting.Control_Block.SrcMAC)
}
void Control_Block::set_srcmac(const char* value, size_t size) {
  
  srcmac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGoose_Pub_Setting.Control_Block.SrcMAC)
}
::std::string* Control_Block::mutable_srcmac() {
  
  // @@protoc_insertion_point(field_mutable:hqyGoose_Pub_Setting.Control_Block.SrcMAC)
  return srcmac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Control_Block::release_srcmac() {
  // @@protoc_insertion_point(field_release:hqyGoose_Pub_Setting.Control_Block.SrcMAC)
  
  return srcmac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Control_Block::set_allocated_srcmac(::std::string* srcmac) {
  if (srcmac != NULL) {
    
  } else {
    
  }
  srcmac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcmac);
  // @@protoc_insertion_point(field_set_allocated:hqyGoose_Pub_Setting.Control_Block.SrcMAC)
}

// string DestMac = 10;
void Control_Block::clear_destmac() {
  destmac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Control_Block::destmac() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.DestMac)
  return destmac_.GetNoArena();
}
void Control_Block::set_destmac(const ::std::string& value) {
  
  destmac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.DestMac)
}
#if LANG_CXX11
void Control_Block::set_destmac(::std::string&& value) {
  
  destmac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:hqyGoose_Pub_Setting.Control_Block.DestMac)
}
#endif
void Control_Block::set_destmac(const char* value) {
  
  destmac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:hqyGoose_Pub_Setting.Control_Block.DestMac)
}
void Control_Block::set_destmac(const char* value, size_t size) {
  
  destmac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:hqyGoose_Pub_Setting.Control_Block.DestMac)
}
::std::string* Control_Block::mutable_destmac() {
  
  // @@protoc_insertion_point(field_mutable:hqyGoose_Pub_Setting.Control_Block.DestMac)
  return destmac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Control_Block::release_destmac() {
  // @@protoc_insertion_point(field_release:hqyGoose_Pub_Setting.Control_Block.DestMac)
  
  return destmac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Control_Block::set_allocated_destmac(::std::string* destmac) {
  if (destmac != NULL) {
    
  } else {
    
  }
  destmac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destmac);
  // @@protoc_insertion_point(field_set_allocated:hqyGoose_Pub_Setting.Control_Block.DestMac)
}

// int32 VLAN_ID = 11;
void Control_Block::clear_vlan_id() {
  vlan_id_ = 0;
}
::google::protobuf::int32 Control_Block::vlan_id() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.VLAN_ID)
  return vlan_id_;
}
void Control_Block::set_vlan_id(::google::protobuf::int32 value) {
  
  vlan_id_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.VLAN_ID)
}

// int32 VLAN_Priority = 12;
void Control_Block::clear_vlan_priority() {
  vlan_priority_ = 0;
}
::google::protobuf::int32 Control_Block::vlan_priority() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.VLAN_Priority)
  return vlan_priority_;
}
void Control_Block::set_vlan_priority(::google::protobuf::int32 value) {
  
  vlan_priority_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.VLAN_Priority)
}

// uint32 ConfRecv = 13;
void Control_Block::clear_confrecv() {
  confrecv_ = 0u;
}
::google::protobuf::uint32 Control_Block::confrecv() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.ConfRecv)
  return confrecv_;
}
void Control_Block::set_confrecv(::google::protobuf::uint32 value) {
  
  confrecv_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.ConfRecv)
}

// int32 Port = 14;
void Control_Block::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 Control_Block::port() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.Port)
  return port_;
}
void Control_Block::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.Port)
}

// bool IsOutput = 15;
void Control_Block::clear_isoutput() {
  isoutput_ = false;
}
bool Control_Block::isoutput() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.IsOutput)
  return isoutput_;
}
void Control_Block::set_isoutput(bool value) {
  
  isoutput_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Control_Block.IsOutput)
}

// repeated .hqyGooseCommon.Channel_Info Channel = 16;
int Control_Block::channel_size() const {
  return channel_.size();
}
void Control_Block::clear_channel() {
  channel_.Clear();
}
const ::hqyGooseCommon::Channel_Info& Control_Block::channel(int index) const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Control_Block.Channel)
  return channel_.Get(index);
}
::hqyGooseCommon::Channel_Info* Control_Block::mutable_channel(int index) {
  // @@protoc_insertion_point(field_mutable:hqyGoose_Pub_Setting.Control_Block.Channel)
  return channel_.Mutable(index);
}
::hqyGooseCommon::Channel_Info* Control_Block::add_channel() {
  // @@protoc_insertion_point(field_add:hqyGoose_Pub_Setting.Control_Block.Channel)
  return channel_.Add();
}
::google::protobuf::RepeatedPtrField< ::hqyGooseCommon::Channel_Info >*
Control_Block::mutable_channel() {
  // @@protoc_insertion_point(field_mutable_list:hqyGoose_Pub_Setting.Control_Block.Channel)
  return &channel_;
}
const ::google::protobuf::RepeatedPtrField< ::hqyGooseCommon::Channel_Info >&
Control_Block::channel() const {
  // @@protoc_insertion_point(field_list:hqyGoose_Pub_Setting.Control_Block.Channel)
  return channel_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Goose_Publish::kBlockFieldNumber;
const int Goose_Publish::kEmergencyDeliveryTimeFieldNumber;
const int Goose_Publish::kFasterDeliveryTimeFieldNumber;
const int Goose_Publish::kStableDeliveryTimeFieldNumber;
const int Goose_Publish::kTimeQualityFlagFieldNumber;
const int Goose_Publish::kPackageTimeIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Goose_Publish::Goose_Publish()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_hqyGoosePublish_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hqyGoose_Pub_Setting.Goose_Publish)
}
Goose_Publish::Goose_Publish(const Goose_Publish& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      block_(from.block_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&emergencydeliverytime_, &from.emergencydeliverytime_,
    reinterpret_cast<char*>(&packagetimeinterval_) -
    reinterpret_cast<char*>(&emergencydeliverytime_) + sizeof(packagetimeinterval_));
  // @@protoc_insertion_point(copy_constructor:hqyGoose_Pub_Setting.Goose_Publish)
}

void Goose_Publish::SharedCtor() {
  ::memset(&emergencydeliverytime_, 0, reinterpret_cast<char*>(&packagetimeinterval_) -
    reinterpret_cast<char*>(&emergencydeliverytime_) + sizeof(packagetimeinterval_));
  _cached_size_ = 0;
}

Goose_Publish::~Goose_Publish() {
  // @@protoc_insertion_point(destructor:hqyGoose_Pub_Setting.Goose_Publish)
  SharedDtor();
}

void Goose_Publish::SharedDtor() {
}

void Goose_Publish::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Goose_Publish::descriptor() {
  protobuf_hqyGoosePublish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyGoosePublish_2eproto::file_level_metadata[1].descriptor;
}

const Goose_Publish& Goose_Publish::default_instance() {
  protobuf_hqyGoosePublish_2eproto::InitDefaults();
  return *internal_default_instance();
}

Goose_Publish* Goose_Publish::New(::google::protobuf::Arena* arena) const {
  Goose_Publish* n = new Goose_Publish;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Goose_Publish::Clear() {
// @@protoc_insertion_point(message_clear_start:hqyGoose_Pub_Setting.Goose_Publish)
  block_.Clear();
  ::memset(&emergencydeliverytime_, 0, reinterpret_cast<char*>(&packagetimeinterval_) -
    reinterpret_cast<char*>(&emergencydeliverytime_) + sizeof(packagetimeinterval_));
}

bool Goose_Publish::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hqyGoose_Pub_Setting.Goose_Publish)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .hqyGoose_Pub_Setting.Control_Block Block = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_block()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // int32 EmergencyDeliveryTime = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &emergencydeliverytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 FasterDeliveryTime = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fasterdeliverytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 StableDeliveryTime = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stabledeliverytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 TimeQualityFlag = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timequalityflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PackageTimeInterval = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &packagetimeinterval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hqyGoose_Pub_Setting.Goose_Publish)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hqyGoose_Pub_Setting.Goose_Publish)
  return false;
#undef DO_
}

void Goose_Publish::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hqyGoose_Pub_Setting.Goose_Publish)
  // repeated .hqyGoose_Pub_Setting.Control_Block Block = 1;
  for (unsigned int i = 0, n = this->block_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->block(i), output);
  }

  // int32 EmergencyDeliveryTime = 2;
  if (this->emergencydeliverytime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->emergencydeliverytime(), output);
  }

  // int32 FasterDeliveryTime = 3;
  if (this->fasterdeliverytime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fasterdeliverytime(), output);
  }

  // int32 StableDeliveryTime = 4;
  if (this->stabledeliverytime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->stabledeliverytime(), output);
  }

  // int32 TimeQualityFlag = 5;
  if (this->timequalityflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->timequalityflag(), output);
  }

  // int32 PackageTimeInterval = 6;
  if (this->packagetimeinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->packagetimeinterval(), output);
  }

  // @@protoc_insertion_point(serialize_end:hqyGoose_Pub_Setting.Goose_Publish)
}

::google::protobuf::uint8* Goose_Publish::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hqyGoose_Pub_Setting.Goose_Publish)
  // repeated .hqyGoose_Pub_Setting.Control_Block Block = 1;
  for (unsigned int i = 0, n = this->block_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->block(i), false, target);
  }

  // int32 EmergencyDeliveryTime = 2;
  if (this->emergencydeliverytime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->emergencydeliverytime(), target);
  }

  // int32 FasterDeliveryTime = 3;
  if (this->fasterdeliverytime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fasterdeliverytime(), target);
  }

  // int32 StableDeliveryTime = 4;
  if (this->stabledeliverytime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->stabledeliverytime(), target);
  }

  // int32 TimeQualityFlag = 5;
  if (this->timequalityflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->timequalityflag(), target);
  }

  // int32 PackageTimeInterval = 6;
  if (this->packagetimeinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->packagetimeinterval(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:hqyGoose_Pub_Setting.Goose_Publish)
  return target;
}

size_t Goose_Publish::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hqyGoose_Pub_Setting.Goose_Publish)
  size_t total_size = 0;

  // repeated .hqyGoose_Pub_Setting.Control_Block Block = 1;
  {
    unsigned int count = this->block_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->block(i));
    }
  }

  // int32 EmergencyDeliveryTime = 2;
  if (this->emergencydeliverytime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->emergencydeliverytime());
  }

  // int32 FasterDeliveryTime = 3;
  if (this->fasterdeliverytime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fasterdeliverytime());
  }

  // int32 StableDeliveryTime = 4;
  if (this->stabledeliverytime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stabledeliverytime());
  }

  // int32 TimeQualityFlag = 5;
  if (this->timequalityflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timequalityflag());
  }

  // int32 PackageTimeInterval = 6;
  if (this->packagetimeinterval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->packagetimeinterval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Goose_Publish::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hqyGoose_Pub_Setting.Goose_Publish)
  GOOGLE_DCHECK_NE(&from, this);
  const Goose_Publish* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Goose_Publish>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hqyGoose_Pub_Setting.Goose_Publish)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hqyGoose_Pub_Setting.Goose_Publish)
    MergeFrom(*source);
  }
}

void Goose_Publish::MergeFrom(const Goose_Publish& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hqyGoose_Pub_Setting.Goose_Publish)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  block_.MergeFrom(from.block_);
  if (from.emergencydeliverytime() != 0) {
    set_emergencydeliverytime(from.emergencydeliverytime());
  }
  if (from.fasterdeliverytime() != 0) {
    set_fasterdeliverytime(from.fasterdeliverytime());
  }
  if (from.stabledeliverytime() != 0) {
    set_stabledeliverytime(from.stabledeliverytime());
  }
  if (from.timequalityflag() != 0) {
    set_timequalityflag(from.timequalityflag());
  }
  if (from.packagetimeinterval() != 0) {
    set_packagetimeinterval(from.packagetimeinterval());
  }
}

void Goose_Publish::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hqyGoose_Pub_Setting.Goose_Publish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Goose_Publish::CopyFrom(const Goose_Publish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hqyGoose_Pub_Setting.Goose_Publish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Goose_Publish::IsInitialized() const {
  return true;
}

void Goose_Publish::Swap(Goose_Publish* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Goose_Publish::InternalSwap(Goose_Publish* other) {
  block_.UnsafeArenaSwap(&other->block_);
  std::swap(emergencydeliverytime_, other->emergencydeliverytime_);
  std::swap(fasterdeliverytime_, other->fasterdeliverytime_);
  std::swap(stabledeliverytime_, other->stabledeliverytime_);
  std::swap(timequalityflag_, other->timequalityflag_);
  std::swap(packagetimeinterval_, other->packagetimeinterval_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Goose_Publish::GetMetadata() const {
  protobuf_hqyGoosePublish_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_hqyGoosePublish_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Goose_Publish

// repeated .hqyGoose_Pub_Setting.Control_Block Block = 1;
int Goose_Publish::block_size() const {
  return block_.size();
}
void Goose_Publish::clear_block() {
  block_.Clear();
}
const ::hqyGoose_Pub_Setting::Control_Block& Goose_Publish::block(int index) const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Goose_Publish.Block)
  return block_.Get(index);
}
::hqyGoose_Pub_Setting::Control_Block* Goose_Publish::mutable_block(int index) {
  // @@protoc_insertion_point(field_mutable:hqyGoose_Pub_Setting.Goose_Publish.Block)
  return block_.Mutable(index);
}
::hqyGoose_Pub_Setting::Control_Block* Goose_Publish::add_block() {
  // @@protoc_insertion_point(field_add:hqyGoose_Pub_Setting.Goose_Publish.Block)
  return block_.Add();
}
::google::protobuf::RepeatedPtrField< ::hqyGoose_Pub_Setting::Control_Block >*
Goose_Publish::mutable_block() {
  // @@protoc_insertion_point(field_mutable_list:hqyGoose_Pub_Setting.Goose_Publish.Block)
  return &block_;
}
const ::google::protobuf::RepeatedPtrField< ::hqyGoose_Pub_Setting::Control_Block >&
Goose_Publish::block() const {
  // @@protoc_insertion_point(field_list:hqyGoose_Pub_Setting.Goose_Publish.Block)
  return block_;
}

// int32 EmergencyDeliveryTime = 2;
void Goose_Publish::clear_emergencydeliverytime() {
  emergencydeliverytime_ = 0;
}
::google::protobuf::int32 Goose_Publish::emergencydeliverytime() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Goose_Publish.EmergencyDeliveryTime)
  return emergencydeliverytime_;
}
void Goose_Publish::set_emergencydeliverytime(::google::protobuf::int32 value) {
  
  emergencydeliverytime_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Goose_Publish.EmergencyDeliveryTime)
}

// int32 FasterDeliveryTime = 3;
void Goose_Publish::clear_fasterdeliverytime() {
  fasterdeliverytime_ = 0;
}
::google::protobuf::int32 Goose_Publish::fasterdeliverytime() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Goose_Publish.FasterDeliveryTime)
  return fasterdeliverytime_;
}
void Goose_Publish::set_fasterdeliverytime(::google::protobuf::int32 value) {
  
  fasterdeliverytime_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Goose_Publish.FasterDeliveryTime)
}

// int32 StableDeliveryTime = 4;
void Goose_Publish::clear_stabledeliverytime() {
  stabledeliverytime_ = 0;
}
::google::protobuf::int32 Goose_Publish::stabledeliverytime() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Goose_Publish.StableDeliveryTime)
  return stabledeliverytime_;
}
void Goose_Publish::set_stabledeliverytime(::google::protobuf::int32 value) {
  
  stabledeliverytime_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Goose_Publish.StableDeliveryTime)
}

// int32 TimeQualityFlag = 5;
void Goose_Publish::clear_timequalityflag() {
  timequalityflag_ = 0;
}
::google::protobuf::int32 Goose_Publish::timequalityflag() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Goose_Publish.TimeQualityFlag)
  return timequalityflag_;
}
void Goose_Publish::set_timequalityflag(::google::protobuf::int32 value) {
  
  timequalityflag_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Goose_Publish.TimeQualityFlag)
}

// int32 PackageTimeInterval = 6;
void Goose_Publish::clear_packagetimeinterval() {
  packagetimeinterval_ = 0;
}
::google::protobuf::int32 Goose_Publish::packagetimeinterval() const {
  // @@protoc_insertion_point(field_get:hqyGoose_Pub_Setting.Goose_Publish.PackageTimeInterval)
  return packagetimeinterval_;
}
void Goose_Publish::set_packagetimeinterval(::google::protobuf::int32 value) {
  
  packagetimeinterval_ = value;
  // @@protoc_insertion_point(field_set:hqyGoose_Pub_Setting.Goose_Publish.PackageTimeInterval)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace hqyGoose_Pub_Setting

// @@protoc_insertion_point(global_scope)
