// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TesterOutputPara.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TesterOutputPara.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace TesterOutputPara {
class ChanelParaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ChanelPara> {
} _ChanelPara_default_instance_;
class ChanelModeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ChanelMode> {
} _ChanelMode_default_instance_;
class AC6U6IDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AC6U6I> {
} _AC6U6I_default_instance_;

namespace protobuf_TesterOutputPara_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChanelPara, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChanelPara, famptitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChanelPara, fphase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChanelPara, ffre_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChanelMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChanelMode, ocurchanel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChanelMode, ovolchanel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AC6U6I, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AC6U6I, ochanel_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ChanelPara)},
  { 7, -1, sizeof(ChanelMode)},
  { 13, -1, sizeof(AC6U6I)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChanelPara_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChanelMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AC6U6I_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "TesterOutputPara.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _ChanelPara_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ChanelMode_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _AC6U6I_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ChanelPara_default_instance_.DefaultConstruct();
  _ChanelMode_default_instance_.DefaultConstruct();
  _AC6U6I_default_instance_.DefaultConstruct();
  _AC6U6I_default_instance_.get_mutable()->ochanel_ = const_cast< ::TesterOutputPara::ChanelMode*>(
      ::TesterOutputPara::ChanelMode::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\026TesterOutputPara.proto\022\020TesterOutputPa"
      "ra\">\n\nChanelPara\022\022\n\nfamptitude\030\001 \001(\002\022\016\n\006"
      "fphase\030\002 \001(\002\022\014\n\004ffre\030\003 \001(\002\"p\n\nChanelMode"
      "\0220\n\noCurChanel\030\001 \003(\0132\034.TesterOutputPara."
      "ChanelPara\0220\n\noVolChanel\030\002 \003(\0132\034.TesterO"
      "utputPara.ChanelPara\"7\n\006AC6U6I\022-\n\007oChane"
      "l\030\001 \001(\0132\034.TesterOutputPara.ChanelModeb\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 285);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TesterOutputPara.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_TesterOutputPara_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChanelPara::kFamptitudeFieldNumber;
const int ChanelPara::kFphaseFieldNumber;
const int ChanelPara::kFfreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChanelPara::ChanelPara()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TesterOutputPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TesterOutputPara.ChanelPara)
}
ChanelPara::ChanelPara(const ChanelPara& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&famptitude_, &from.famptitude_,
    reinterpret_cast<char*>(&ffre_) -
    reinterpret_cast<char*>(&famptitude_) + sizeof(ffre_));
  // @@protoc_insertion_point(copy_constructor:TesterOutputPara.ChanelPara)
}

void ChanelPara::SharedCtor() {
  ::memset(&famptitude_, 0, reinterpret_cast<char*>(&ffre_) -
    reinterpret_cast<char*>(&famptitude_) + sizeof(ffre_));
  _cached_size_ = 0;
}

ChanelPara::~ChanelPara() {
  // @@protoc_insertion_point(destructor:TesterOutputPara.ChanelPara)
  SharedDtor();
}

void ChanelPara::SharedDtor() {
}

void ChanelPara::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChanelPara::descriptor() {
  protobuf_TesterOutputPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TesterOutputPara_2eproto::file_level_metadata[0].descriptor;
}

const ChanelPara& ChanelPara::default_instance() {
  protobuf_TesterOutputPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChanelPara* ChanelPara::New(::google::protobuf::Arena* arena) const {
  ChanelPara* n = new ChanelPara;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChanelPara::Clear() {
// @@protoc_insertion_point(message_clear_start:TesterOutputPara.ChanelPara)
  ::memset(&famptitude_, 0, reinterpret_cast<char*>(&ffre_) -
    reinterpret_cast<char*>(&famptitude_) + sizeof(ffre_));
}

bool ChanelPara::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TesterOutputPara.ChanelPara)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float famptitude = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &famptitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fphase = 2;
      case 2: {
        if (tag == 21u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fphase_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float ffre = 3;
      case 3: {
        if (tag == 29u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ffre_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TesterOutputPara.ChanelPara)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TesterOutputPara.ChanelPara)
  return false;
#undef DO_
}

void ChanelPara::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TesterOutputPara.ChanelPara)
  // float famptitude = 1;
  if (this->famptitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->famptitude(), output);
  }

  // float fphase = 2;
  if (this->fphase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->fphase(), output);
  }

  // float ffre = 3;
  if (this->ffre() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ffre(), output);
  }

  // @@protoc_insertion_point(serialize_end:TesterOutputPara.ChanelPara)
}

::google::protobuf::uint8* ChanelPara::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TesterOutputPara.ChanelPara)
  // float famptitude = 1;
  if (this->famptitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->famptitude(), target);
  }

  // float fphase = 2;
  if (this->fphase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->fphase(), target);
  }

  // float ffre = 3;
  if (this->ffre() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ffre(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TesterOutputPara.ChanelPara)
  return target;
}

size_t ChanelPara::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TesterOutputPara.ChanelPara)
  size_t total_size = 0;

  // float famptitude = 1;
  if (this->famptitude() != 0) {
    total_size += 1 + 4;
  }

  // float fphase = 2;
  if (this->fphase() != 0) {
    total_size += 1 + 4;
  }

  // float ffre = 3;
  if (this->ffre() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChanelPara::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TesterOutputPara.ChanelPara)
  GOOGLE_DCHECK_NE(&from, this);
  const ChanelPara* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChanelPara>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TesterOutputPara.ChanelPara)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TesterOutputPara.ChanelPara)
    MergeFrom(*source);
  }
}

void ChanelPara::MergeFrom(const ChanelPara& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TesterOutputPara.ChanelPara)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.famptitude() != 0) {
    set_famptitude(from.famptitude());
  }
  if (from.fphase() != 0) {
    set_fphase(from.fphase());
  }
  if (from.ffre() != 0) {
    set_ffre(from.ffre());
  }
}

void ChanelPara::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TesterOutputPara.ChanelPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChanelPara::CopyFrom(const ChanelPara& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TesterOutputPara.ChanelPara)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChanelPara::IsInitialized() const {
  return true;
}

void ChanelPara::Swap(ChanelPara* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChanelPara::InternalSwap(ChanelPara* other) {
  std::swap(famptitude_, other->famptitude_);
  std::swap(fphase_, other->fphase_);
  std::swap(ffre_, other->ffre_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChanelPara::GetMetadata() const {
  protobuf_TesterOutputPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TesterOutputPara_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChanelPara

// float famptitude = 1;
void ChanelPara::clear_famptitude() {
  famptitude_ = 0;
}
float ChanelPara::famptitude() const {
  // @@protoc_insertion_point(field_get:TesterOutputPara.ChanelPara.famptitude)
  return famptitude_;
}
void ChanelPara::set_famptitude(float value) {
  
  famptitude_ = value;
  // @@protoc_insertion_point(field_set:TesterOutputPara.ChanelPara.famptitude)
}

// float fphase = 2;
void ChanelPara::clear_fphase() {
  fphase_ = 0;
}
float ChanelPara::fphase() const {
  // @@protoc_insertion_point(field_get:TesterOutputPara.ChanelPara.fphase)
  return fphase_;
}
void ChanelPara::set_fphase(float value) {
  
  fphase_ = value;
  // @@protoc_insertion_point(field_set:TesterOutputPara.ChanelPara.fphase)
}

// float ffre = 3;
void ChanelPara::clear_ffre() {
  ffre_ = 0;
}
float ChanelPara::ffre() const {
  // @@protoc_insertion_point(field_get:TesterOutputPara.ChanelPara.ffre)
  return ffre_;
}
void ChanelPara::set_ffre(float value) {
  
  ffre_ = value;
  // @@protoc_insertion_point(field_set:TesterOutputPara.ChanelPara.ffre)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChanelMode::kOCurChanelFieldNumber;
const int ChanelMode::kOVolChanelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChanelMode::ChanelMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TesterOutputPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TesterOutputPara.ChanelMode)
}
ChanelMode::ChanelMode(const ChanelMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ocurchanel_(from.ocurchanel_),
      ovolchanel_(from.ovolchanel_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TesterOutputPara.ChanelMode)
}

void ChanelMode::SharedCtor() {
  _cached_size_ = 0;
}

ChanelMode::~ChanelMode() {
  // @@protoc_insertion_point(destructor:TesterOutputPara.ChanelMode)
  SharedDtor();
}

void ChanelMode::SharedDtor() {
}

void ChanelMode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChanelMode::descriptor() {
  protobuf_TesterOutputPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TesterOutputPara_2eproto::file_level_metadata[1].descriptor;
}

const ChanelMode& ChanelMode::default_instance() {
  protobuf_TesterOutputPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChanelMode* ChanelMode::New(::google::protobuf::Arena* arena) const {
  ChanelMode* n = new ChanelMode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChanelMode::Clear() {
// @@protoc_insertion_point(message_clear_start:TesterOutputPara.ChanelMode)
  ocurchanel_.Clear();
  ovolchanel_.Clear();
}

bool ChanelMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TesterOutputPara.ChanelMode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TesterOutputPara.ChanelPara oCurChanel = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ocurchanel()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .TesterOutputPara.ChanelPara oVolChanel = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ovolchanel()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TesterOutputPara.ChanelMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TesterOutputPara.ChanelMode)
  return false;
#undef DO_
}

void ChanelMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TesterOutputPara.ChanelMode)
  // repeated .TesterOutputPara.ChanelPara oCurChanel = 1;
  for (unsigned int i = 0, n = this->ocurchanel_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ocurchanel(i), output);
  }

  // repeated .TesterOutputPara.ChanelPara oVolChanel = 2;
  for (unsigned int i = 0, n = this->ovolchanel_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->ovolchanel(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TesterOutputPara.ChanelMode)
}

::google::protobuf::uint8* ChanelMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TesterOutputPara.ChanelMode)
  // repeated .TesterOutputPara.ChanelPara oCurChanel = 1;
  for (unsigned int i = 0, n = this->ocurchanel_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ocurchanel(i), false, target);
  }

  // repeated .TesterOutputPara.ChanelPara oVolChanel = 2;
  for (unsigned int i = 0, n = this->ovolchanel_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->ovolchanel(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TesterOutputPara.ChanelMode)
  return target;
}

size_t ChanelMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TesterOutputPara.ChanelMode)
  size_t total_size = 0;

  // repeated .TesterOutputPara.ChanelPara oCurChanel = 1;
  {
    unsigned int count = this->ocurchanel_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ocurchanel(i));
    }
  }

  // repeated .TesterOutputPara.ChanelPara oVolChanel = 2;
  {
    unsigned int count = this->ovolchanel_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ovolchanel(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChanelMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TesterOutputPara.ChanelMode)
  GOOGLE_DCHECK_NE(&from, this);
  const ChanelMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChanelMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TesterOutputPara.ChanelMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TesterOutputPara.ChanelMode)
    MergeFrom(*source);
  }
}

void ChanelMode::MergeFrom(const ChanelMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TesterOutputPara.ChanelMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ocurchanel_.MergeFrom(from.ocurchanel_);
  ovolchanel_.MergeFrom(from.ovolchanel_);
}

void ChanelMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TesterOutputPara.ChanelMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChanelMode::CopyFrom(const ChanelMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TesterOutputPara.ChanelMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChanelMode::IsInitialized() const {
  return true;
}

void ChanelMode::Swap(ChanelMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChanelMode::InternalSwap(ChanelMode* other) {
  ocurchanel_.UnsafeArenaSwap(&other->ocurchanel_);
  ovolchanel_.UnsafeArenaSwap(&other->ovolchanel_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChanelMode::GetMetadata() const {
  protobuf_TesterOutputPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TesterOutputPara_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChanelMode

// repeated .TesterOutputPara.ChanelPara oCurChanel = 1;
int ChanelMode::ocurchanel_size() const {
  return ocurchanel_.size();
}
void ChanelMode::clear_ocurchanel() {
  ocurchanel_.Clear();
}
const ::TesterOutputPara::ChanelPara& ChanelMode::ocurchanel(int index) const {
  // @@protoc_insertion_point(field_get:TesterOutputPara.ChanelMode.oCurChanel)
  return ocurchanel_.Get(index);
}
::TesterOutputPara::ChanelPara* ChanelMode::mutable_ocurchanel(int index) {
  // @@protoc_insertion_point(field_mutable:TesterOutputPara.ChanelMode.oCurChanel)
  return ocurchanel_.Mutable(index);
}
::TesterOutputPara::ChanelPara* ChanelMode::add_ocurchanel() {
  // @@protoc_insertion_point(field_add:TesterOutputPara.ChanelMode.oCurChanel)
  return ocurchanel_.Add();
}
::google::protobuf::RepeatedPtrField< ::TesterOutputPara::ChanelPara >*
ChanelMode::mutable_ocurchanel() {
  // @@protoc_insertion_point(field_mutable_list:TesterOutputPara.ChanelMode.oCurChanel)
  return &ocurchanel_;
}
const ::google::protobuf::RepeatedPtrField< ::TesterOutputPara::ChanelPara >&
ChanelMode::ocurchanel() const {
  // @@protoc_insertion_point(field_list:TesterOutputPara.ChanelMode.oCurChanel)
  return ocurchanel_;
}

// repeated .TesterOutputPara.ChanelPara oVolChanel = 2;
int ChanelMode::ovolchanel_size() const {
  return ovolchanel_.size();
}
void ChanelMode::clear_ovolchanel() {
  ovolchanel_.Clear();
}
const ::TesterOutputPara::ChanelPara& ChanelMode::ovolchanel(int index) const {
  // @@protoc_insertion_point(field_get:TesterOutputPara.ChanelMode.oVolChanel)
  return ovolchanel_.Get(index);
}
::TesterOutputPara::ChanelPara* ChanelMode::mutable_ovolchanel(int index) {
  // @@protoc_insertion_point(field_mutable:TesterOutputPara.ChanelMode.oVolChanel)
  return ovolchanel_.Mutable(index);
}
::TesterOutputPara::ChanelPara* ChanelMode::add_ovolchanel() {
  // @@protoc_insertion_point(field_add:TesterOutputPara.ChanelMode.oVolChanel)
  return ovolchanel_.Add();
}
::google::protobuf::RepeatedPtrField< ::TesterOutputPara::ChanelPara >*
ChanelMode::mutable_ovolchanel() {
  // @@protoc_insertion_point(field_mutable_list:TesterOutputPara.ChanelMode.oVolChanel)
  return &ovolchanel_;
}
const ::google::protobuf::RepeatedPtrField< ::TesterOutputPara::ChanelPara >&
ChanelMode::ovolchanel() const {
  // @@protoc_insertion_point(field_list:TesterOutputPara.ChanelMode.oVolChanel)
  return ovolchanel_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AC6U6I::kOChanelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AC6U6I::AC6U6I()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TesterOutputPara_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TesterOutputPara.AC6U6I)
}
AC6U6I::AC6U6I(const AC6U6I& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ochanel()) {
    ochanel_ = new ::TesterOutputPara::ChanelMode(*from.ochanel_);
  } else {
    ochanel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:TesterOutputPara.AC6U6I)
}

void AC6U6I::SharedCtor() {
  ochanel_ = NULL;
  _cached_size_ = 0;
}

AC6U6I::~AC6U6I() {
  // @@protoc_insertion_point(destructor:TesterOutputPara.AC6U6I)
  SharedDtor();
}

void AC6U6I::SharedDtor() {
  if (this != internal_default_instance()) {
    delete ochanel_;
  }
}

void AC6U6I::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AC6U6I::descriptor() {
  protobuf_TesterOutputPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TesterOutputPara_2eproto::file_level_metadata[2].descriptor;
}

const AC6U6I& AC6U6I::default_instance() {
  protobuf_TesterOutputPara_2eproto::InitDefaults();
  return *internal_default_instance();
}

AC6U6I* AC6U6I::New(::google::protobuf::Arena* arena) const {
  AC6U6I* n = new AC6U6I;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AC6U6I::Clear() {
// @@protoc_insertion_point(message_clear_start:TesterOutputPara.AC6U6I)
  if (GetArenaNoVirtual() == NULL && ochanel_ != NULL) {
    delete ochanel_;
  }
  ochanel_ = NULL;
}

bool AC6U6I::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TesterOutputPara.AC6U6I)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TesterOutputPara.ChanelMode oChanel = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ochanel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TesterOutputPara.AC6U6I)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TesterOutputPara.AC6U6I)
  return false;
#undef DO_
}

void AC6U6I::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TesterOutputPara.AC6U6I)
  // .TesterOutputPara.ChanelMode oChanel = 1;
  if (this->has_ochanel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ochanel_, output);
  }

  // @@protoc_insertion_point(serialize_end:TesterOutputPara.AC6U6I)
}

::google::protobuf::uint8* AC6U6I::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TesterOutputPara.AC6U6I)
  // .TesterOutputPara.ChanelMode oChanel = 1;
  if (this->has_ochanel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->ochanel_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TesterOutputPara.AC6U6I)
  return target;
}

size_t AC6U6I::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TesterOutputPara.AC6U6I)
  size_t total_size = 0;

  // .TesterOutputPara.ChanelMode oChanel = 1;
  if (this->has_ochanel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ochanel_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AC6U6I::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TesterOutputPara.AC6U6I)
  GOOGLE_DCHECK_NE(&from, this);
  const AC6U6I* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AC6U6I>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TesterOutputPara.AC6U6I)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TesterOutputPara.AC6U6I)
    MergeFrom(*source);
  }
}

void AC6U6I::MergeFrom(const AC6U6I& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TesterOutputPara.AC6U6I)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ochanel()) {
    mutable_ochanel()->::TesterOutputPara::ChanelMode::MergeFrom(from.ochanel());
  }
}

void AC6U6I::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TesterOutputPara.AC6U6I)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AC6U6I::CopyFrom(const AC6U6I& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TesterOutputPara.AC6U6I)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AC6U6I::IsInitialized() const {
  return true;
}

void AC6U6I::Swap(AC6U6I* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AC6U6I::InternalSwap(AC6U6I* other) {
  std::swap(ochanel_, other->ochanel_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AC6U6I::GetMetadata() const {
  protobuf_TesterOutputPara_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TesterOutputPara_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AC6U6I

// .TesterOutputPara.ChanelMode oChanel = 1;
bool AC6U6I::has_ochanel() const {
  return this != internal_default_instance() && ochanel_ != NULL;
}
void AC6U6I::clear_ochanel() {
  if (GetArenaNoVirtual() == NULL && ochanel_ != NULL) delete ochanel_;
  ochanel_ = NULL;
}
const ::TesterOutputPara::ChanelMode& AC6U6I::ochanel() const {
  // @@protoc_insertion_point(field_get:TesterOutputPara.AC6U6I.oChanel)
  return ochanel_ != NULL ? *ochanel_
                         : *::TesterOutputPara::ChanelMode::internal_default_instance();
}
::TesterOutputPara::ChanelMode* AC6U6I::mutable_ochanel() {
  
  if (ochanel_ == NULL) {
    ochanel_ = new ::TesterOutputPara::ChanelMode;
  }
  // @@protoc_insertion_point(field_mutable:TesterOutputPara.AC6U6I.oChanel)
  return ochanel_;
}
::TesterOutputPara::ChanelMode* AC6U6I::release_ochanel() {
  // @@protoc_insertion_point(field_release:TesterOutputPara.AC6U6I.oChanel)
  
  ::TesterOutputPara::ChanelMode* temp = ochanel_;
  ochanel_ = NULL;
  return temp;
}
void AC6U6I::set_allocated_ochanel(::TesterOutputPara::ChanelMode* ochanel) {
  delete ochanel_;
  ochanel_ = ochanel;
  if (ochanel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TesterOutputPara.AC6U6I.oChanel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace TesterOutputPara

// @@protoc_insertion_point(global_scope)
